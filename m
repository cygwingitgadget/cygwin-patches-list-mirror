Return-Path: <cygwin-patches-return-2514-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 26711 invoked by alias); 25 Jun 2002 12:46:20 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 26688 invoked from network); 25 Jun 2002 12:46:17 -0000
X-Authentication-Warning: atacama.four-d.de: mail set sender to <tpfaff@gmx.net> using -f
Date: Tue, 25 Jun 2002 07:20:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] pthread cancellation
Message-ID: <Pine.WNT.4.44.0206251403060.292-200000@algeria.intern.net>
X-X-Sender: pfaff@antarctica.intern.net
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="84341-22053-1025006658=:292"
Content-ID: <Pine.WNT.4.44.0206251405000.292@algeria.intern.net>
X-SW-Source: 2002-q2/txt/msg00497.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--84341-22053-1025006658=:292
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0206251405001.292@algeria.intern.net>
Content-length: 1737


This patch provides a pthread cancellation implementation.

Rob, please mail me if you can't read the attachment.

Thomas

2002-06-25  Thomas Pfaff  <tpfaff@gmx.net>

        * include/pthread.h (PTHREAD_CANCELED): Defined a reasonable
        value.
	* pthread.cc (pthread_exit): Call method instead of function.
	(pthread_setcancelstate): Ditto.
	(pthread_setcanceltype): Ditto.
	(pthread_testcancel): Ditto.
	* thread.h (pthread::cancel_event): New member.
        (__pthread_cancel_self): New prototype.
	(pthread::exit): New Method.
	(pthread::cancel): Ditto.
	(pthread::testcancel): Ditto.
	(pthread::cancel_self): Ditto.
	(pthread::static_cancel_self): Ditto.
	(pthread::setcancelstate): Ditto.
	(pthread::setcanceltype): Ditto.
	(__pthread_cancel): Give c++ linkage.
	(__pthread_exit): Remove.
	(__pthread_setcancelstate): Ditto.
	(__pthread_setcanceltype): Ditto.
	(__pthread_testcancel): Ditto.
	 * thread.cc (pthread::pthread): Inititialize cancel_event.
	(pthread::~pthread): Close cancel_event if needed.
	(pthread::create): Create cancel_event.
	(pthread::exit): New method. Replacement for __pthread_exit.
	(pthread::cancel): New method.
	(pthread::testcancel): Ditto.
	(pthread::static_cancel_self); New static method.
	(pthread::setcancelstate): New method. Replacement for
	__pthread_setcancelstate.
	(pthread::setcanceltype): New method. Replacement for
	__pthread_setcanceltype.
	(pthread::pop_cleanup_handler): Added lock for async cancel safe
	cancellation.
	(pthread::thread_init_wrapper): Change __pthread_exit to
	thread->exit().
	(__pthread_cancel): Call method thread->cancel().
	(__pthread_exit): Remove.
	(__pthread_setcancelstate): Ditto.
	(__pthread_setcanceltype): Ditto.
	(__pthread_testcancel): Ditto.

--84341-22053-1025006658=:292
Content-Type: TEXT/PLAIN; NAME="pthread_cancel.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0206251404180.292@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_cancel.patch"
Content-length: 21603

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJl
YWQuaCBzcmMvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaAotLS0g
c3JjLm9sZC93aW5zdXAvY3lnd2luL2luY2x1ZGUvcHRocmVhZC5oCU1vbiBK
dW4gMjQgMTA6NTE6NDggMjAwMgorKysgc3JjL3dpbnN1cC9jeWd3aW4vaW5j
bHVkZS9wdGhyZWFkLmgJTW9uIEp1biAyNCAxMDo1MToxNyAyMDAyCkBAIC00
Miw3ICs0Miw3IEBAIGV4dGVybiAiQyIKICNkZWZpbmUgUFRIUkVBRF9DQU5D
RUxfRU5BQkxFIDAKICNkZWZpbmUgUFRIUkVBRF9DQU5DRUxfREVGRVJSRUQg
MAogI2RlZmluZSBQVEhSRUFEX0NBTkNFTF9ESVNBQkxFIDEKLSNkZWZpbmUg
UFRIUkVBRF9DQU5DRUxFRAorI2RlZmluZSBQVEhSRUFEX0NBTkNFTEVEICgo
dm9pZCAqKS0xKQogLyogdGhpcyBzaG91bGQgYmUgYSB2YWx1ZSB0aGF0IGNh
biBuZXZlciBiZSBhIHZhbGlkIGFkZHJlc3MgKi8KICNkZWZpbmUgUFRIUkVB
RF9DT05EX0lOSVRJQUxJWkVSICh2b2lkICopMjEKICNkZWZpbmUgUFRIUkVB
RF9DUkVBVEVfREVUQUNIRUQgMQpkaWZmIC11cnAgc3JjLm9sZC93aW5zdXAv
Y3lnd2luL3B0aHJlYWQuY2Mgc3JjL3dpbnN1cC9jeWd3aW4vcHRocmVhZC5j
YwotLS0gc3JjLm9sZC93aW5zdXAvY3lnd2luL3B0aHJlYWQuY2MJTW9uIEp1
biAyNCAxMDo1MTo0OCAyMDAyCisrKyBzcmMvd2luc3VwL2N5Z3dpbi9wdGhy
ZWFkLmNjCU1vbiBKdW4gMjQgMTA6NTM6MDQgMjAwMgpAQCAtMTQwLDcgKzE0
MCw3IEBAIHB0aHJlYWRfYXR0cl9nZXRzdGFja2FkZHIgKGNvbnN0IHB0aHJl
YWQKIHZvaWQKIHB0aHJlYWRfZXhpdCAodm9pZCAqdmFsdWVfcHRyKQogewot
ICByZXR1cm4gX19wdGhyZWFkX2V4aXQgKHZhbHVlX3B0cik7CisgIHJldHVy
biBwdGhyZWFkOjpzZWxmKCktPmV4aXQgKHZhbHVlX3B0cik7CiB9CiAKIGlu
dApAQCAtNDI4LDI1ICs0MjgsMjUgQEAgcHRocmVhZF9jYW5jZWwgKHB0aHJl
YWRfdCB0aHJlYWQpCiBpbnQKIHB0aHJlYWRfc2V0Y2FuY2Vsc3RhdGUgKGlu
dCBzdGF0ZSwgaW50ICpvbGRzdGF0ZSkKIHsKLSAgcmV0dXJuIF9fcHRocmVh
ZF9zZXRjYW5jZWxzdGF0ZSAoc3RhdGUsIG9sZHN0YXRlKTsKKyAgcmV0dXJu
IHB0aHJlYWQ6OnNlbGYoKS0+c2V0Y2FuY2Vsc3RhdGUgKHN0YXRlLCBvbGRz
dGF0ZSk7CiB9CiAKIGludAogcHRocmVhZF9zZXRjYW5jZWx0eXBlIChpbnQg
dHlwZSwgaW50ICpvbGR0eXBlKQogewotICByZXR1cm4gX19wdGhyZWFkX3Nl
dGNhbmNlbHR5cGUgKHR5cGUsIG9sZHR5cGUpOworICByZXR1cm4gcHRocmVh
ZDo6c2VsZigpLT5zZXRjYW5jZWx0eXBlICh0eXBlLCBvbGR0eXBlKTsKIH0K
IAogdm9pZAogcHRocmVhZF90ZXN0Y2FuY2VsICh2b2lkKQogewotICBfX3B0
aHJlYWRfdGVzdGNhbmNlbCAoKTsKKyAgcHRocmVhZDo6c2VsZigpLT50ZXN0
Y2FuY2VsICgpOwogfQogCiB2b2lkCiBfcHRocmVhZF9jbGVhbnVwX3B1c2gg
KF9fcHRocmVhZF9jbGVhbnVwX2hhbmRsZXIgKmhhbmRsZXIpCiB7Ci0gIHB0
aHJlYWQ6OnNlbGYoKS0+cHVzaF9jbGVhbnVwX2hhbmRsZXIoaGFuZGxlcik7
CisgIHB0aHJlYWQ6OnNlbGYoKS0+cHVzaF9jbGVhbnVwX2hhbmRsZXIgKGhh
bmRsZXIpOwogfQogCiB2b2lkCmRpZmYgLXVycCBzcmMub2xkL3dpbnN1cC9j
eWd3aW4vdGhyZWFkLmNjIHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5jYwot
LS0gc3JjLm9sZC93aW5zdXAvY3lnd2luL3RocmVhZC5jYwlNb24gSnVuIDI0
IDEwOjUxOjQ4IDIwMDIKKysrIHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5j
YwlNb24gSnVuIDI0IDExOjAyOjM5IDIwMDIKQEAgLTM1NSw3ICszNTUsOCBA
QCBwdGhyZWFkOjpzZWxmICgpCiAKIC8qIG1lbWJlciBtZXRob2RzICovCiBw
dGhyZWFkOjpwdGhyZWFkICgpOnZlcmlmeWFibGVfb2JqZWN0IChQVEhSRUFE
X01BR0lDKSwgd2luMzJfb2JqX2lkICgwKSwKLSAgICAgICAgICAgICAgICAg
ICAgY2FuY2Vsc3RhdGUgKDApLCBjYW5jZWx0eXBlICgwKSwgam9pbmVyIChO
VUxMKSwgY2xlYW51cF9zdGFjayhOVUxMKSAKKyAgICAgICAgICAgICAgICAg
ICAgY2FuY2Vsc3RhdGUgKDApLCBjYW5jZWx0eXBlICgwKSwgY2FuY2VsX2V2
ZW50KDApLAorICAgICAgICAgICAgICAgICAgICBqb2luZXIgKE5VTEwpLCBj
bGVhbnVwX3N0YWNrKE5VTEwpIAogewogfQogCkBAIC0zNjMsNiArMzY0LDgg
QEAgcHRocmVhZDo6fnB0aHJlYWQgKCkKIHsKICAgaWYgKHdpbjMyX29ial9p
ZCkKICAgICBDbG9zZUhhbmRsZSAod2luMzJfb2JqX2lkKTsKKyAgaWYgKGNh
bmNlbF9ldmVudCkKKyAgICBDbG9zZUhhbmRsZSAoY2FuY2VsX2V2ZW50KTsK
IH0KIAogCkBAIC0zOTQsNiArMzk3LDE1IEBAIHB0aHJlYWQ6OmNyZWF0ZSAo
dm9pZCAqKCpmdW5jKSAodm9pZCAqKSwKICAgICAgIHJldHVybjsKICAgICB9
CiAKKyAgY2FuY2VsX2V2ZW50ID0gOjpDcmVhdGVFdmVudCAoTlVMTCxUUlVF
LEZBTFNFLE5VTEwpOworICBpZiAoIWNhbmNlbF9ldmVudCkKKyAgICB7Cisg
ICAgICBzeXN0ZW1fcHJpbnRmICgiY291bGRuJ3QgY3JlYXRlIGNhbmNlbCBl
dmVudCwgdGhpcyAlcCBMYXN0RXJyb3IgJWQiLCB0aGlzLCBHZXRMYXN0RXJy
b3IgKCkgKTsKKyAgICAgIC8qd2UgbmVlZCB0aGUgZXZlbnQgZm9yIGNvcnJl
Y3QgYmVoYXZpb3VyICovCisgICAgICBtYWdpYyA9IDA7CisgICAgICByZXR1
cm47CisgICAgfQorCiAgIHdpbjMyX29ial9pZCA9IDo6Q3JlYXRlVGhyZWFk
ICgmc2VjX25vbmVfbmloLCBhdHRyLnN0YWNrc2l6ZSwKIAkJCQkoTFBUSFJF
QURfU1RBUlRfUk9VVElORSkgdGhyZWFkX2luaXRfd3JhcHBlciwKIAkJCQl0
aGlzLCBDUkVBVEVfU1VTUEVOREVELCAmdGhyZWFkX2lkKTsKQEAgLTQxNCw2
ICs0MjYsMzA0IEBAIHB0aHJlYWQ6OmNyZWF0ZSAodm9pZCAqKCpmdW5jKSAo
dm9pZCAqKSwKIH0KIAogdm9pZAorcHRocmVhZDo6ZXhpdCAodm9pZCAqdmFs
dWVfcHRyKQoreworICBjbGFzcyBwdGhyZWFkICp0aHJlYWQgPSB0aGlzOwor
CisgIC8vIHJ1biBjbGVhbnVwIGhhbmRsZXJzCisgIHBvcF9hbGxfY2xlYW51
cF9oYW5kbGVycyAoKTsKKworICBNVF9JTlRFUkZBQ0UtPmRlc3RydWN0b3Jz
Lkl0ZXJhdGVOdWxsICgpOworCisgIG11dGV4LkxvY2sgKCk7CisgIC8vIGNs
ZWFudXAgaWYgdGhyZWFkIGlzIGluIGRldGFjaGVkIHN0YXRlIGFuZCBub3Qg
am9pbmVkCisgIGlmKCBfX3B0aHJlYWRfZXF1YWwoJmpvaW5lciwgJnRocmVh
ZCApICkKKyAgICBkZWxldGUgdGhpczsKKyAgZWxzZQorICAgIHsgIAorICAg
ICAgcmV0dXJuX3B0ciA9IHZhbHVlX3B0cjsKKyAgICAgIG11dGV4LlVuTG9j
ayAoKTsKKyAgICB9CisKKyAgaWYgKEludGVybG9ja2VkRGVjcmVtZW50ICgm
TVRfSU5URVJGQUNFLT50aHJlYWRjb3VudCkgPT0gMCkKKyAgICA6OmV4aXQg
KDApOworICBlbHNlCisgICAgRXhpdFRocmVhZCAoMCk7Cit9CisKK2ludAor
cHRocmVhZDo6Y2FuY2VsICh2b2lkKQoreworICBjbGFzcyBwdGhyZWFkICp0
aHJlYWQgPSB0aGlzOworICBjbGFzcyBwdGhyZWFkICpzZWxmID0gcHRocmVh
ZDo6c2VsZiAoKTsKKworICBtdXRleC5Mb2NrICgpOworCisgIGlmIChjYW5j
ZWx0eXBlID09IFBUSFJFQURfQ0FOQ0VMX0RFRkVSUkVEIHx8CisgICAgICBj
YW5jZWxzdGF0ZSA9PSBQVEhSRUFEX0NBTkNFTF9ESVNBQkxFKQorICAgIHsK
KyAgICAgIC8vIGNhbmNlbCBkZWZlcnJlZAorICAgICAgbXV0ZXguVW5Mb2Nr
ICgpOworICAgICAgU2V0RXZlbnQgKGNhbmNlbF9ldmVudCk7CisgICAgICBy
ZXR1cm4gMDsKKyAgICB9CisKKyAgZWxzZSBpZiAoX19wdGhyZWFkX2VxdWFs
KCZ0aHJlYWQsICZzZWxmKSkKKyAgICB7CisgICAgICBtdXRleC5VbkxvY2sg
KCk7CisgICAgICBjYW5jZWxfc2VsZiAoKTsKKyAgICAgIHJldHVybiAwOyAv
LyBOZXZlciByZWFjaGVkCisgICAgfQorCisgIC8vIGNhbmNlbCBhc3luY2hy
b25vdXMKKyAgU3VzcGVuZFRocmVhZCAod2luMzJfb2JqX2lkKTsKKyAgaWYg
KFdhaXRGb3JTaW5nbGVPYmplY3QgKHdpbjMyX29ial9pZCwgMCkgPT0gV0FJ
VF9USU1FT1VUKQorICAgIHsKKyAgICAgIENPTlRFWFQgY29udGV4dDsKKyAg
ICAgIGNvbnRleHQuQ29udGV4dEZsYWdzID0gQ09OVEVYVF9DT05UUk9MOwor
ICAgICAgR2V0VGhyZWFkQ29udGV4dCAod2luMzJfb2JqX2lkLCAmY29udGV4
dCk7CisgICAgICBjb250ZXh0LkVpcCA9IChEV09SRCkgcHRocmVhZDo6c3Rh
dGljX2NhbmNlbF9zZWxmOworICAgICAgU2V0VGhyZWFkQ29udGV4dCAod2lu
MzJfb2JqX2lkLCAmY29udGV4dCk7CisgICAgfQorICBtdXRleC5VbkxvY2sg
KCk7CisgIFJlc3VtZVRocmVhZCAod2luMzJfb2JqX2lkKTsKKworICByZXR1
cm4gMDsKKy8qCisgIFRPRE86IGluc2VydCAgcHRocmVhZF90ZXN0Y2FuY2Vs
IGludG8gdGhlIHJlcXVpcmVkIGZ1bmN0aW9ucworICB0aGUgcmVxdWlyZWQg
ZnVuY3Rpb24gbGlzdCBpczogKmluZGljYXRlcyBkb25lLCBYIGluZGljYXRl
cyBub3QgcHJlc2VudCBpbiBjeWd3aW4uCithaW9fc3VzcGVuZCAoKQorKmNs
b3NlICgpCisqY3JlYXQgKCkKK2ZjbnRsICgpCitmc3luYyAoKQorZ2V0bXNn
ICgpCitnZXRwbXNnICgpCitsb2NrZiAoKQorbXFfcmVjZWl2ZSAoKQorbXFf
c2VuZCAoKQorbXNncmN2ICgpCittc2dzbmQgKCkKK21zeW5jICgpCituYW5v
c2xlZXAgKCkKK29wZW4gKCkKK3BhdXNlICgpCitwb2xsICgpCitwcmVhZCAo
KQorcHRocmVhZF9jb25kX3RpbWVkd2FpdCAoKQorcHRocmVhZF9jb25kX3dh
aXQgKCkKKypwdGhyZWFkX2pvaW4gKCkKK3B0aHJlYWRfdGVzdGNhbmNlbCAo
KQorcHV0bXNnICgpCitwdXRwbXNnICgpCitwd3JpdGUgKCkKK3JlYWQgKCkK
K3JlYWR2ICgpCitzZWxlY3QgKCkKK3NlbV93YWl0ICgpCitzaWdwYXVzZSAo
KQorc2lnc3VzcGVuZCAoKQorc2lndGltZWR3YWl0ICgpCitzaWd3YWl0ICgp
CitzaWd3YWl0aW5mbyAoKQorKnNsZWVwICgpCitzeXN0ZW0gKCkKK3RjZHJh
aW4gKCkKKyp1c2xlZXAgKCkKK3dhaXQgKCkKK3dhaXQzKCkKK3dhaXRpZCAo
KQord2FpdHBpZCAoKQord3JpdGUgKCkKK3dyaXRldiAoKQorCit0aGUgb3B0
aW9uYWwgbGlzdCBpczoKK2NhdGNsb3NlICgpCitjYXRnZXRzICgpCitjYXRv
cGVuICgpCitjbG9zZWRpciAoKQorY2xvc2Vsb2cgKCkKK2N0ZXJtaWQgKCkK
K2RibV9jbG9zZSAoKQorZGJtX2RlbGV0ZSAoKQorZGJtX2ZldGNoICgpCitk
Ym1fbmV4dGtleSAoKQorZGJtX29wZW4gKCkKK2RibV9zdG9yZSAoKQorZGxj
bG9zZSAoKQorZGxvcGVuICgpCitlbmRncmVudCAoKQorZW5kcHdlbnQgKCkK
K2VuZHV0eGVudCAoKQorZmNsb3NlICgpCitmY250bCAoKQorZmZsdXNoICgp
CitmZ2V0YyAoKQorZmdldHBvcyAoKQorZmdldHMgKCkKK2ZnZXR3YyAoKQor
ZmdldHdzICgpCitmb3BlbiAoKQorZnByaW50ZiAoKQorZnB1dGMgKCkKK2Zw
dXRzICgpCitmcHV0d2MgKCkKK2ZwdXR3cyAoKQorZnJlYWQgKCkKK2ZyZW9w
ZW4gKCkKK2ZzY2FuZiAoKQorZnNlZWsgKCkKK2ZzZWVrbyAoKQorZnNldHBv
cyAoKQorZnRlbGwgKCkKK2Z0ZWxsbyAoKQorZnR3ICgpCitmd3ByaW50ZiAo
KQorZndyaXRlICgpCitmd3NjYW5mICgpCitnZXRjICgpCitnZXRjX3VubG9j
a2VkICgpCitnZXRjaGFyICgpCitnZXRjaGFyX3VubG9ja2VkICgpCitnZXRj
d2QgKCkKK2dldGRhdGUgKCkKK2dldGdyZW50ICgpCitnZXRncmdpZCAoKQor
Z2V0Z3JnaWRfciAoKQorZ2V0Z3JuYW0gKCkKK2dldGdybmFtX3IgKCkKK2dl
dGxvZ2luICgpCitnZXRsb2dpbl9yICgpCitnZXRwd2VudCAoKQorKmdldHB3
bmFtICgpCisqZ2V0cHduYW1fciAoKQorKmdldHB3dWlkICgpCisqZ2V0cHd1
aWRfciAoKQorZ2V0cyAoKQorZ2V0dXR4ZW50ICgpCitnZXR1dHhpZCAoKQor
Z2V0dXR4bGluZSAoKQorZ2V0dyAoKQorZ2V0d2MgKCkKK2dldHdjaGFyICgp
CitnZXR3ZCAoKQorZ2xvYiAoKQoraWNvbnZfY2xvc2UgKCkKK2ljb252X29w
ZW4gKCkKK2lvY3RsICgpCitsc2VlayAoKQorbWtzdGVtcCAoKQorbmZ0dyAo
KQorb3BlbmRpciAoKQorb3BlbmxvZyAoKQorcGNsb3NlICgpCitwZXJyb3Ig
KCkKK3BvcGVuICgpCitwcmludGYgKCkKK3B1dGMgKCkKK3B1dGNfdW5sb2Nr
ZWQgKCkKK3B1dGNoYXIgKCkKK3B1dGNoYXJfdW5sb2NrZWQgKCkKK3B1dHMg
KCkKK3B1dHV0eGxpbmUgKCkKK3B1dHcgKCkKK3B1dHdjICgpCitwdXR3Y2hh
ciAoKQorcmVhZGRpciAoKQorcmVhZGRpcl9yICgpCityZW1vdmUgKCkKK3Jl
bmFtZSAoKQorcmV3aW5kICgpCityZXdpbmRkaXIgKCkKK3NjYW5mICgpCitz
ZWVrZGlyICgpCitzZW1vcCAoKQorc2V0Z3JlbnQgKCkKK3NldHB3ZW50ICgp
CitzZXR1dHhlbnQgKCkKK3N0cmVycm9yICgpCitzeXNsb2cgKCkKK3RtcGZp
bGUgKCkKK3RtcG5hbSAoKQordHR5bmFtZSAoKQordHR5bmFtZV9yICgpCit1
bmdldGMgKCkKK3VuZ2V0d2MgKCkKK3VubGluayAoKQordmZwcmludGYgKCkK
K3Zmd3ByaW50ZiAoKQordnByaW50ZiAoKQordndwcmludGYgKCkKK3dwcmlu
dGYgKCkKK3dzY2FuZiAoKQorCitOb3RlLCB0aGF0IGZvciBmY250bCAoKSwg
Zm9yIGFueSB2YWx1ZSBvZiB0aGUgY21kIGFyZ3VtZW50LgorCitBbmQgd2Ug
bXVzdCBub3QgaW50cm9kdWNlIGNhbmNlbGxhdGlvbiBwb2ludHMgYW55d2hl
cmUgZWxzZSB0aGF0J3MgcGFydCBvZiB0aGUgcG9zaXggb3IKK29wZW5ncm91
cCBzcGVjcy4KKyAqLworfQorCit2b2lkCitwdGhyZWFkOjp0ZXN0Y2FuY2Vs
ICh2b2lkKQoreworICBpZiAoY2FuY2Vsc3RhdGUgPT0gUFRIUkVBRF9DQU5D
RUxfRElTQUJMRSkKKyAgICByZXR1cm47CisKKyAgaWYoIFdBSVRfT0JKRUNU
XzAgPT0gV2FpdEZvclNpbmdsZU9iamVjdCAoY2FuY2VsX2V2ZW50LCAwICkg
KQorICAgIGNhbmNlbF9zZWxmICgpOworfQorCit2b2lkCitwdGhyZWFkOjpz
dGF0aWNfY2FuY2VsX3NlbGYgKHZvaWQpCit7CisgIHB0aHJlYWQ6OnNlbGYo
KS0+Y2FuY2VsX3NlbGYgKCk7Cit9CisKKworaW50CitwdGhyZWFkOjpzZXRj
YW5jZWxzdGF0ZSAoaW50IHN0YXRlLCBpbnQgKm9sZHN0YXRlKQoreworICBp
bnQgcmVzdWx0ID0gMDsKKworICBtdXRleC5Mb2NrICgpOworCisgIGlmIChz
dGF0ZSAhPSBQVEhSRUFEX0NBTkNFTF9FTkFCTEUgJiYgc3RhdGUgIT0gUFRI
UkVBRF9DQU5DRUxfRElTQUJMRSkKKyAgICByZXN1bHQgPSBFSU5WQUw7Cisg
IGVsc2UKKyAgICB7CisgICAgICBpZiAob2xkc3RhdGUpCisgICAgICAgICpv
bGRzdGF0ZSA9IGNhbmNlbHN0YXRlOworICAgICAgY2FuY2Vsc3RhdGUgPSBz
dGF0ZTsKKyAgICB9CisKKyAgbXV0ZXguVW5Mb2NrICgpOworCisgIHJldHVy
biByZXN1bHQ7Cit9CisKK2ludAorcHRocmVhZDo6c2V0Y2FuY2VsdHlwZSAo
aW50IHR5cGUsIGludCAqb2xkdHlwZSkKK3sKKyAgaW50IHJlc3VsdCA9IDA7
CisKKyAgbXV0ZXguTG9jayAoKTsKKworICBpZiAodHlwZSAhPSBQVEhSRUFE
X0NBTkNFTF9ERUZFUlJFRCAmJiB0eXBlICE9IFBUSFJFQURfQ0FOQ0VMX0FT
WU5DSFJPTk9VUykKKyAgICByZXN1bHQgPSBFSU5WQUw7CisgIGVsc2UKKyAg
ICB7CisgICAgICBpZiAob2xkdHlwZSkKKyAgICAgICAgKm9sZHR5cGUgPSBj
YW5jZWx0eXBlOworICAgICAgY2FuY2VsdHlwZSA9IHR5cGU7CisgICAgfQor
CisgIG11dGV4LlVuTG9jayAoKTsKKworICByZXR1cm4gcmVzdWx0OworfQor
Cit2b2lkCiBwdGhyZWFkOjpwdXNoX2NsZWFudXBfaGFuZGxlciAoX19wdGhy
ZWFkX2NsZWFudXBfaGFuZGxlciAqaGFuZGxlcikKIHsKICAgaWYgKHRoaXMg
IT0gc2VsZiAoKSkKQEAgLTQzMCw2ICs3NDAsOCBAQCBwdGhyZWFkOjpwb3Bf
Y2xlYW51cF9oYW5kbGVyIChpbnQgY29uc3QgCiAgICAgLy8gVE9ETzogc2Vu
ZCBhIHNpZ25hbCBvciBzb21ldGhpbmcgdG8gdGhlIHRocmVhZCA/CiAgICAg
YXBpX2ZhdGFsICgiQXR0ZW1wdCB0byBleGVjdXRlIGEgY2xlYW51cCBoYW5k
bGVyIGFjcm9zcyB0aHJlYWRzIik7CiAgIAorICBtdXRleC5Mb2NrICgpOwor
CiAgIGlmIChjbGVhbnVwX3N0YWNrICE9IE5VTEwpCiAgICAgewogICAgICAg
X19wdGhyZWFkX2NsZWFudXBfaGFuZGxlciAqaGFuZGxlciA9IGNsZWFudXBf
c3RhY2s7CkBAIC00MzgsNiArNzUwLDggQEAgcHRocmVhZDo6cG9wX2NsZWFu
dXBfaGFuZGxlciAoaW50IGNvbnN0IAogICAgICAgICAoKmhhbmRsZXItPmZ1
bmN0aW9uKSAoaGFuZGxlci0+YXJnKTsKICAgICAgIGNsZWFudXBfc3RhY2sg
PSBoYW5kbGVyLT5uZXh0OwogICAgIH0KKworICBtdXRleC5VbkxvY2sgKCk7
CiB9CiAKIHZvaWQKQEAgLTk2NCwxMSArMTI3OCwxMSBAQCBwdGhyZWFkOjp0
aHJlYWRfaW5pdF93cmFwcGVyICh2b2lkICpfYXJnCiAgIC8qdGhlIE9TIGRv
ZXNuJ3QgY2hlY2sgdGhpcyBmb3IgPD0gNjQgVGxzIGVudHJpZXMgKHByZSB3
aW4yaykgKi8KICAgVGxzU2V0VmFsdWUgKE1UX0lOVEVSRkFDRS0+dGhyZWFk
X3NlbGZfZHdUbHNJbmRleCwgdGhyZWFkKTsKIAotICB0aHJlYWQtPm11dGV4
LkxvY2soKTsKKyAgdGhyZWFkLT5tdXRleC5Mb2NrICgpOwogICAvLyBpZiB0
aHJlYWQgaXMgZGV0YWNoZWQgZm9yY2UgY2xlYW51cCBvbiBleGl0CiAgIGlm
ICh0aHJlYWQtPmF0dHIuam9pbmFibGUgPT0gUFRIUkVBRF9DUkVBVEVfREVU
QUNIRUQgJiYgdGhyZWFkLT5qb2luZXIgPT0gTlVMTCkKICAgICB0aHJlYWQt
PmpvaW5lciA9IHB0aHJlYWQ6OnNlbGYgKCk7Ci0gIHRocmVhZC0+bXV0ZXgu
VW5Mb2NrKCk7CisgIHRocmVhZC0+bXV0ZXguVW5Mb2NrICgpOwogCiAjaWZk
ZWYgX0NZR19USFJFQURfRkFJTFNBRkUKICAgaWYgKF9SRUVOVCA9PSBfaW1w
dXJlX3B0cikKQEAgLTk4MSw3ICsxMjk1LDcgQEAgcHRocmVhZDo6dGhyZWFk
X2luaXRfd3JhcHBlciAodm9pZCAqX2FyZwogICAvLyBjYWxsIHRoZSB1c2Vy
J3MgdGhyZWFkCiAgIHZvaWQgKnJldCA9IHRocmVhZC0+ZnVuY3Rpb24gKHRo
cmVhZC0+YXJnKTsKIAotICBfX3B0aHJlYWRfZXhpdCAocmV0KTsKKyAgdGhy
ZWFkLT5leGl0IChyZXQpOwogCiAjaWYgMAogLy8gPz8/IFRoaXMgY29kZSBv
bmx5IHJ1bnMgaWYgdGhlIHRocmVhZCBleGl0cyBieSByZXR1cm5pbmcuCkBA
IC0xMDM1LDI1MSArMTM0OSwxMyBAQCBfX3B0aHJlYWRfb25jZSAocHRocmVh
ZF9vbmNlX3QgKm9uY2VfY29uCiAgIHJldHVybiAwOwogfQogCi0vKkNhbmNl
bGFiaWxpdHkgc3RhdGVzICovCi0KLQotLypQZXJmb3JtIHRoZSBhY3R1YWwg
Y2FuY2VsICovCi12b2lkCi1fX3B0aHJlYWRfY2xlYW51cCAocHRocmVhZF90
IHRocmVhZCkKLXsKLX0KLQotCiBpbnQKIF9fcHRocmVhZF9jYW5jZWwgKHB0
aHJlYWRfdCB0aHJlYWQpCiB7CiAgIGlmICh2ZXJpZnlhYmxlX29iamVjdF9p
c3ZhbGlkICgmdGhyZWFkLCBQVEhSRUFEX01BR0lDKSAhPSBWQUxJRF9PQkpF
Q1QpCiAgICAgcmV0dXJuIEVTUkNIOwotICBpZiAodGhyZWFkLT5jYW5jZWxz
dGF0ZSA9PSBQVEhSRUFEX0NBTkNFTF9FTkFCTEUpCi0gICAgewotI2lmIDAK
LSAgICAgIC8qb25jZSBhbGwgdGhlIGZ1bmN0aW9ucyBjYWxsIHRlc3RjYW5j
ZWwgKCksIHdlIHdpbGwgZG8gdGhpcyAqLwotICAgICAgaWYgKHRocmVhZC0+
Y2FuY2VsdHlwZSA9PSBQVEhSRUFEX0NBTkNFTF9ERUZFUlJFRCkKLQl7Ci0J
fQotICAgICAgZWxzZQotCXsKLQkgIC8qcG9zc2libGUgRklYTUU6IHRoaXMg
ZnVuY3Rpb24gaXMgbWVhbnQgdG8gcmV0dXJuIGFzeW5jaHJvbm91c2x5Ci0J
ICAgKmZyb20gdGhlIGNhbmNlbGxhdGlvbiByb3V0aW5lIGFjdHVhbGx5IGZp
cmluZy4gU28gd2UgbWF5IG5lZWQgc29tZSBzb3J0Ci0JICAgKm9mIHNpZ25h
bCB0byBiZSBzZW50IHRoYXQgaXMgaW1tZWRpYXRlbHkgcmVjaWV2ZWQgYW5k
IGFjdGVkIG9uLgotCSAgICovCi0JICBfX3B0aHJlYWRfY2xlYW51cCAodGhy
ZWFkKTsKLQl9Ci0jZW5kaWYKLSAgICB9Ci0vKiByZXR1cm4gMDsKLSovCi0K
LSAgcmV0dXJuIEVTUkNIOwotLyoKLSAgd2UgcmV0dXJuIEVTUkNIIHVudGls
IGFsbCB0aGUgcmVxdWlyZWQgZnVuY3Rpb25zIGNhbGwgdGVzdGNhbmNlbCAo
KTsKLSAgdGhpcyB3aWxsIGdpdmUgYXBwbGljYXRpb25zIHByZWRpY3RhYmxl
IGJlaGF2aW91ci4KLQotICB0aGUgcmVxdWlyZWQgZnVuY3Rpb24gbGlzdCBp
czogKmluZGljYXRlcyBkb25lLCBYIGluZGljYXRlcyBub3QgcHJlc2VudCBp
biBjeWd3aW4uCi1haW9fc3VzcGVuZCAoKQotKmNsb3NlICgpCi0qY3JlYXQg
KCkKLWZjbnRsICgpCi1mc3luYyAoKQotZ2V0bXNnICgpCi1nZXRwbXNnICgp
Ci1sb2NrZiAoKQotbXFfcmVjZWl2ZSAoKQotbXFfc2VuZCAoKQotbXNncmN2
ICgpCi1tc2dzbmQgKCkKLW1zeW5jICgpCi1uYW5vc2xlZXAgKCkKLW9wZW4g
KCkKLXBhdXNlICgpCi1wb2xsICgpCi1wcmVhZCAoKQotcHRocmVhZF9jb25k
X3RpbWVkd2FpdCAoKQotcHRocmVhZF9jb25kX3dhaXQgKCkKLSpwdGhyZWFk
X2pvaW4gKCkKLXB0aHJlYWRfdGVzdGNhbmNlbCAoKQotcHV0bXNnICgpCi1w
dXRwbXNnICgpCi1wd3JpdGUgKCkKLXJlYWQgKCkKLXJlYWR2ICgpCi1zZWxl
Y3QgKCkKLXNlbV93YWl0ICgpCi1zaWdwYXVzZSAoKQotc2lnc3VzcGVuZCAo
KQotc2lndGltZWR3YWl0ICgpCi1zaWd3YWl0ICgpCi1zaWd3YWl0aW5mbyAo
KQotKnNsZWVwICgpCi1zeXN0ZW0gKCkKLXRjZHJhaW4gKCkKLSp1c2xlZXAg
KCkKLXdhaXQgKCkKLXdhaXQzKCkKLXdhaXRpZCAoKQotd2FpdHBpZCAoKQot
d3JpdGUgKCkKLXdyaXRldiAoKQotCi10aGUgb3B0aW9uYWwgbGlzdCBpczoK
LWNhdGNsb3NlICgpCi1jYXRnZXRzICgpCi1jYXRvcGVuICgpCi1jbG9zZWRp
ciAoKQotY2xvc2Vsb2cgKCkKLWN0ZXJtaWQgKCkKLWRibV9jbG9zZSAoKQot
ZGJtX2RlbGV0ZSAoKQotZGJtX2ZldGNoICgpCi1kYm1fbmV4dGtleSAoKQot
ZGJtX29wZW4gKCkKLWRibV9zdG9yZSAoKQotZGxjbG9zZSAoKQotZGxvcGVu
ICgpCi1lbmRncmVudCAoKQotZW5kcHdlbnQgKCkKLWVuZHV0eGVudCAoKQot
ZmNsb3NlICgpCi1mY250bCAoKQotZmZsdXNoICgpCi1mZ2V0YyAoKQotZmdl
dHBvcyAoKQotZmdldHMgKCkKLWZnZXR3YyAoKQotZmdldHdzICgpCi1mb3Bl
biAoKQotZnByaW50ZiAoKQotZnB1dGMgKCkKLWZwdXRzICgpCi1mcHV0d2Mg
KCkKLWZwdXR3cyAoKQotZnJlYWQgKCkKLWZyZW9wZW4gKCkKLWZzY2FuZiAo
KQotZnNlZWsgKCkKLWZzZWVrbyAoKQotZnNldHBvcyAoKQotZnRlbGwgKCkK
LWZ0ZWxsbyAoKQotZnR3ICgpCi1md3ByaW50ZiAoKQotZndyaXRlICgpCi1m
d3NjYW5mICgpCi1nZXRjICgpCi1nZXRjX3VubG9ja2VkICgpCi1nZXRjaGFy
ICgpCi1nZXRjaGFyX3VubG9ja2VkICgpCi1nZXRjd2QgKCkKLWdldGRhdGUg
KCkKLWdldGdyZW50ICgpCi1nZXRncmdpZCAoKQotZ2V0Z3JnaWRfciAoKQot
Z2V0Z3JuYW0gKCkKLWdldGdybmFtX3IgKCkKLWdldGxvZ2luICgpCi1nZXRs
b2dpbl9yICgpCi1nZXRwd2VudCAoKQotKmdldHB3bmFtICgpCi0qZ2V0cHdu
YW1fciAoKQotKmdldHB3dWlkICgpCi0qZ2V0cHd1aWRfciAoKQotZ2V0cyAo
KQotZ2V0dXR4ZW50ICgpCi1nZXR1dHhpZCAoKQotZ2V0dXR4bGluZSAoKQot
Z2V0dyAoKQotZ2V0d2MgKCkKLWdldHdjaGFyICgpCi1nZXR3ZCAoKQotZ2xv
YiAoKQotaWNvbnZfY2xvc2UgKCkKLWljb252X29wZW4gKCkKLWlvY3RsICgp
Ci1sc2VlayAoKQotbWtzdGVtcCAoKQotbmZ0dyAoKQotb3BlbmRpciAoKQot
b3BlbmxvZyAoKQotcGNsb3NlICgpCi1wZXJyb3IgKCkKLXBvcGVuICgpCi1w
cmludGYgKCkKLXB1dGMgKCkKLXB1dGNfdW5sb2NrZWQgKCkKLXB1dGNoYXIg
KCkKLXB1dGNoYXJfdW5sb2NrZWQgKCkKLXB1dHMgKCkKLXB1dHV0eGxpbmUg
KCkKLXB1dHcgKCkKLXB1dHdjICgpCi1wdXR3Y2hhciAoKQotcmVhZGRpciAo
KQotcmVhZGRpcl9yICgpCi1yZW1vdmUgKCkKLXJlbmFtZSAoKQotcmV3aW5k
ICgpCi1yZXdpbmRkaXIgKCkKLXNjYW5mICgpCi1zZWVrZGlyICgpCi1zZW1v
cCAoKQotc2V0Z3JlbnQgKCkKLXNldHB3ZW50ICgpCi1zZXR1dHhlbnQgKCkK
LXN0cmVycm9yICgpCi1zeXNsb2cgKCkKLXRtcGZpbGUgKCkKLXRtcG5hbSAo
KQotdHR5bmFtZSAoKQotdHR5bmFtZV9yICgpCi11bmdldGMgKCkKLXVuZ2V0
d2MgKCkKLXVubGluayAoKQotdmZwcmludGYgKCkKLXZmd3ByaW50ZiAoKQot
dnByaW50ZiAoKQotdndwcmludGYgKCkKLXdwcmludGYgKCkKLXdzY2FuZiAo
KQotCi1Ob3RlLCB0aGF0IGZvciBmY250bCAoKSwgZm9yIGFueSB2YWx1ZSBv
ZiB0aGUgY21kIGFyZ3VtZW50LgogCi1BbmQgd2UgbXVzdCBub3QgaW50cm9k
dWNlIGNhbmNlbGxhdGlvbiBwb2ludHMgYW55d2hlcmUgZWxzZSB0aGF0J3Mg
cGFydCBvZiB0aGUgcG9zaXggb3IKLW9wZW5ncm91cCBzcGVjcy4KLSAqLwot
fQotCi0vKm5vIHJhY2VzIGluIHRoZXNlIHRocmVlIGZ1bmN0aW9uczogdGhl
eSBhcmUgYWxsIGN1cnJlbnQtdGhyZWFkLW9ubHkgKi8KLWludAotX19wdGhy
ZWFkX3NldGNhbmNlbHN0YXRlIChpbnQgc3RhdGUsIGludCAqb2xkc3RhdGUp
Ci17Ci0gIGNsYXNzIHB0aHJlYWQgKnRocmVhZCA9IHB0aHJlYWQ6OnNlbGYg
KCk7Ci0gIGlmIChzdGF0ZSAhPSBQVEhSRUFEX0NBTkNFTF9FTkFCTEUgJiYg
c3RhdGUgIT0gUFRIUkVBRF9DQU5DRUxfRElTQUJMRSkKLSAgICByZXR1cm4g
RUlOVkFMOwotICAqb2xkc3RhdGUgPSB0aHJlYWQtPmNhbmNlbHN0YXRlOwot
ICB0aHJlYWQtPmNhbmNlbHN0YXRlID0gc3RhdGU7Ci0gIHJldHVybiAwOwot
fQotCi1pbnQKLV9fcHRocmVhZF9zZXRjYW5jZWx0eXBlIChpbnQgdHlwZSwg
aW50ICpvbGR0eXBlKQotewotICBjbGFzcyBwdGhyZWFkICp0aHJlYWQgPSBw
dGhyZWFkOjpzZWxmICgpOwotICBpZiAodHlwZSAhPSBQVEhSRUFEX0NBTkNF
TF9ERUZFUlJFRCAmJiB0eXBlICE9IFBUSFJFQURfQ0FOQ0VMX0FTWU5DSFJP
Tk9VUykKLSAgICByZXR1cm4gRUlOVkFMOwotICAqb2xkdHlwZSA9IHRocmVh
ZC0+Y2FuY2VsdHlwZTsKLSAgdGhyZWFkLT5jYW5jZWx0eXBlID0gdHlwZTsK
LSAgcmV0dXJuIDA7Ci19Ci0KLS8qZGVmZXJyZWQgY2FuY2VsbGF0aW9uIHJl
cXVlc3QgaGFuZGxlciAqLwotdm9pZAotX19wdGhyZWFkX3Rlc3RjYW5jZWwg
KHZvaWQpCi17Ci0gIGNsYXNzIHB0aHJlYWQgKnRocmVhZCA9IHB0aHJlYWQ6
OnNlbGYgKCk7Ci0gIGlmICh0aHJlYWQtPmNhbmNlbHN0YXRlID09IFBUSFJF
QURfQ0FOQ0VMX0RJU0FCTEUpCi0gICAgcmV0dXJuOwotICAvKmNoZWNrIHRo
ZSBjYW5jZWxsYXRpb24gZXZlbnQgb2JqZWN0IGhlcmUgLSBub3QgbmVlZGVk
dW50aWwgcHRocmVhZF9jYW5jZWwgYWN0dWFsbHkKLSAgICpkb2VzIHNvbWV0
aGluZyovCisgIHJldHVybiB0aHJlYWQtPmNhbmNlbCAoKTsKIH0KIAogLyoK
QEAgLTE1NTEsMzIgKzE2MjcsNiBAQCBfX3B0aHJlYWRfYXR0cl9kZXN0cm95
IChwdGhyZWFkX2F0dHJfdCAqCiAgIGRlbGV0ZSAoKmF0dHIpOwogICAqYXR0
ciA9IE5VTEw7CiAgIHJldHVybiAwOwotfQotCi12b2lkCi1fX3B0aHJlYWRf
ZXhpdCAodm9pZCAqdmFsdWVfcHRyKQotewotICBwdGhyZWFkICogdGhyZWFk
ID0gcHRocmVhZDo6c2VsZiAoKTsKLQotICAvLyBydW4gY2xlYW51cCBoYW5k
bGVycwotICB0aHJlYWQtPnBvcF9hbGxfY2xlYW51cF9oYW5kbGVycyAoKTsK
LQotICBNVF9JTlRFUkZBQ0UtPmRlc3RydWN0b3JzLkl0ZXJhdGVOdWxsICgp
OwotICAKLSAgdGhyZWFkLT5tdXRleC5Mb2NrKCk7Ci0gIC8vIGNsZWFudXAg
aWYgdGhyZWFkIGlzIGluIGRldGFjaGVkIHN0YXRlIGFuZCBub3Qgam9pbmVk
Ci0gIGlmKCBfX3B0aHJlYWRfZXF1YWwoJnRocmVhZC0+am9pbmVyLCAmdGhy
ZWFkICkgKQotICAgIGRlbGV0ZSB0aHJlYWQ7Ci0gIGVsc2UKLSAgICB7ICAK
LSAgICAgIHRocmVhZC0+cmV0dXJuX3B0ciA9IHZhbHVlX3B0cjsKLSAgICAg
IHRocmVhZC0+bXV0ZXguVW5Mb2NrKCk7Ci0gICAgfQotCi0gIGlmIChJbnRl
cmxvY2tlZERlY3JlbWVudCAoJk1UX0lOVEVSRkFDRS0+dGhyZWFkY291bnQp
ID09IDApCi0gICAgZXhpdCAoMCk7Ci0gIGVsc2UKLSAgICBFeGl0VGhyZWFk
ICgwKTsKIH0KIAogaW50CmRpZmYgLXVycCBzcmMub2xkL3dpbnN1cC9jeWd3
aW4vdGhyZWFkLmggc3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmgKLS0tIHNy
Yy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuaAlNb24gSnVuIDI0IDEwOjUx
OjQ5IDIwMDIKKysrIHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5oCU1vbiBK
dW4gMjQgMTE6MDc6MTEgMjAwMgpAQCAtMjY3LDYgKzI2Nyw3IEBAIHB1Ymxp
YzoKICAgdm9pZCAqcmV0dXJuX3B0cjsKICAgYm9vbCBzdXNwZW5kZWQ7CiAg
IGludCBjYW5jZWxzdGF0ZSwgY2FuY2VsdHlwZTsKKyAgSEFORExFIGNhbmNl
bF9ldmVudDsKICAgcHRocmVhZF90IGpvaW5lcjsKICAgLy8gaW50IGpvaW5h
YmxlOwogCkBAIC0yODgsNiArMjg5LDE5IEBAIHB1YmxpYzoKICAgICBwdGhy
ZWFkICgpOwogICAgfnB0aHJlYWQgKCk7CiAKKyAgIHZvaWQgZXhpdCAodm9p
ZCAqdmFsdWVfcHRyKTsKKworICAgaW50IGNhbmNlbCAoKTsKKyAgIHZvaWQg
dGVzdGNhbmNlbCAoKTsKKyAgIHZvaWQgY2FuY2VsX3NlbGYgKCkKKyAgIHsK
KyAgICAgZXhpdCAoUFRIUkVBRF9DQU5DRUxFRCk7CisgICB9CisgICBzdGF0
aWMgdm9pZCBzdGF0aWNfY2FuY2VsX3NlbGYgKCk7CisKKyAgIGludCBzZXRj
YW5jZWxzdGF0ZSAoaW50IHN0YXRlLCBpbnQgKm9sZHN0YXRlKTsKKyAgIGlu
dCBzZXRjYW5jZWx0eXBlIChpbnQgdHlwZSwgaW50ICpvbGR0eXBlKTsKKwog
ICAgdm9pZCBwdXNoX2NsZWFudXBfaGFuZGxlciAoX19wdGhyZWFkX2NsZWFu
dXBfaGFuZGxlciAqaGFuZGxlcik7CiAgICB2b2lkIHBvcF9jbGVhbnVwX2hh
bmRsZXIgKGludCBjb25zdCBleGVjdXRlKTsKIApAQCAtMjk5LDcgKzMxMyw2
IEBAIHByaXZhdGU6CiAgICAgX19wdGhyZWFkX2NsZWFudXBfaGFuZGxlciAq
Y2xlYW51cF9zdGFjazsKICAgICBwdGhyZWFkX211dGV4IG11dGV4OwogCi0g
ICAgZnJpZW5kIHZvaWQgX19wdGhyZWFkX2V4aXQgKHZvaWQgKnZhbHVlX3B0
cik7CiAgICAgZnJpZW5kIGludCBfX3B0aHJlYWRfam9pbiAocHRocmVhZF90
ICogdGhyZWFkLCB2b2lkICoqcmV0dXJuX3ZhbCk7CiAgICAgZnJpZW5kIGlu
dCBfX3B0aHJlYWRfZGV0YWNoIChwdGhyZWFkX3QgKiB0aHJlYWQpOwogICAg
IApAQCAtNDA3LDggKzQyMCwxMCBAQCB2b2lkIF9fcHRocmVhZF9hdGZvcmtw
cmVwYXJlKHZvaWQpOwogdm9pZCBfX3B0aHJlYWRfYXRmb3JrcGFyZW50KHZv
aWQpOwogdm9pZCBfX3B0aHJlYWRfYXRmb3JrY2hpbGQodm9pZCk7CiAKKy8q
IENhbmNlbGxhdGlvbiAqLworaW50IF9fcHRocmVhZF9jYW5jZWwgKHB0aHJl
YWRfdCB0aHJlYWQpOworCiAvKiBUaHJlYWQgRXhpdCAqLwotdm9pZCBfX3B0
aHJlYWRfZXhpdCAodm9pZCAqdmFsdWVfcHRyKTsKIGludCBfX3B0aHJlYWRf
am9pbiAocHRocmVhZF90ICogdGhyZWFkLCB2b2lkICoqcmV0dXJuX3ZhbCk7
CiBpbnQgX19wdGhyZWFkX2RldGFjaCAocHRocmVhZF90ICogdGhyZWFkKTsK
IApAQCAtNTA1LDEwICs1MjAsNiBAQCBpbnQgX19wdGhyZWFkX3NldHNjaGVk
cGFyYW0gKHB0aHJlYWRfdCB0CiAJCQkgICAgIGNvbnN0IHN0cnVjdCBzY2hl
ZF9wYXJhbSAqcGFyYW0pOwogCiAvKiBjYW5jZWxhYmlsaXR5IHN0YXRlcyAq
LwotaW50IF9fcHRocmVhZF9jYW5jZWwgKHB0aHJlYWRfdCB0aHJlYWQpOwot
aW50IF9fcHRocmVhZF9zZXRjYW5jZWxzdGF0ZSAoaW50IHN0YXRlLCBpbnQg
Km9sZHN0YXRlKTsKLWludCBfX3B0aHJlYWRfc2V0Y2FuY2VsdHlwZSAoaW50
IHR5cGUsIGludCAqb2xkdHlwZSk7Ci12b2lkIF9fcHRocmVhZF90ZXN0Y2Fu
Y2VsICh2b2lkKTsKIAogLyogU2VtYXBob3JlcyAqLwogaW50IF9fc2VtX2lu
aXQgKHNlbV90ICogc2VtLCBpbnQgcHNoYXJlZCwgdW5zaWduZWQgaW50IHZh
bHVlKTsK

--84341-22053-1025006658=:292--
