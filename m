Return-Path: <cygwin-patches-return-2843-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 19149 invoked by alias); 16 Aug 2002 21:31:34 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 19135 invoked from network); 16 Aug 2002 21:31:34 -0000
Date: Fri, 16 Aug 2002 14:31:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] pthread_fork Part 3
Message-ID: <Pine.WNT.4.44.0208162232370.-283127@thomas.kefrig-pfaff.de>
X-X-Sender: thomas@gw.kefrig-pfaff.de
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="3471130-19189-1029530284=:-283127"
Content-ID: <Pine.WNT.4.44.0208162238210.-283127@thomas.kefrig-pfaff.de>
X-AntiVirus: scanned for viruses by NGI Next Generation Internet (http://www.ngi.de/)
X-SW-Source: 2002-q3/txt/msg00291.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--3471130-19189-1029530284=:-283127
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0208162238211.-283127@thomas.kefrig-pfaff.de>
Content-length: 1305


Pthread key destructor handling revised. IMHO it does not make sense to
handle two lists with keys, one with all keys, one with its destructors.
The destructors are now part of the key class.

2002-08-16  Thomas Pfaff  <tpfaff@gmx.net>

	* init.cc (dll_entry): Remove FIXME block. Call
	MTinterface::on_thread_detach on DLL_THREAD_DETACH and on
	DLL_PROCESS_DETACH for the last terminating thread.
	* thread.cc (pthread_key_destructor) Remove all methods.
	(pthread_key_destructor_list): Ditto.
	(MT_INTERFACE): Move define to thread.h
	(MTinterface::on_thread_detach): Walk through keys list and run
	its value destructors.
	(pthread::exit): Remove MT_INTERFACE->destructors.IterateNull
	call. Key destructors are now run on thread detach.
	(pthread_key::pthread_key): Initialize destructor function
	pointer. Remove old destructor handling.
	(pthread_key::~pthread_key): Remove old destructor handling.
	(pthread_key::run_dtors): Run key destructors if defined and
	the value is not NULL.
	* thread.h (pthread_key::destructor): New member.
	(pthread_key::run_dtors): New method.
	(pthread_key_destructor) Remove class.
	(pthread_key_destructor_list): Ditto.
	(MTinterface::destructors): Remove member.
	(MTinterface::on_thread_detach): New method.
	MT_INTERFACE: Move from thread.cc to this location.


--3471130-19189-1029530284=:-283127
Content-Type: TEXT/PLAIN; NAME="pthread_key_destructor.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0208162238040.-283127@thomas.kefrig-pfaff.de>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_key_destructor.patch"
Content-length: 9610

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbml0LmNjIHNyYy93
aW5zdXAvY3lnd2luL2luaXQuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dp
bi9pbml0LmNjCUZyaSBBdWcgMTYgMTE6NDY6MDYgMjAwMgorKysgc3JjL3dp
bnN1cC9jeWd3aW4vaW5pdC5jYwlGcmkgQXVnIDE2IDEzOjMyOjQwIDIwMDIK
QEAgLTMzLDIxICszMyw4IEBAIFdJTkFQSSBkbGxfZW50cnkgKEhBTkRMRSBo
LCBEV09SRCByZWFzb24KIAl9CiAgICAgICBicmVhazsKICAgICBjYXNlIERM
TF9QUk9DRVNTX0RFVEFDSDoKLSAgICAgIGJyZWFrOwogICAgIGNhc2UgRExM
X1RIUkVBRF9ERVRBQ0g6Ci0jaWYgMCAvLyBGSVhNRTogUkVJTlNUQVRFIFNP
T04KLSAgICAgIHdhaXRxICp3OwotICAgICAgaWYgKCh3ID0gd2FpdHFfc3Rv
cmFnZS5nZXQgKCkpICE9IE5VTEwpCi0JewotCSAgaWYgKHctPnRocmVhZF9l
diAhPSBOVUxMKQotCSAgICB7Ci0JICAgICAgc3lzdGVtX3ByaW50ZiAoImNs
b3NpbmcgJXAiLCB3LT50aHJlYWRfZXYpOwotCSAgICAgICh2b2lkKSBDbG9z
ZUhhbmRsZSAody0+dGhyZWFkX2V2KTsKLQkgICAgfQotCSAgbWVtc2V0ICh3
LCAwLCBzaXplb2YoKncpKTsJLy8gRklYTUU6IG1lbW9yeSBsZWFrCi0JfQot
CS8vIEZJWE1FOiBOZWVkIHRvIGFkZCBvdGhlciBwZXJfdGhyZWFkIHN0dWZm
IGhlcmUKLSNlbmRpZgorICAgICAgTVRfSU5URVJGQUNFLT5vbl90aHJlYWRf
ZGV0YWNoICgpOwogICAgICAgYnJlYWs7CiAgICAgfQogICByZXR1cm4gMTsK
ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2Mgc3Jj
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCi0tLSBzcmMub2xkL3dpbnN1cC9j
eWd3aW4vdGhyZWFkLmNjCUZyaSBBdWcgMTYgMTM6MTU6MzEgMjAwMgorKysg
c3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCUZyaSBBdWcgMTYgMTM6MzA6
MDUgMjAwMgpAQCAtNDYsOTQgKzQ2LDYgQEAgZGV0YWlscy4gKi8KIAogZXh0
ZXJuIGludCB0aHJlYWRzYWZlOwogCi0vKnB0aHJlYWRfa2V5X2Rlc3RydWN0
b3JfbGlzdCBjbGFzczogdG8tYmUgdGhyZWFkc2FmZSBzaW5nbGUgbGlua2Vk
IGxpc3QKLSAqRklYTUU6IFB1dCBtZSBpbiBhIGRlZGljYXRlZCBmaWxlLCBv
ciBhIGxlYXN0IGEgdG9vbHMgYXJlYSAhCi0gKi8KLQotcHRocmVhZF9rZXlf
ZGVzdHJ1Y3RvciAqCi1wdGhyZWFkX2tleV9kZXN0cnVjdG9yOjpJbnNlcnRB
ZnRlciAocHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqbm9kZSkKLXsKLSAgcHRo
cmVhZF9rZXlfZGVzdHJ1Y3RvciAqdGVtcCA9IG5leHQ7Ci0gIG5leHQgPSBu
b2RlOwotICByZXR1cm4gdGVtcDsKLX0KLQotcHRocmVhZF9rZXlfZGVzdHJ1
Y3RvciAqCi1wdGhyZWFkX2tleV9kZXN0cnVjdG9yOjpVbmxpbmtOZXh0ICgp
Ci17Ci0gIHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKnRlbXAgPSBuZXh0Owot
ICBpZiAobmV4dCkKLSAgICBuZXh0ID0gbmV4dC0+TmV4dCAoKTsKLSAgcmV0
dXJuIHRlbXA7Ci19Ci0KLXB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKgotcHRo
cmVhZF9rZXlfZGVzdHJ1Y3Rvcjo6TmV4dCAoKQotewotICByZXR1cm4gbmV4
dDsKLX0KLQotdm9pZAotcHRocmVhZF9rZXlfZGVzdHJ1Y3Rvcl9saXN0OjpJ
bnNlcnQgKHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKm5vZGUpCi17Ci0gIGlm
ICghbm9kZSkKLSAgICByZXR1cm47Ci0gIGhlYWQgPSBub2RlLT5JbnNlcnRB
ZnRlciAoaGVhZCk7Ci0gIGlmICghaGVhZCkKLSAgICBoZWFkID0gbm9kZTsJ
CS8qZmlyc3Qgbm9kZSBzcGVjaWFsIGNhc2UgKi8KLX0KLQotICAvKnJlbW92
ZSBhIGdpdmVuIGRhdGFpdGVtLCB3aGVyZXZlciBpbiB0aGUgbGlzdCBpdCBp
cyAqLwotcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqCi1wdGhyZWFkX2tleV9k
ZXN0cnVjdG9yX2xpc3Q6OlJlbW92ZSAocHRocmVhZF9rZXkgKmtleSkKLXsK
LSAgaWYgKCFrZXkpCi0gICAgcmV0dXJuIE5VTEw7Ci0gIGlmICghaGVhZCkK
LSAgICByZXR1cm4gTlVMTDsKLSAgaWYgKGtleSA9PSBoZWFkLT5rZXkpCi0g
ICAgcmV0dXJuIFBvcCAoKTsKLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAq
dGVtcCA9IGhlYWQ7Ci0gIHdoaWxlICh0ZW1wICYmIHRlbXAtPk5leHQgKCkg
JiYgIShrZXkgPT0gdGVtcC0+TmV4dCAoKS0+a2V5KSkKLSAgICB7Ci0gICAg
ICB0ZW1wID0gdGVtcC0+TmV4dCAoKTsKLSAgICB9Ci0gIGlmICh0ZW1wKQot
ICAgIHJldHVybiB0ZW1wLT5VbmxpbmtOZXh0ICgpOwotICByZXR1cm4gTlVM
TDsKLX0KLQotICAvKmdldCB0aGUgZmlyc3QgaXRlbSBhbmQgcmVtb3ZlIGF0
IHRoZSBzYW1lIHRpbWUgKi8KLXB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKgot
cHRocmVhZF9rZXlfZGVzdHJ1Y3Rvcl9saXN0OjpQb3AgKCkKLXsKLSAgcHRo
cmVhZF9rZXlfZGVzdHJ1Y3RvciAqdGVtcCA9IGhlYWQ7Ci0gIGhlYWQgPSBo
ZWFkLT5OZXh0ICgpOwotICByZXR1cm4gdGVtcDsKLX0KLQotcHRocmVhZF9r
ZXlfZGVzdHJ1Y3Rvcjo6Ci1wdGhyZWFkX2tleV9kZXN0cnVjdG9yICh2b2lk
ICgqdGhlZGVzdHJ1Y3RvcikgKHZvaWQgKiksIHB0aHJlYWRfa2V5ICprZXkp
Ci17Ci0gIGRlc3RydWN0b3IgPSB0aGVkZXN0cnVjdG9yOwotICBuZXh0ID0g
TlVMTDsKLSAgdGhpcy0+a2V5ID0ga2V5OwotfQotCi12b2lkCi1wdGhyZWFk
X2tleV9kZXN0cnVjdG9yX2xpc3Q6Okl0ZXJhdGVOdWxsICgpCi17Ci0gIHB0
aHJlYWRfa2V5X2Rlc3RydWN0b3IgKnRlbXAgPSBoZWFkOwotICB3aGlsZSAo
dGVtcCkKLSAgICB7Ci0gICAgICB0ZW1wLT5kZXN0cnVjdG9yICgodGVtcC0+
a2V5KS0+Z2V0ICgpKTsKLSAgICAgIHRlbXAgPSB0ZW1wLT5OZXh0ICgpOwot
ICAgIH0KLX0KLQotCi0jZGVmaW5lIE1UX0lOVEVSRkFDRSB1c2VyX2RhdGEt
PnRocmVhZGludGVyZmFjZQotCiBzdHJ1Y3QgX3JlZW50ICoKIF9yZWVudF9j
bGliICgpCiB7CkBAIC0zNjMsNiArMjc1LDIwIEBAIE1UaW50ZXJmYWNlOjpm
aXh1cF9hZnRlcl9mb3JrICh2b2lkKQogICAgIH0KIH0KIAorLyogSXQgaXMg
YXNzdW1lZCB0aGF0IGEga2V5IHdpbGwgbm90IGJlIGRlbGV0ZWQgd2hpbGUg
aXQncyBkZXN0cnVjdG9ycworICAgYXJlIHJ1biwgb3RoZXJ3aXNlIGEgbG9j
ayBtdXN0IGJlIGFkZGVkIHRvIGF2b2lkIHJhY2UgY29uZGl0aW9uICovCit2
b2lkCitNVGludGVyZmFjZTo6b25fdGhyZWFkX2RldGFjaCAodm9pZCkKK3sK
KyAgcHRocmVhZF9rZXkgKmtleSA9IGtleXM7CisgIGRlYnVnX3ByaW50ZiAo
ImtleXMgaXMgJXgiLGtleXMpOworICB3aGlsZSAoa2V5KQorICAgIHsKKyAg
ICAgIGtleS0+cnVuX2R0b3IgKCk7CisgICAgICBrZXkgPSBrZXktPm5leHQ7
CisgICAgfQorfQorCiAvKiBwdGhyZWFkIGNhbGxzICovCiAKIC8qIHN0YXRp
YyBtZXRob2RzICovCkBAIC00NTYsOCArMzgyLDYgQEAgcHRocmVhZDo6ZXhp
dCAodm9pZCAqdmFsdWVfcHRyKQogICAvLyBydW4gY2xlYW51cCBoYW5kbGVy
cwogICBwb3BfYWxsX2NsZWFudXBfaGFuZGxlcnMgKCk7CiAKLSAgTVRfSU5U
RVJGQUNFLT5kZXN0cnVjdG9ycy5JdGVyYXRlTnVsbCAoKTsKLQogICBtdXRl
eC5Mb2NrICgpOwogICAvLyBjbGVhbnVwIGlmIHRocmVhZCBpcyBpbiBkZXRh
Y2hlZCBzdGF0ZSBhbmQgbm90IGpvaW5lZAogICBpZiggX19wdGhyZWFkX2Vx
dWFsKCZqb2luZXIsICZ0aHJlYWQgKSApCkBAIC05ODQsMjQgKzkwOCwyMCBA
QCBwdGhyZWFkX2NvbmQ6OmZpeHVwX2FmdGVyX2ZvcmsgKCkKIH0KIAogCi1w
dGhyZWFkX2tleTo6cHRocmVhZF9rZXkgKHZvaWQgKCpkZXN0cnVjdG9yKSAo
dm9pZCAqKSk6dmVyaWZ5YWJsZV9vYmplY3QgKFBUSFJFQURfS0VZX01BR0lD
KQorcHRocmVhZF9rZXk6OnB0aHJlYWRfa2V5ICh2b2lkICgqdGhlZGVzdHJ1
Y3RvcikgKHZvaWQgKikpIDoKKyAgdmVyaWZ5YWJsZV9vYmplY3QgKFBUSFJF
QURfS0VZX01BR0lDKSwKKyAgZGVzdHJ1Y3RvciAodGhlZGVzdHJ1Y3RvcikK
IHsKICAgZHdUbHNJbmRleCA9IFRsc0FsbG9jICgpOwogICBpZiAoZHdUbHNJ
bmRleCA9PSBUTFNfT1VUX09GX0lOREVYRVMpCiAgICAgbWFnaWMgPSAwOwot
ICBlbHNlIGlmIChkZXN0cnVjdG9yKQotICAgIHsKLSAgICAgIE1UX0lOVEVS
RkFDRS0+ZGVzdHJ1Y3RvcnMuCi0JSW5zZXJ0IChuZXcgcHRocmVhZF9rZXlf
ZGVzdHJ1Y3RvciAoZGVzdHJ1Y3RvciwgdGhpcykpOwotICAgIH0KKwogICAv
KiB0aHJlYWRzYWZlIGFkZGl0aW9uIGlzIGVhc3kgKi8KICAgbmV4dCA9IChw
dGhyZWFkX2tleSAqKSBJbnRlcmxvY2tlZEV4Y2hhbmdlUG9pbnRlciAoJk1U
X0lOVEVSRkFDRS0+a2V5cywgdGhpcyk7CiB9CiAKIHB0aHJlYWRfa2V5Ojp+
cHRocmVhZF9rZXkgKCkKIHsKLSAgaWYgKHB0aHJlYWRfa2V5X2Rlc3RydWN0
b3IgKmRlc3QgPSBNVF9JTlRFUkZBQ0UtPmRlc3RydWN0b3JzLlJlbW92ZSAo
dGhpcykpCi0gICAgZGVsZXRlIGRlc3Q7CiAgIFRsc0ZyZWUgKGR3VGxzSW5k
ZXgpOwogCiAgIC8qIEknbSBub3QgMTAwJSBzdXJlIHRoZSBuZXh0IGJpdCBp
cyB0aHJlYWRzYWZlLiBJIHRoaW5rIGl0IGlzLi4uICovCkBAIC0xMDU2LDYg
Kzk3NiwyMCBAQCBwdGhyZWFkX2tleTo6Zml4dXBfYWZ0ZXJfZm9yayAoKQog
ICBpZiAoZHdUbHNJbmRleCA9PSBUTFNfT1VUX09GX0lOREVYRVMpCiAgICAg
YXBpX2ZhdGFsICgicHRocmVhZF9rZXk6OmZpeHVwX2FmdGVyX2ZvcmsgKCkg
ZmFpbGVkIHRvIHJlYWxsb2NhdGUgVGxzIHN0b3JhZ2UiKTsKICAgc2V0IChm
b3JrX2J1Zik7Cit9CisKK3ZvaWQKK3B0aHJlYWRfa2V5OjpydW5fZHRvciAo
KQoreworICBpZiAoZGVzdHJ1Y3RvcikKKyAgICB7CisgICAgICB2b2lkICp2
YWx1ZSA9IGdldCAoKTsKKyAgICAgIGlmICh2YWx1ZSkKKyAgICAgICAgewor
ICAgICAgICAgIGRlc3RydWN0b3IgKHZhbHVlKTsKKyAgICAgICAgICBzZXQg
KE5VTEwpOworICAgICAgICB9CisgICAgfQogfQogCiAvKnBzaGFyZWQgbXV0
ZXhzOgpkaWZmIC11cnAgc3JjLm9sZC93aW5zdXAvY3lnd2luL3RocmVhZC5o
IHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5oCi0tLSBzcmMub2xkL3dpbnN1
cC9jeWd3aW4vdGhyZWFkLmgJRnJpIEF1ZyAxNiAxMjo1MjowMiAyMDAyCisr
KyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuaAlGcmkgQXVnIDE2IDEzOjMw
OjA0IDIwMDIKQEAgLTE3OSwxMSArMTc5LDE0IEBAIHB1YmxpYzoKIAogICBE
V09SRCBkd1Rsc0luZGV4OwogICB2b2lkICpmb3JrX2J1ZjsKKyAgdm9pZCAo
KmRlc3RydWN0b3IpICh2b2lkICopOwogICBjbGFzcyBwdGhyZWFkX2tleSAq
bmV4dDsKIAogICBpbnQgc2V0IChjb25zdCB2b2lkICopOwogICB2b2lkICpn
ZXQgKCk7CiAKKyAgdm9pZCBydW5fZHRvciAoKTsKKwogICB2b2lkIGZpeHVw
X2JlZm9yZV9mb3JrICgpOwogICB2b2lkIGZpeHVwX2FmdGVyX2ZvcmsgKCk7
CiAKQEAgLTE5MSwzNiArMTk0LDYgQEAgcHVibGljOgogICAgfnB0aHJlYWRf
a2V5ICgpOwogfTsKIAotLyogRklYTUU6IHRlc3QgdXNpbmcgbXVsdGlwbGUg
aW5oZXJpdGFuY2UgYW5kIG1lcmdpbmcga2V5X2Rlc3RydWN0b3IgaW50byBw
dGhyZWFkX2tleQotICogZm9yIGVmZmljaWVuY3kgKi8KLWNsYXNzIHB0aHJl
YWRfa2V5X2Rlc3RydWN0b3IKLXsKLXB1YmxpYzoKLSAgdm9pZCAoKmRlc3Ry
dWN0b3IpICh2b2lkICopOwotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpJ
bnNlcnRBZnRlciAocHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqIG5vZGUpOwot
ICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpVbmxpbmtOZXh0ICgpOwotICBw
dGhyZWFkX2tleV9kZXN0cnVjdG9yICpOZXh0ICgpOwotCi0gICAgcHRocmVh
ZF9rZXlfZGVzdHJ1Y3RvciAodm9pZCAoKnRoZWRlc3RydWN0b3IpICh2b2lk
ICopLCBwdGhyZWFkX2tleSAqIGtleSk7Ci0gIHB0aHJlYWRfa2V5X2Rlc3Ry
dWN0b3IgKm5leHQ7Ci0gIHB0aHJlYWRfa2V5ICprZXk7Ci19OwotCi1jbGFz
cyBwdGhyZWFkX2tleV9kZXN0cnVjdG9yX2xpc3QKLXsKLXB1YmxpYzoKLSAg
dm9pZCBJbnNlcnQgKHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKiBub2RlKTsK
LS8qIHJlbW92ZSBhIGdpdmVuIGRhdGFpdGVtLCB3aGVyZXZlciBpbiB0aGUg
bGlzdCBpdCBpcyAqLwotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpSZW1v
dmUgKHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKiBpdGVtKTsKLS8qIGdldCB0
aGUgZmlyc3QgaXRlbSBhbmQgcmVtb3ZlIGF0IHRoZSBzYW1lIHRpbWUgKi8K
LSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqUG9wICgpOwotICBwdGhyZWFk
X2tleV9kZXN0cnVjdG9yICpSZW1vdmUgKHB0aHJlYWRfa2V5ICoga2V5KTsK
LSAgdm9pZCBJdGVyYXRlTnVsbCAoKTsKLXByaXZhdGU6Ci0gICAgcHRocmVh
ZF9rZXlfZGVzdHJ1Y3RvciAqIGhlYWQ7Ci19OwotCi0KIGNsYXNzIHB0aHJl
YWRfYXR0cjpwdWJsaWMgdmVyaWZ5YWJsZV9vYmplY3QKIHsKIHB1YmxpYzoK
QEAgLTQwMCw3ICszNzMsNiBAQCBwdWJsaWM6CiAgIHN0cnVjdCBfd2luc3Vw
X3Qgd2luc3VwX3JlZW50OwogICBwdGhyZWFkIG1haW50aHJlYWQ7CiAKLSAg
cHRocmVhZF9rZXlfZGVzdHJ1Y3Rvcl9saXN0IGRlc3RydWN0b3JzOwogICBj
YWxsYmFjayAqcHRocmVhZF9wcmVwYXJlOwogICBjYWxsYmFjayAqcHRocmVh
ZF9jaGlsZDsKICAgY2FsbGJhY2sgKnB0aHJlYWRfcGFyZW50OwpAQCAtNDE1
LDYgKzM4Nyw4IEBAIHB1YmxpYzoKICAgdm9pZCBmaXh1cF9iZWZvcmVfZm9y
ayAodm9pZCk7CiAgIHZvaWQgZml4dXBfYWZ0ZXJfZm9yayAodm9pZCk7CiAK
KyAgdm9pZCBvbl90aHJlYWRfZGV0YWNoICh2b2lkKTsKKwogICBNVGludGVy
ZmFjZSAoKTpyZWVudF9pbmRleCAoMCksIGluZGV4YWxsb2NhdGVkICgwKSwg
dGhyZWFkY291bnQgKDEpCiAgICAgewogICAgICAgcHRocmVhZF9wcmVwYXJl
ID0gTlVMTDsKQEAgLTUzNSw2ICs1MDksOCBAQCBpbnQgX19zZW1fd2FpdCAo
c2VtX3QgKiBzZW0pOwogaW50IF9fc2VtX3RyeXdhaXQgKHNlbV90ICogc2Vt
KTsKIGludCBfX3NlbV9wb3N0IChzZW1fdCAqIHNlbSk7CiB9OworCisjZGVm
aW5lIE1UX0lOVEVSRkFDRSB1c2VyX2RhdGEtPnRocmVhZGludGVyZmFjZQog
CiAjZW5kaWYgLy8gTVRfU0FGRQogCg==

--3471130-19189-1029530284=:-283127--
