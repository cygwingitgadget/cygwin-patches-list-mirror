Return-Path: <cygwin-patches-return-8296-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 84607 invoked by alias); 11 Feb 2016 13:30:36 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
Received: (qmail 84589 invoked by uid 89); 11 Feb 2016 13:30:35 -0000
Authentication-Results: sourceware.org; auth=none
X-Virus-Found: No
X-Spam-SWARE-Status: No, score=-1.5 required=5.0 tests=AWL,BAYES_00,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW,SPF_PASS autolearn=ham version=3.3.2 spammy=semaphore, *bar, 506, Handlers
X-HELO: mail-wm0-f42.google.com
Received: from mail-wm0-f42.google.com (HELO mail-wm0-f42.google.com) (74.125.82.42) by sourceware.org (qpsmtpd/0.93/v0.84-503-g423c35a) with (AES128-GCM-SHA256 encrypted) ESMTPS; Thu, 11 Feb 2016 13:30:32 +0000
Received: by mail-wm0-f42.google.com with SMTP id p63so68434992wmp.1        for <cygwin-patches@cygwin.com>; Thu, 11 Feb 2016 05:30:31 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;        d=1e100.net; s=20130820;        h=x-gm-message-state:mime-version:date:message-id:subject:from:to         :content-type;        bh=09ExuTflY1pA6zyh/AK/yWgFCO/t5p12MFtpX+U6zP4=;        b=R/Ul7ajneWBgcGB3felfW/fWTJrPXdQ5NwuglI1wTglrttoY80UwlfIJM6JxLzq6ys         JgT5AvH2uCCEXEAiFCGt+Ci03P9SMfAvNfziPj6I8VHImsk75Ib3zYLoT0SrYpMUzQ/4         mdKAtK8N4Q45Ye/Tb7sqRsuDedaPvT/Psxqs8vuD0HVzQrVkOtGIxnsNnxtHi4EKK0qn         Di1uE0fG2GddIwbFnRmHsxDjibF4e9rjwaeyMb9b3uvMHuAaQcXITjztrmpVazXAQC+b         kl7Ttjipn5h6ctZKTi02s6POI0sQQHxfv/x3iA/hSPXfD5yymh6m2MoXl0EnM6in+J4L         Fa7A==
X-Gm-Message-State: AG10YOQIiLoqWD0S6e3DfacFbHdKWkjgrkN/TNcjhRSqgwpDOE2vN0l3RdqugBzPrFAqA/MrxCnNYJNFZOkZ5g==
MIME-Version: 1.0
X-Received: by 10.28.156.73 with SMTP id f70mr19065402wme.52.1455197429125; Thu, 11 Feb 2016 05:30:29 -0800 (PST)
Received: by 10.27.202.9 with HTTP; Thu, 11 Feb 2016 05:30:28 -0800 (PST)
Date: Thu, 11 Feb 2016 13:30:00 -0000
Message-ID: <CAKw7uVj5h7TkuN7F5xVEx+C1YAWGqvxZNH=osQ3AG3KsyutXQA@mail.gmail.com>
Subject: [PATCH][RFC] POSIX barrier implementation, take 1
From: =?UTF-8?Q?V=C3=A1clav_Haisman?= <vhaisman@gmail.com>
To: cygwin-patches@cygwin.com
Content-Type: multipart/mixed; boundary=001a114b30d4d7973c052b7e8de4
X-IsSubscribed: yes
X-SW-Source: 2016-q1/txt/msg00002.txt.bz2


--001a114b30d4d7973c052b7e8de4
Content-Type: text/plain; charset=UTF-8
Content-length: 232

Hi.

I am attaching a patch that adds (or tries to) POSIX barriers
implementation into Cygwin. I have compiled it but not actually tested
it, yet. I am dumping it here just in case I get run over by a bus on
my way home. :)

-- 
VH

--001a114b30d4d7973c052b7e8de4
Content-Type: text/plain; charset=US-ASCII; name="barrier01.patch.txt"
Content-Disposition: attachment; filename="barrier01.patch.txt"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_ikiaymr10
Content-length: 16304

ZGlmZiAtLWdpdCBhL25ld2xpYi9saWJjL2luY2x1ZGUvc3lzL2ZlYXR1cmVz
LmggYi9uZXdsaWIvbGliYy9pbmNsdWRlL3N5cy9mZWF0dXJlcy5oCmluZGV4
IDRhZDdmYmQuLjBjNjA0M2MgMTAwNjQ0Ci0tLSBhL25ld2xpYi9saWJjL2lu
Y2x1ZGUvc3lzL2ZlYXR1cmVzLmgKKysrIGIvbmV3bGliL2xpYmMvaW5jbHVk
ZS9zeXMvZmVhdHVyZXMuaApAQCAtMTE4LDEwICsxMTgsMTAgQEAgZXh0ZXJu
ICJDIiB7CiAKICNkZWZpbmUgX1BPU0lYX0FEVklTT1JZX0lORk8JCQkyMDAx
MTJMCiAvKiAjZGVmaW5lIF9QT1NJWF9BU1lOQ0hST05PVVNfSU8JCSAgICAt
MSAqLwotLyogI2RlZmluZSBfUE9TSVhfQkFSUklFUlMJCQkgICAgLTEgKi8K
KyNkZWZpbmUgX1BPU0lYX0JBUlJJRVJTCQkJCTIwMDExMkwKICNkZWZpbmUg
X1BPU0lYX0NIT1dOX1JFU1RSSUNURUQJCQkgICAgIDEKICNkZWZpbmUgX1BP
U0lYX0NMT0NLX1NFTEVDVElPTgkJCTIwMDExMkwKLSNkZWZpbmUgX1BPU0lY
X0NQVVRJTUUJCQkgICAgCTIwMDExMkwKKyNkZWZpbmUgX1BPU0lYX0NQVVRJ
TUUJCQkJMjAwMTEyTAogI2RlZmluZSBfUE9TSVhfRlNZTkMJCQkJMjAwMTEy
TAogI2RlZmluZSBfUE9TSVhfSVBWNgkJCQkyMDAxMTJMCiAjZGVmaW5lIF9Q
T1NJWF9KT0JfQ09OVFJPTAkJCSAgICAgMQpAQCAtMTQwLDcgKzE0MCw3IEBA
IGV4dGVybiAiQyIgewogI2RlZmluZSBfUE9TSVhfUkVHRVhQCQkJCSAgICAg
MQogI2RlZmluZSBfUE9TSVhfU0FWRURfSURTCQkJICAgICAxCiAjZGVmaW5l
IF9QT1NJWF9TRU1BUEhPUkVTCQkJMjAwMTEyTAotI2RlZmluZSBfUE9TSVhf
U0hBUkVEX01FTU9SWV9PQkpFQ1RTCQkyMDAxMTJMIAorI2RlZmluZSBfUE9T
SVhfU0hBUkVEX01FTU9SWV9PQkpFQ1RTCQkyMDAxMTJMCiAjZGVmaW5lIF9Q
T1NJWF9TSEVMTAkJCQkgICAgIDEKIC8qICNkZWZpbmUgX1BPU0lYX1NQQVdO
CQkJCSAgICAtMSAqLwogI2RlZmluZSBfUE9TSVhfU1BJTl9MT0NLUwkJCSAg
ICAyMDAxMTJMCmRpZmYgLS1naXQgYS9uZXdsaWIvbGliYy9pbmNsdWRlL3N5
cy90eXBlcy5oIGIvbmV3bGliL2xpYmMvaW5jbHVkZS9zeXMvdHlwZXMuaApp
bmRleCA1ZGQ2Yzc1Li5iZmU5M2ZhIDEwMDY0NAotLS0gYS9uZXdsaWIvbGli
Yy9pbmNsdWRlL3N5cy90eXBlcy5oCisrKyBiL25ld2xpYi9saWJjL2luY2x1
ZGUvc3lzL3R5cGVzLmgKQEAgLTQzMSw2ICs0MzEsNyBAQCB0eXBlZGVmIHN0
cnVjdCB7CiAKIC8qIFBPU0lYIEJhcnJpZXIgVHlwZXMgKi8KIAorI2lmICFk
ZWZpbmVkKF9fQ1lHV0lOX18pCiAjaWYgZGVmaW5lZChfUE9TSVhfQkFSUklF
UlMpCiB0eXBlZGVmIF9fdWludDMyX3QgcHRocmVhZF9iYXJyaWVyX3Q7ICAg
ICAgICAvKiBQT1NJWCBCYXJyaWVyIE9iamVjdCAqLwogdHlwZWRlZiBzdHJ1
Y3QgewpAQCAtNDQwLDYgKzQ0MSw3IEBAIHR5cGVkZWYgc3RydWN0IHsKICNl
bmRpZgogfSBwdGhyZWFkX2JhcnJpZXJhdHRyX3Q7CiAjZW5kaWYgLyogZGVm
aW5lZChfUE9TSVhfQkFSUklFUlMpICovCisjZW5kaWYgLyogX19DWUdXSU5f
XyAqLwogCiAvKiBQT1NJWCBTcGluIExvY2sgVHlwZXMgKi8KIApkaWZmIC0t
Z2l0IGEvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL2N5Z3dpbi90eXBlcy5oIGIv
d2luc3VwL2N5Z3dpbi9pbmNsdWRlL2N5Z3dpbi90eXBlcy5oCmluZGV4IDg1
ZWU3YzcuLmIwMWFlOTUgMTAwNjQ0Ci0tLSBhL3dpbnN1cC9jeWd3aW4vaW5j
bHVkZS9jeWd3aW4vdHlwZXMuaAorKysgYi93aW5zdXAvY3lnd2luL2luY2x1
ZGUvY3lnd2luL3R5cGVzLmgKQEAgLTE4NCw2ICsxODQsOCBAQCB0eXBlZGVm
IHN0cnVjdCBfX3B0aHJlYWRfYXR0cl90IHtjaGFyIF9fZHVtbXk7fSAqcHRo
cmVhZF9hdHRyX3Q7CiB0eXBlZGVmIHN0cnVjdCBfX3B0aHJlYWRfbXV0ZXhh
dHRyX3Qge2NoYXIgX19kdW1teTt9ICpwdGhyZWFkX211dGV4YXR0cl90Owog
dHlwZWRlZiBzdHJ1Y3QgX19wdGhyZWFkX2NvbmRhdHRyX3Qge2NoYXIgX19k
dW1teTt9ICpwdGhyZWFkX2NvbmRhdHRyX3Q7CiB0eXBlZGVmIHN0cnVjdCBf
X3B0aHJlYWRfY29uZF90IHtjaGFyIF9fZHVtbXk7fSAqcHRocmVhZF9jb25k
X3Q7Cit0eXBlZGVmIHN0cnVjdCBfX3B0aHJlYWRfYmFycmllcmF0dHJfdCB7
Y2hhciBfX2R1bW15O30gKnB0aHJlYWRfYmFycmllcmF0dHJfdDsKK3R5cGVk
ZWYgc3RydWN0IF9fcHRocmVhZF9iYXJyaWVyX3Qge2NoYXIgX19kdW1teTt9
ICpwdGhyZWFkX2JhcnJpZXJfdDsKIAogICAvKiBUaGVzZSB2YXJpYWJsZXMg
YXJlIG5vdCB1c2VyIGFsdGVyYWJsZS4gVGhpcyBtZWFucyB5b3UhLiAqLwog
dHlwZWRlZiBzdHJ1Y3QKQEAgLTIwNyw2ICsyMDksOCBAQCB0eXBlZGVmIGNs
YXNzIHB0aHJlYWRfYXR0ciAqcHRocmVhZF9hdHRyX3Q7CiB0eXBlZGVmIGNs
YXNzIHB0aHJlYWRfbXV0ZXhhdHRyICpwdGhyZWFkX211dGV4YXR0cl90Owog
dHlwZWRlZiBjbGFzcyBwdGhyZWFkX2NvbmRhdHRyICpwdGhyZWFkX2NvbmRh
dHRyX3Q7CiB0eXBlZGVmIGNsYXNzIHB0aHJlYWRfY29uZCAqcHRocmVhZF9j
b25kX3Q7Cit0eXBlZGVmIGNsYXNzIHB0aHJlYWRfYmFycmllciAqcHRocmVh
ZF9iYXJyaWVyX3Q7Cit0eXBlZGVmIGNsYXNzIHB0aHJlYWRfYmFycmllcmF0
dHIgKnB0aHJlYWRfYmFycmllcmF0dHJfdDsKIHR5cGVkZWYgY2xhc3MgcHRo
cmVhZF9vbmNlIHB0aHJlYWRfb25jZV90OwogdHlwZWRlZiBjbGFzcyBwdGhy
ZWFkX3NwaW5sb2NrICpwdGhyZWFkX3NwaW5sb2NrX3Q7CiB0eXBlZGVmIGNs
YXNzIHB0aHJlYWRfcndsb2NrICpwdGhyZWFkX3J3bG9ja190OwpkaWZmIC0t
Z2l0IGEvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaCBiL3dpbnN1
cC9jeWd3aW4vaW5jbHVkZS9wdGhyZWFkLmgKaW5kZXggOWFkOGI2Ni4uODRl
MGExNCAxMDA2NDQKLS0tIGEvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJl
YWQuaAorKysgYi93aW5zdXAvY3lnd2luL2luY2x1ZGUvcHRocmVhZC5oCkBA
IC02Miw2ICs2Miw3IEBAIGV4dGVybiAiQyIKIC8qIHByb2Nlc3MgaXMgdGhl
IGRlZmF1bHQgKi8KICNkZWZpbmUgUFRIUkVBRF9TQ09QRV9QUk9DRVNTIDAK
ICNkZWZpbmUgUFRIUkVBRF9TQ09QRV9TWVNURU0gMQorI2RlZmluZSBQVEhS
RUFEX0JBUlJJRVJfU0VSSUFMX1RIUkVBRCAoLTEpCiAKIC8qIFJlZ2lzdGVy
IEZvcmsgSGFuZGxlcnMgKi8KIGludCBwdGhyZWFkX2F0Zm9yayAodm9pZCAo
Kikodm9pZCksIHZvaWQgKCopKHZvaWQpLCB2b2lkICgqKSh2b2lkKSk7CkBA
IC0xMzMsNiArMTM0LDE3IEBAIGludCBwdGhyZWFkX2NvbmRhdHRyX2luaXQg
KHB0aHJlYWRfY29uZGF0dHJfdCAqKTsKIGludCBwdGhyZWFkX2NvbmRhdHRy
X3NldGNsb2NrIChwdGhyZWFkX2NvbmRhdHRyX3QgKiwgY2xvY2tpZF90KTsK
IGludCBwdGhyZWFkX2NvbmRhdHRyX3NldHBzaGFyZWQgKHB0aHJlYWRfY29u
ZGF0dHJfdCAqLCBpbnQpOwogCisvKiBCYXJyaWVycyAqLworaW50IHB0aHJl
YWRfYmFycmllcmF0dHJfaW5pdCAocHRocmVhZF9iYXJyaWVyYXR0cl90ICop
OworaW50IHB0aHJlYWRfYmFycmllcmF0dHJfc2V0cHNoYXJlZCAocHRocmVh
ZF9iYXJyaWVyYXR0cl90ICosIGludCk7CitpbnQgcHRocmVhZF9iYXJyaWVy
YXR0cl9nZXRwc2hhcmVkIChjb25zdCBwdGhyZWFkX2JhcnJpZXJhdHRyX3Qg
KiwgaW50ICopOworaW50IHB0aHJlYWRfYmFycmllcmF0dHJfZGVzdHJveSAo
cHRocmVhZF9iYXJyaWVyYXR0cl90ICopOworaW50IHB0aHJlYWRfYmFycmll
cl9pbml0IChwdGhyZWFkX2JhcnJpZXJfdCAqLAorICAgICAgICAgICAgICAg
ICAgICAgICAgICBjb25zdCBwdGhyZWFkX2JhcnJpZXJhdHRyX3QgKiwgdW5z
aWduZWQpOworaW50IHB0aHJlYWRfYmFycmllcl9kZXN0cm95IChwdGhyZWFk
X2JhcnJpZXJfdCAqKTsKK2ludCBwdGhyZWFkX2JhcnJpZXJfd2FpdCAocHRo
cmVhZF9iYXJyaWVyX3QgKik7CisKKy8qIFRocmVhZHMgKi8KIGludCBwdGhy
ZWFkX2NyZWF0ZSAocHRocmVhZF90ICosIGNvbnN0IHB0aHJlYWRfYXR0cl90
ICosCiAJCSAgICB2b2lkICooKikodm9pZCAqKSwgdm9pZCAqKTsKIGludCBw
dGhyZWFkX2RldGFjaCAocHRocmVhZF90KTsKZGlmZiAtLWdpdCBhL3dpbnN1
cC9jeWd3aW4vdGhyZWFkLmNjIGIvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MK
aW5kZXggOGYyOTkwMC4uNzk0ZGQ5MyAxMDA2NDQKLS0tIGEvd2luc3VwL2N5
Z3dpbi90aHJlYWQuY2MKKysrIGIvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MK
QEAgLTUwLDYgKzUwLDE3IEBAIGNvbnN0IHB0aHJlYWRfdCBwdGhyZWFkX211
dGV4OjpfbmV3X211dGV4ID0gKHB0aHJlYWRfdCkgMTsKIGNvbnN0IHB0aHJl
YWRfdCBwdGhyZWFkX211dGV4OjpfdW5sb2NrZWRfbXV0ZXggPSAocHRocmVh
ZF90KSAyOwogY29uc3QgcHRocmVhZF90IHB0aHJlYWRfbXV0ZXg6Ol9kZXN0
cm95ZWRfbXV0ZXggPSAocHRocmVhZF90KSAzOwogCisKK3RlbXBsYXRlIDx0
eXBlbmFtZSBUPgoraW5saW5lCit2b2lkCitkZWxldGVfYW5kX2NsZWFyIChU
ICogKiBjb25zdCBwdHIpCit7CisgIGRlbGV0ZSAqcHRyOworICAqcHRyID0g
MDsKK30KKworCiBpbmxpbmUgYm9vbAogcHRocmVhZF9tdXRleDo6bm9fb3du
ZXIoKQogewpAQCAtMjY3LDYgKzI3OCwyMyBAQCBwdGhyZWFkX2NvbmQ6Omlz
X2luaXRpYWxpemVyX29yX29iamVjdCAocHRocmVhZF9jb25kX3QgY29uc3Qg
KmNvbmQpCiAgIHJldHVybiB0cnVlOwogfQogCitpbmxpbmUgYm9vbAorcHRo
cmVhZF9iYXJyaWVyYXR0cjo6aXNfZ29vZF9vYmplY3QgKHB0aHJlYWRfYmFy
cmllcmF0dHJfdCBjb25zdCAqY29uZCkKK3sKKyAgaWYgKHZlcmlmeWFibGVf
b2JqZWN0X2lzdmFsaWQgKGNvbmQsIFBUSFJFQURfQkFSUklFUkFUVFJfTUFH
SUMpCisgICAgICAhPSBWQUxJRF9PQkpFQ1QpCisgICAgcmV0dXJuIGZhbHNl
OworICByZXR1cm4gdHJ1ZTsKK30KKworaW5saW5lIGJvb2wKK3B0aHJlYWRf
YmFycmllcjo6aXNfZ29vZF9vYmplY3QgKHB0aHJlYWRfYmFycmllcl90IGNv
bnN0ICpjb25kKQoreworICBpZiAodmVyaWZ5YWJsZV9vYmplY3RfaXN2YWxp
ZCAoY29uZCwgUFRIUkVBRF9CQVJSSUVSX01BR0lDKSAhPSBWQUxJRF9PQkpF
Q1QpCisgICAgcmV0dXJuIGZhbHNlOworICByZXR1cm4gdHJ1ZTsKK30KKwog
LyogUlcgbG9ja3MgKi8KIGlubGluZSBib29sCiBwdGhyZWFkX3J3bG9jazo6
aXNfZ29vZF9vYmplY3QgKHB0aHJlYWRfcndsb2NrX3QgY29uc3QgKnJ3bG9j
aykKQEAgLTEzMDAsNiArMTMyOCwyNSBAQCBwdGhyZWFkX2NvbmQ6Ol9maXh1
cF9hZnRlcl9mb3JrICgpCiAgICAgYXBpX2ZhdGFsICgicHRocmVhZF9jb25k
OjpfZml4dXBfYWZ0ZXJfZm9yayAoKSBmYWlsZWQgdG8gcmVjcmVhdGUgd2lu
MzIgc2VtYXBob3JlIik7CiB9CiAKK3B0aHJlYWRfYmFycmllcmF0dHI6OnB0
aHJlYWRfYmFycmllcmF0dHIgKCkKKyAgOiB2ZXJpZnlhYmxlX29iamVjdCAo
UFRIUkVBRF9CQVJSSUVSQVRUUl9NQUdJQykKKyAgLCBzaGFyZWQgKFBUSFJF
QURfUFJPQ0VTU19QUklWQVRFKQoreworfQorCitwdGhyZWFkX2JhcnJpZXJh
dHRyOjp+cHRocmVhZF9iYXJyaWVyYXR0ciAoKQoreworfQorCitwdGhyZWFk
X2JhcnJpZXI6OnB0aHJlYWRfYmFycmllciAoKQorICA6IHZlcmlmeWFibGVf
b2JqZWN0IChQVEhSRUFEX0JBUlJJRVJfTUFHSUMpCit7Cit9CisKK3B0aHJl
YWRfYmFycmllcjo6fnB0aHJlYWRfYmFycmllciAoKQoreworfQorCiBwdGhy
ZWFkX3J3bG9ja2F0dHI6OnB0aHJlYWRfcndsb2NrYXR0ciAoKTp2ZXJpZnlh
YmxlX29iamVjdAogICAoUFRIUkVBRF9SV0xPQ0tBVFRSX01BR0lDKSwgc2hh
cmVkIChQVEhSRUFEX1BST0NFU1NfUFJJVkFURSkKIHsKQEAgLTM4NjksMyAr
MzkxNiwyMjUgQEAgcHRocmVhZF9udWxsOjpnZXRzZXF1ZW5jZV9ucCAoKQog
fQogCiBwdGhyZWFkX251bGwgcHRocmVhZF9udWxsOjpfaW5zdGFuY2U7CisK
KworCisjZGVmaW5lIExJS0VMWShYKSBfX2J1aWx0aW5fZXhwZWN0ICghIShY
KSwgMSkKKyNkZWZpbmUgVU5MSUtFTFkoWCkgX19idWlsdGluX2V4cGVjdCAo
ISEoWCksIDApCisKKworZXh0ZXJuICJDIgoraW50CitwdGhyZWFkX2JhcnJp
ZXJhdHRyX2luaXQgKHB0aHJlYWRfYmFycmllcmF0dHJfdCAqIGJhdHRyKQor
eworICBpZiAoVU5MSUtFTFkgKGJhdHRyID09IE5VTEwpCisgICAgICB8fCBw
dGhyZWFkX2JhcnJpZXJhdHRyOjppc19nb29kX29iamVjdCAoYmF0dHIpKQor
ICAgIHJldHVybiBFSU5WQUw7CisKKyAgKmJhdHRyID0gbmV3IHB0aHJlYWRf
YmFycmllcmF0dHI7CisgICgqYmF0dHIpLT5zaGFyZWQgPSBQVEhSRUFEX1BS
T0NFU1NfUFJJVkFURTsKKworICByZXR1cm4gMDsKK30KKworCitleHRlcm4g
IkMiCitpbnQKK3B0aHJlYWRfYmFycmllcmF0dHJfc2V0cHNoYXJlZCAocHRo
cmVhZF9iYXJyaWVyYXR0cl90ICogYmF0dHIsIGludCBzaGFyZWQpCit7Cisg
IGlmIChVTkxJS0VMWSAoISBwdGhyZWFkX2JhcnJpZXJhdHRyOjppc19nb29k
X29iamVjdCAoYmF0dHIpKSkKKyAgICByZXR1cm4gRUlOVkFMOworCisgIGlm
IChVTkxJS0VMWSAoc2hhcmVkICE9IFBUSFJFQURfUFJPQ0VTU19TSEFSRUQK
KyAgICAgICAgICAgICAgICAmJiBzaGFyZWQgIT0gUFRIUkVBRF9QUk9DRVNT
X1BSSVZBVEUpKQorICAgIHJldHVybiBFSU5WQUw7CisKKyAgKCpiYXR0cikt
PnNoYXJlZCA9IHNoYXJlZDsKKyAgcmV0dXJuIDA7Cit9CisKKworZXh0ZXJu
ICJDIgoraW50CitwdGhyZWFkX2JhcnJpZXJhdHRyX2dldHBzaGFyZWQgKGNv
bnN0IHB0aHJlYWRfYmFycmllcmF0dHJfdCAqIGJhdHRyLAorICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBpbnQgKiBzaGFyZWQpCit7CisgIGlm
IChVTkxJS0VMWSAoISBwdGhyZWFkX2JhcnJpZXJhdHRyOjppc19nb29kX29i
amVjdCAoYmF0dHIpCisgICAgICAgICAgICAgICAgfHwgc2hhcmVkID09IE5V
TEwpKQorICAgIHJldHVybiBFSU5WQUw7CisKKyAgKnNoYXJlZCA9ICgqYmF0
dHIpLT5zaGFyZWQ7CisgIHJldHVybiAwOworfQorCisKK2V4dGVybiAiQyIK
K2ludAorcHRocmVhZF9iYXJyaWVyYXR0cl9kZXN0cm95IChwdGhyZWFkX2Jh
cnJpZXJhdHRyX3QgKiBiYXR0cikKK3sKKyAgaWYgKFVOTElLRUxZICghIHB0
aHJlYWRfYmFycmllcmF0dHI6OmlzX2dvb2Rfb2JqZWN0IChiYXR0cikpKQor
ICAgIHJldHVybiBFSU5WQUw7CisKKyAgZGVsZXRlX2FuZF9jbGVhciAoYmF0
dHIpOworICByZXR1cm4gMDsKK30KKworCitleHRlcm4gIkMiCitpbnQKK3B0
aHJlYWRfYmFycmllcl9pbml0IChwdGhyZWFkX2JhcnJpZXJfdCAqIGJhciwK
KyAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwdGhyZWFkX2JhcnJpZXJh
dHRyX3QgKiBhdHRyLCB1bnNpZ25lZCBjb3VudCkKK3sKKyAgaWYgKFVOTElL
RUxZIChiYXIgPT0gTlVMTAorICAgICAgICAgICAgICAgIHx8IHB0aHJlYWRf
YmFycmllcjo6aXNfZ29vZF9vYmplY3QgKGJhcikpKQorICAgIHJldHVybiBF
SU5WQUw7CisKKyAgKmJhciA9IG5ldyBwdGhyZWFkX2JhcnJpZXI7CisgIHJl
dHVybiAoKmJhciktPmluaXQgKGF0dHIsIGNvdW50KTsKK30KKworCitpbnQK
K3B0aHJlYWRfYmFycmllcjo6aW5pdCAoY29uc3QgcHRocmVhZF9iYXJyaWVy
YXR0cl90ICogYXR0ciwgdW5zaWduZWQgY291bnQpCit7CisgIHB0aHJlYWRf
bXV0ZXhfdCAqIG11dGV4ID0gTlVMTDsKKworICBpZiAoVU5MSUtFTFkgKChh
dHRyICE9IE5VTEwKKyAgICAgICAgICAgICAgICAgfHwgISBwdGhyZWFkX2Jh
cnJpZXJhdHRyOjppc19nb29kX29iamVjdCAoYXR0cikKKyAgICAgICAgICAg
ICAgICAgfHwgKCphdHRyKS0+c2hhcmVkID09IFBUSFJFQURfUFJPQ0VTU19T
SEFSRUQpCisgICAgICAgICAgICAgICAgfHwgY291bnQgPT0gMCkpCisgICAg
cmV0dXJuIEVJTlZBTDsKKworICBpbnQgcmV0dmFsID0gcHRocmVhZF9tdXRl
eF9pbml0ICgmbXR4LCBOVUxMKTsKKyAgaWYgKFVOTElLRUxZIChyZXR2YWwg
IT0gMCkpCisgICAgcmV0dXJuIHJldHZhbDsKKworICByZXR2YWwgPSBwdGhy
ZWFkX2NvbmRfaW5pdCAoJmNvbmQsIE5VTEwpOworICBpZiAoVU5MSUtFTFkg
KHJldHZhbCAhPSAwKSkKKyAgICB7CisgICAgICBpbnQgcmV0ID0gcHRocmVh
ZF9tdXRleF9kZXN0cm95IChtdXRleCk7CisgICAgICBpZiAocmV0ICE9IDAp
CisgICAgICAgIGFwaV9mYXRhbCAoInB0aHJlYWRfbXV0ZXhfZGVzdHJveSAo
JXApID0gJWQiLCBtdXRleCwgcmV0KTsKKworICAgICAgbXR4ID0gTlVMTDsK
KyAgICAgIHJldHVybiByZXR2YWw7CisgICAgfQorCisgIGNudCA9IGNvdW50
OworICBjeWMgPSAwOworICB3dCA9IDA7CisKKyAgcmV0dXJuIDA7Cit9CisK
KworZXh0ZXJuICJDIgoraW50CitwdGhyZWFkX2JhcnJpZXJfZGVzdHJveSAo
cHRocmVhZF9iYXJyaWVyX3QgKiBiYXIpCit7CisgIGlmIChVTkxJS0VMWSAo
ISBwdGhyZWFkX2JhcnJpZXI6OmlzX2dvb2Rfb2JqZWN0IChiYXIpKSkKKyAg
ICByZXR1cm4gRUlOVkFMOworCisgIGludCByZXQ7CisgIHJldCA9ICgqYmFy
KS0+ZGVzdHJveSAoKTsKKyAgaWYgKHJldCA9PSAwKQorICAgIGRlbGV0ZV9h
bmRfY2xlYXIgKGJhcik7CisKKyAgcmV0dXJuIHJldDsKK30KKworCitpbnQK
K3B0aHJlYWRfYmFycmllcjo6ZGVzdHJveSAoKQoreworICBpZiAoVU5MSUtF
TFkgKHd0ICE9IDApKQorICAgIHJldHVybiBFQlVTWTsKKworICBpbnQgcmV0
dmFsID0gcHRocmVhZF9jb25kX2Rlc3Ryb3kgKCZjb25kKTsKKyAgaWYgKFVO
TElLRUxZIChyZXR2YWwgIT0gMCkpCisgICAgcmV0dXJuIHJldHZhbDsKKyAg
ZWxzZQorICAgIGNvbmQgPSBOVUxMOworCisgIHJldHZhbCA9IHB0aHJlYWRf
bXV0ZXhfZGVzdHJveSAoJm10eCk7CisgIGlmIChVTkxJS0VMWSAocmV0dmFs
ICE9IDApKQorICAgIHJldHVybiByZXR2YWw7CisgIGVsc2UKKyAgICBtdHgg
PSBOVUxMOworCisgIGNudCA9IDA7CisgIGN5YyA9IDA7CisgIHd0ID0gMDsK
KworICByZXR1cm4gMDsKK30KKworCitleHRlcm4gIkMiCitpbnQKK3B0aHJl
YWRfYmFycmllcl93YWl0IChwdGhyZWFkX2JhcnJpZXJfdCAqIGJhcikKK3sK
KyAgaWYgKFVOTElLRUxZICghIHB0aHJlYWRfYmFycmllcjo6aXNfZ29vZF9v
YmplY3QgKGJhcikpKQorICAgIHJldHVybiBFSU5WQUw7CisKKyAgcmV0dXJu
ICgqYmFyKS0+d2FpdCAoKTsKK30KKworCitpbnQKK3B0aHJlYWRfYmFycmll
cjo6d2FpdCAoKQoreworICBpbnQgcmV0dmFsID0gcHRocmVhZF9tdXRleF9s
b2NrICgmbXR4KTsKKyAgaWYgKFVOTElLRUxZIChyZXR2YWwgIT0gMCkpCisg
ICAgcmV0dXJuIHJldHZhbDsKKworICBpZiAoVU5MSUtFTFkgKHd0ID49IGNu
dCkpCisgICAgeworICAgICAgYXBpX2ZhdGFsICgid3QgPj0gY250ICgldSA+
PSAldSkiLCB3dCwgY250KTsKKyAgICAgIHJldHVybiBFSU5WQUw7CisgICAg
fQorCisgIGlmIChVTkxJS0VMWSAoKyt3dCA9PSBjbnQpKQorICAgIHsKKyAg
ICAgICsrY3ljOworICAgICAgLyogVGhpcyBpcyB0aGUgbGFzdCB0aHJlYWQg
dG8gcmVhY2ggdGhlIGJhcnJpZXIuIFNpZ25hbCB0aGUgd2FpdGluZworICAg
ICAgICAgdGhyZWFkcyB0byB3YWtlIHVwIGFuZCBjb250aW51ZS4gICovCisg
ICAgICByZXR2YWwgPSBwdGhyZWFkX2NvbmRfYnJvYWRjYXN0ICgmY29uZCk7
CisgICAgICBpZiAoVU5MSUtFTFkgKHJldHZhbCAhPSAwKSkKKyAgICAgICAg
Z290byBjb25kX2Vycm9yOworCisgICAgICB3dCA9IDA7CisgICAgICByZXR2
YWwgPSBwdGhyZWFkX211dGV4X3VubG9jayAoJm10eCk7CisgICAgICBpZiAo
VU5MSUtFTFkgKHJldHZhbCAhPSAwKSkKKyAgICAgICAgYWJvcnQgKCk7CisK
KyAgICAgIHJldHVybiBQVEhSRUFEX0JBUlJJRVJfU0VSSUFMX1RIUkVBRDsK
KyAgICB9CisgIGVsc2UKKyAgICB7CisgICAgICB1aW50NjRfdCBjeWNsZSA9
IGN5YzsKKyAgICAgIGRvCisgICAgICAgIHsKKyAgICAgICAgICByZXR2YWwg
PSBwdGhyZWFkX2NvbmRfd2FpdCAoJmNvbmQsICZtdHgpOworICAgICAgICAg
IGlmIChVTkxJS0VMWSAocmV0dmFsICE9IDApKQorICAgICAgICAgICAgZ290
byBjb25kX2Vycm9yOworICAgICAgICB9CisgICAgICB3aGlsZSAoVU5MSUtF
TFkgKGN5Y2xlID09IGN5YykpOworCisgICAgICByZXR2YWwgPSBwdGhyZWFk
X211dGV4X3VubG9jayAoJm10eCk7CisgICAgICBpZiAoVU5MSUtFTFkgKHJl
dHZhbCAhPSAwKSkKKyAgICAgICAgYXBpX2ZhdGFsICgicHRocmVhZF9tdXRl
eF91bmxvY2sgKCVwKSA9ICVkIiwgJm10eCwgcmV0dmFsKTsKKworICAgICAg
cmV0dXJuIDA7CisgICAgfQorCisgY29uZF9lcnJvcjoKKyAgeworICAgIC0t
d3Q7CisgICAgaW50IHJldCA9IHB0aHJlYWRfbXV0ZXhfdW5sb2NrICgmbXR4
KTsKKyAgICBpZiAoVU5MSUtFTFkgKHJldCAhPSAwKSkKKyAgICAgICAgYXBp
X2ZhdGFsICgicHRocmVhZF9tdXRleF91bmxvY2sgKCVwKSA9ICVkIiwgJm10
eCwgcmV0KTsKKworICAgIHJldHVybiByZXR2YWw7CisgIH0KK30KZGlmZiAt
LWdpdCBhL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmggYi93aW5zdXAvY3lnd2lu
L3RocmVhZC5oCmluZGV4IGE2YzczNTguLmY3YmNlMTggMTAwNjQ0Ci0tLSBh
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmgKKysrIGIvd2luc3VwL2N5Z3dpbi90
aHJlYWQuaApAQCAtMSwzICsxLDQgQEAKKy8vIC0qLSBDKysgLSotCiAvKiB0
aHJlYWQuaDogTG9ja2luZyBhbmQgdGhyZWFkaW5nIG1vZHVsZSBkZWZpbml0
aW9ucwogCiAgICBDb3B5cmlnaHQgMTk5OCwgMTk5OSwgMjAwMCwgMjAwMSwg
MjAwMiwgMjAwMywgMjAwNCwgMjAwNSwgMjAwNywgMjAwOCwgMjAwOSwKQEAg
LTg0LDYgKzg1LDggQEAgY2xhc3MgcGluZm87CiAjZGVmaW5lIFBUSFJFQURf
UldMT0NLX01BR0lDIFBUSFJFQURfTUFHSUMrOQogI2RlZmluZSBQVEhSRUFE
X1JXTE9DS0FUVFJfTUFHSUMgUFRIUkVBRF9NQUdJQysxMAogI2RlZmluZSBQ
VEhSRUFEX1NQSU5MT0NLX01BR0lDIFBUSFJFQURfTUFHSUMrMTEKKyNkZWZp
bmUgUFRIUkVBRF9CQVJSSUVSX01BR0lDIFBUSFJFQURfTUFHSUMrMTIKKyNk
ZWZpbmUgUFRIUkVBRF9CQVJSSUVSQVRUUl9NQUdJQyBQVEhSRUFEX01BR0lD
KzEzCiAKICNkZWZpbmUgTVVURVhfT1dORVJfQU5PTllNT1VTICgocHRocmVh
ZF90KSAtMSkKIApAQCAtNTIwLDYgKzUyMywzOCBAQCBwcml2YXRlOgogICBz
dGF0aWMgZmFzdF9tdXRleCBjb25kX2luaXRpYWxpemF0aW9uX2xvY2s7CiB9
OwogCisKK2NsYXNzIHB0aHJlYWRfYmFycmllcmF0dHI6IHB1YmxpYyB2ZXJp
ZnlhYmxlX29iamVjdAoreworcHVibGljOgorICBzdGF0aWMgYm9vbCBpc19n
b29kX29iamVjdChwdGhyZWFkX2JhcnJpZXJhdHRyX3QgY29uc3QgKik7Cisg
IGludCBzaGFyZWQ7CisKKyAgcHRocmVhZF9iYXJyaWVyYXR0ciAoKTsKKyAg
fnB0aHJlYWRfYmFycmllcmF0dHIgKCk7Cit9OworCisKK2NsYXNzIHB0aHJl
YWRfYmFycmllcjogcHVibGljIHZlcmlmeWFibGVfb2JqZWN0Cit7CitwdWJs
aWM6CisgIHN0YXRpYyBib29sIGlzX2dvb2Rfb2JqZWN0KHB0aHJlYWRfYmFy
cmllcl90IGNvbnN0ICopOworCisgIHB0aHJlYWRfbXV0ZXhfdCBtdHg7IC8q
IE11dGV4IHByb3RlY3RpbmcgZXZlcnl0aGluZyBiZWxvdy4gKi8KKyAgcHRo
cmVhZF9jb25kX3QgY29uZDsgLyogQ29uZGl0aW9uYWwgdmFyaWFibGUgdG8g
d2FpdCBvbi4gKi8KKyAgdW5zaWduZWQgY250OyAvKiBCYXJyaWVyIGNvdW50
LiBUaHJlYWRzIHRvIHdhaXQgZm9yLiAqLworICB1aW50NjRfdCBjeWM7IC8q
IEN5Y2xlIGNvdW50LiAqLworICB1bnNpZ25lZCB3dDsgLyogQWxyZWFkeSB3
YWl0aW5nIHRocmVhZHMgY291bnQuICovCisKKyAgaW50IGluaXQgKGNvbnN0
IHB0aHJlYWRfYmFycmllcmF0dHJfdCAqLCB1bnNpZ25lZCk7CisgIGludCB3
YWl0KCk7CisgIGludCBkZXN0cm95ICgpOworCisgIHB0aHJlYWRfYmFycmll
ciAoKTsKKyAgfnB0aHJlYWRfYmFycmllciAoKTsKK307CisKKwogY2xhc3Mg
cHRocmVhZF9yd2xvY2thdHRyOiBwdWJsaWMgdmVyaWZ5YWJsZV9vYmplY3QK
IHsKIHB1YmxpYzoK

--001a114b30d4d7973c052b7e8de4--
