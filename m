Return-Path: <cygwin-patches-return-2844-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 19362 invoked by alias); 16 Aug 2002 21:31:38 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 19333 invoked from network); 16 Aug 2002 21:31:37 -0000
Date: Fri, 16 Aug 2002 14:31:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] pthread_fork part 4
Message-ID: <Pine.WNT.4.44.0208162255530.-283127@thomas.kefrig-pfaff.de>
X-X-Sender: thomas@gw.kefrig-pfaff.de
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="4687840-14984-1029531501=:-283127"
Content-ID: <Pine.WNT.4.44.0208162258310.-283127@thomas.kefrig-pfaff.de>
X-AntiVirus: scanned for viruses by NGI Next Generation Internet (http://www.ngi.de/)
X-SW-Source: 2002-q3/txt/msg00292.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--4687840-14984-1029531501=:-283127
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0208162258311.-283127@thomas.kefrig-pfaff.de>
Content-length: 1690


MTinterface revised. The key handling for reents and thread self keys is
now done by pthread keys. This will make them fork save by default.
Threads will get a thread self pointer automatically if they do not have
one. Cleanup of pthread instances is now done by a key destructor
function.

2002-08-16  Thomas Pfaff <tpfaff@gmx.net>

	* init.cc (dll_entry): Change due to new reent_key handling.
	* thread.cc (_reent_clib): Change due to new reent_key handling.
	Save and restore of Win32 LastError is no more needed.
	(_reent_winsup): Ditto.
	(MTinterface::Init): reents are now handled as pthread keys,
	explicit TlsAlloc is no more needed.
	Class members are now initialized in constructor.
	Set thread self pointer to mainthread if not forked.
	(MTinterface::fixup_after_fork): Reset threadcount to 1 after
	fork. Initialize thread self pointer.
	(pthread::self): Create thread self pointer if thread has been
	created outside the pthread scope.
	(pthread::destructor): New method to be set as key destructor
	function.
	(pthread::exit): Remove deletion of instance if thread is
	detached. This is done in the destructor now.
	(pthread::init_pthread): Initialize thread members for thread that
	has been created outside of the pthread scope.
	(pthread::thread_init_wrapper): Change due to new reent_key
	handling.
	* thread.h (pthread::self): New argument auto_init.
	(pthread::init_pthread): New method.
	(pthread::destructor): New static method.
	(MTinterface::reent_index): Removed member.
	(MTinterface::thread_self_dwTlsIndex); Ditto.
	(MTinterface::reent_key): New member.
	(MTinterface::thread_self_key): Ditto.
	(MTinterface::MTinterface): Initialize all member variables.





--4687840-14984-1029531501=:-283127
Content-Type: TEXT/plain; name="MTinterface.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0208162330360.-283127@thomas.kefrig-pfaff.de>
Content-Description: 
Content-Disposition: attachment; filename="MTinterface.patch"
Content-length: 13050

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbml0LmNjIHNyYy93
aW5zdXAvY3lnd2luL2luaXQuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dp
bi9pbml0LmNjCUZyaSBBdWcgMTYgMTM6NDQ6MDMgMjAwMgorKysgc3JjL3dp
bnN1cC9jeWd3aW4vaW5pdC5jYwlGcmkgQXVnIDE2IDEzOjU0OjAzIDIwMDIK
QEAgLTI1LDEyICsyNSw4IEBAIFdJTkFQSSBkbGxfZW50cnkgKEhBTkRMRSBo
LCBEV09SRCByZWFzb24KICAgICAgIGR5bmFtaWNhbGx5X2xvYWRlZCA9IChz
dGF0aWNfbG9hZCA9PSBOVUxMKTsKICAgICAgIGJyZWFrOwogICAgIGNhc2Ug
RExMX1RIUkVBRF9BVFRBQ0g6Ci0gICAgICBpZiAodXNlcl9kYXRhLT50aHJl
YWRpbnRlcmZhY2UpCi0JewotCSAgaWYgKCFUbHNTZXRWYWx1ZSh1c2VyX2Rh
dGEtPnRocmVhZGludGVyZmFjZS0+cmVlbnRfaW5kZXgsCi0JCSAgICAmdXNl
cl9kYXRhLT50aHJlYWRpbnRlcmZhY2UtPnJlZW50cykpCi0JICAgIGFwaV9m
YXRhbCgiU2lnIHByb2MgTVQgaW5pdCBmYWlsZWRcbiIpOwotCX0KKyAgICAg
IGlmIChNVF9JTlRFUkZBQ0UtPnJlZW50X2tleS5zZXQgKCZNVF9JTlRFUkZB
Q0UtPnJlZW50cykpCisgICAgICAgIGFwaV9mYXRhbCgiU2lnIHByb2MgTVQg
aW5pdCBmYWlsZWRcbiIpOwogICAgICAgYnJlYWs7CiAgICAgY2FzZSBETExf
UFJPQ0VTU19ERVRBQ0g6CiAgICAgY2FzZSBETExfVEhSRUFEX0RFVEFDSDoK
ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2Mgc3Jj
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCi0tLSBzcmMub2xkL3dpbnN1cC9j
eWd3aW4vdGhyZWFkLmNjCUZyaSBBdWcgMTYgMTM6NDQ6MDQgMjAwMgorKysg
c3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCUZyaSBBdWcgMTYgMTQ6MTU6
NTYgMjAwMgpAQCAtNDksMzAgKzQ5LDI0IEBAIGV4dGVybiBpbnQgdGhyZWFk
c2FmZTsKIHN0cnVjdCBfcmVlbnQgKgogX3JlZW50X2NsaWIgKCkKIHsKLSAg
aW50IHRtcCA9IEdldExhc3RFcnJvciAoKTsKICAgc3RydWN0IF9fcmVlbnRf
dCAqX3IgPQotICAgIChzdHJ1Y3QgX19yZWVudF90ICopIFRsc0dldFZhbHVl
IChNVF9JTlRFUkZBQ0UtPnJlZW50X2luZGV4KTsKLQorICAgIChzdHJ1Y3Qg
X19yZWVudF90ICopIE1UX0lOVEVSRkFDRS0+cmVlbnRfa2V5LmdldCAoKTsK
ICNpZmRlZiBfQ1lHX1RIUkVBRF9GQUlMU0FGRQogICBpZiAoX3IgPT0gMCkK
ICAgICBzeXN0ZW1fcHJpbnRmICgibG9jYWwgdGhyZWFkIHN0b3JhZ2Ugbm90
IGluaXRlZCIpOwogI2VuZGlmCi0KLSAgU2V0TGFzdEVycm9yICh0bXApOwog
ICByZXR1cm4gX3ItPl9jbGliOwogfQogCiBzdHJ1Y3QgX3dpbnN1cF90ICoK
IF9yZWVudF93aW5zdXAgKCkKIHsKLSAgaW50IHRtcCA9IEdldExhc3RFcnJv
ciAoKTsKLSAgc3RydWN0IF9fcmVlbnRfdCAqX3I7Ci0gIF9yID0gKHN0cnVj
dCBfX3JlZW50X3QgKikgVGxzR2V0VmFsdWUgKE1UX0lOVEVSRkFDRS0+cmVl
bnRfaW5kZXgpOworICBzdHJ1Y3QgX19yZWVudF90ICpfciA9CisgICAgKHN0
cnVjdCBfX3JlZW50X3QgKikgTVRfSU5URVJGQUNFLT5yZWVudF9rZXkuZ2V0
ICgpOwogI2lmZGVmIF9DWUdfVEhSRUFEX0ZBSUxTQUZFCiAgIGlmIChfciA9
PSAwKQogICAgIHN5c3RlbV9wcmludGYgKCJsb2NhbCB0aHJlYWQgc3RvcmFn
ZSBub3QgaW5pdGVkIik7CiAjZW5kaWYKLSAgU2V0TGFzdEVycm9yICh0bXAp
OwogICByZXR1cm4gX3ItPl93aW5zdXA7CiB9CiAKQEAgLTE3Nyw3ICsxNzEs
NiBAQCBNVGludGVyZmFjZTo6SW5pdCAoaW50IGZvcmtlZCkKICAgc2VtYWxp
c3QuaW5kZXggPSAwOwogI2VuZGlmCiAKLSAgcmVlbnRfaW5kZXggPSBUbHNB
bGxvYyAoKTsKICAgcmVlbnRzLl9jbGliID0gX2ltcHVyZV9wdHI7CiAgIHJl
ZW50cy5fd2luc3VwID0gJndpbnN1cF9yZWVudDsKIApAQCAtMTg5LDM0ICsx
ODIsMTQgQEAgTVRpbnRlcmZhY2U6OkluaXQgKGludCBmb3JrZWQpCiAgIHdp
bnN1cF9yZWVudC5fcHJvY2Vzc19mYWNpbGl0eSA9IDA7CiAjZW5kaWYKIAot
ICBUbHNTZXRWYWx1ZSAocmVlbnRfaW5kZXgsICZyZWVudHMpOwotICAvLyB0
aGUgc3RhdGljIHJlZW50X2RhdGEgd2lsbCBiZSB1c2VkIGluIHRoZSBtYWlu
IHRocmVhZAotCi0KLSAgaWYgKCFpbmRleGFsbG9jYXRlZCkKKyAgaWYgKCFm
b3JrZWQpCiAgICAgewotICAgICAgaW5kZXhhbGxvY2F0ZWQgPSAoLTEpOwot
ICAgICAgdGhyZWFkX3NlbGZfZHdUbHNJbmRleCA9IFRsc0FsbG9jICgpOwot
ICAgICAgaWYgKHRocmVhZF9zZWxmX2R3VGxzSW5kZXggPT0gVExTX09VVF9P
Rl9JTkRFWEVTKQotCXN5c3RlbV9wcmludGYKLQkgICgibG9jYWwgc3RvcmFn
ZSBmb3IgdGhyZWFkIGNvdWxkbid0IGJlIHNldFxuVGhpcyBtZWFucyB0aGF0
IHdlIGFyZSBub3QgdGhyZWFkIHNhZmUhIik7CisgICAgICBtYWludGhyZWFk
LmluaXRfcHRocmVhZCAoKTsKKyAgICAgIC8qc3RvcmUgdGhlIG1haW4gdGhy
ZWFkJ3MgcmVlbnRzIGFuZCBzZWxmIHBvaW50ZXIgKi8KKyAgICAgIHJlZW50
X2tleS5zZXQgKCZyZWVudHMpOworICAgICAgdGhyZWFkX3NlbGZfa2V5LnNl
dCAoJm1haW50aHJlYWQpOwogICAgIH0KLQotICBjb25jdXJyZW5jeSA9IDA7
Ci0gIHRocmVhZGNvdW50ID0gMTsgLyoxIGN1cnJlbnQgdGhyZWFkIHdoZW4g
SW5pdCBvY2N1cnMuKi8KLQotICBtYWludGhyZWFkLndpbjMyX29ial9pZCA9
IG15c2VsZi0+aFByb2Nlc3M7Ci0gIG1haW50aHJlYWQuc2V0VGhyZWFkSWR0
b0N1cnJlbnQgKCk7Ci0gIC8qc3RvcmUgdGhlIG1haW4gdGhyZWFkJ3Mgc2Vs
ZiBwb2ludGVyICovCi0gIFRsc1NldFZhbHVlICh0aHJlYWRfc2VsZl9kd1Rs
c0luZGV4LCAmbWFpbnRocmVhZCk7Ci0KLSAgaWYgKGZvcmtlZCkKLSAgICBy
ZXR1cm47Ci0KLSAga2V5cyA9IE5VTEw7Ci0gIG11dGV4cyA9IE5VTEw7Ci0g
IGNvbmRzICA9IE5VTEw7Ci0gIHNlbWFwaG9yZXMgPSBOVUxMOworICAvKiBl
bHNlOiBwdGhyZWFkIGluaXRpYWxpemF0aW9uIGlzIGRvbmUgaW4gZml4dXBf
YWZ0ZXJfZm9yayAqLwogCiAgIC8qcG9zc2libGUgdGhlIGF0Zm9yayBsaXN0
cyBzaG91bGQgYmUgaW5pdGVkIGhlcmUgYXMgd2VsbCAqLwogCkBAIC0yNDUs
NiArMjE4LDggQEAgTVRpbnRlcmZhY2U6OmZpeHVwX2JlZm9yZV9mb3JrICh2
b2lkKQogdm9pZAogTVRpbnRlcmZhY2U6OmZpeHVwX2FmdGVyX2ZvcmsgKHZv
aWQpCiB7CisgIHRocmVhZGNvdW50ID0gMTsKKwogICBwdGhyZWFkX2tleSAq
a2V5ID0ga2V5czsKICAgZGVidWdfcHJpbnRmICgia2V5cyBpcyAleCIsa2V5
cyk7CiAgIHdoaWxlIChrZXkpCkBAIC0yNzMsNiArMjQ4LDE3IEBAIE1UaW50
ZXJmYWNlOjpmaXh1cF9hZnRlcl9mb3JrICh2b2lkKQogICAgICAgc2VtLT5m
aXh1cF9hZnRlcl9mb3JrICgpOwogICAgICAgc2VtID0gc2VtLT5uZXh0Owog
ICAgIH0KKworICBwdGhyZWFkICp0aHJlYWQgPSBwdGhyZWFkOjpzZWxmKGZh
bHNlKTsKKyAgaWYgKCF0aHJlYWQpCisgICAgeworICAgICAgbWFpbnRocmVh
ZC5pbml0X3B0aHJlYWQgKCk7CisgICAgICAvKnN0b3JlIHRoZSBtYWluIHRo
cmVhZCdzIHJlZW50cyBhbmQgc2VsZiBwb2ludGVyICovCisgICAgICByZWVu
dF9rZXkuc2V0ICgmcmVlbnRzKTsKKyAgICAgIHRocmVhZF9zZWxmX2tleS5z
ZXQgKCZtYWludGhyZWFkKTsKKyAgICB9CisgIGVsc2UKKyAgICB0aHJlYWQt
PmluaXRfcHRocmVhZCAoKTsKIH0KIAogLyogSXQgaXMgYXNzdW1lZCB0aGF0
IGEga2V5IHdpbGwgbm90IGJlIGRlbGV0ZWQgd2hpbGUgaXQncyBkZXN0cnVj
dG9ycwpAQCAtMjk0LDkgKzI4MCw0MCBAQCBNVGludGVyZmFjZTo6b25fdGhy
ZWFkX2RldGFjaCAodm9pZCkKIC8qIHN0YXRpYyBtZXRob2RzICovCiAKIHB0
aHJlYWQgKgotcHRocmVhZDo6c2VsZiAoKQorcHRocmVhZDo6c2VsZiAoY29u
c3QgYm9vbCBhdXRvX2luaXQpCit7CisgIHB0aHJlYWQgKnRocmVhZCA9IChw
dGhyZWFkICopIE1UX0lOVEVSRkFDRS0+dGhyZWFkX3NlbGZfa2V5LmdldCAo
KTsKKyAgaWYgKCF0aHJlYWQgJiYgYXV0b19pbml0KQorICAgIHsKKyAgICAg
IC8qIHRocmVhZCB3YXMgbm90IGNyZWF0ZWQgYnkgcHRocmVhZF9jcmVhdGUg
bm9yIGl0IGlzIHRoZSBtYWludGhyZWFkCisgICAgICAgICBUcnkgdG8gYWxs
b2NhdGUgYSBzdHJ1Y3R1cmUgZm9yIGl0LgorICAgICAgICAgVGhpcyB0aHJl
YWQgd2lsbCBiZSBtYXJrZWQgZGV0YWNoZWQgKi8KKyAgICAgIHRocmVhZCA9
IG5ldyBwdGhyZWFkICgpOworICAgICAgaWYgKHRocmVhZCkKKyAgICAgICAg
eworICAgICAgICAgIGlmICh2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkICgm
dGhyZWFkLCBQVEhSRUFEX01BR0lDKSAhPSBWQUxJRF9PQkpFQ1QpCisgICAg
ICAgICAgICB7CisgICAgICAgICAgICAgIGRlbGV0ZSB0aHJlYWQ7CisgICAg
ICAgICAgICAgIHJldHVybiBOVUxMOworICAgICAgICAgICAgfQorCisgICAg
ICAgICAgdGhyZWFkLT5pbml0X3B0aHJlYWQgKCk7CisgICAgICAgICAgdGhy
ZWFkLT5hdHRyLmpvaW5hYmxlID0gUFRIUkVBRF9DUkVBVEVfREVUQUNIRUQ7
CisgICAgICAgICAgdGhyZWFkLT5qb2luZXIgPSB0aHJlYWQ7CisgICAgICAg
ICAgTVRfSU5URVJGQUNFLT50aHJlYWRfc2VsZl9rZXkuc2V0ICh0aHJlYWQp
OworICAgICAgICB9CisgICAgfQorCisgIHJldHVybiB0aHJlYWQ7Cit9CisK
K3ZvaWQKK3B0aHJlYWQ6OmRlc3RydWN0b3IgKHZvaWQgKnZhbHVlKQogewot
ICByZXR1cm4gKHB0aHJlYWQgKikgVGxzR2V0VmFsdWUgKE1UX0lOVEVSRkFD
RS0+dGhyZWFkX3NlbGZfZHdUbHNJbmRleCk7CisgIHB0aHJlYWQgKnRocmVh
ZCA9IChwdGhyZWFkICopIHZhbHVlOworICAvKiBjbGVhbnVwIHRocmVhZCBp
ZiB0aHJlYWQgaXMgZGV0YWNoZWQgYW5kIG5vdCBqb2luZWQgKi8KKyAgaWYg
KHRocmVhZCAmJiBfX3B0aHJlYWRfZXF1YWwoJnRocmVhZC0+am9pbmVyLCAm
dGhyZWFkKSkKKyAgICBkZWxldGUgdGhyZWFkOwogfQogCiAvKiBtZW1iZXIg
bWV0aG9kcyAqLwpAQCAtMzQ2LDcgKzM2Myw3IEBAIHB0aHJlYWQ6OmNyZWF0
ZSAodm9pZCAqKCpmdW5jKSAodm9pZCAqKSwKICAgY2FuY2VsX2V2ZW50ID0g
OjpDcmVhdGVFdmVudCAoTlVMTCxUUlVFLEZBTFNFLE5VTEwpOwogICBpZiAo
IWNhbmNlbF9ldmVudCkKICAgICB7Ci0gICAgICBzeXN0ZW1fcHJpbnRmICgi
Y291bGRuJ3QgY3JlYXRlIGNhbmNlbCBldmVudCwgdGhpcyAlcCBMYXN0RXJy
b3IgJWQiLCB0aGlzLCBHZXRMYXN0RXJyb3IgKCkgKTsKKyAgICAgIHN5c3Rl
bV9wcmludGYgKCJjb3VsZG4ndCBjcmVhdGUgY2FuY2VsIGV2ZW50LCB0aGlz
ICVwIExhc3RFcnJvciAlRSIsIHRoaXMgKTsKICAgICAgIC8qd2UgbmVlZCB0
aGUgZXZlbnQgZm9yIGNvcnJlY3QgYmVoYXZpb3VyICovCiAgICAgICBtYWdp
YyA9IDA7CiAgICAgICByZXR1cm47CkBAIC0zODMsMTQgKzQwMCwxMiBAQCBw
dGhyZWFkOjpleGl0ICh2b2lkICp2YWx1ZV9wdHIpCiAgIHBvcF9hbGxfY2xl
YW51cF9oYW5kbGVycyAoKTsKIAogICBtdXRleC5Mb2NrICgpOwotICAvLyBj
bGVhbnVwIGlmIHRocmVhZCBpcyBpbiBkZXRhY2hlZCBzdGF0ZSBhbmQgbm90
IGpvaW5lZAotICBpZiggX19wdGhyZWFkX2VxdWFsKCZqb2luZXIsICZ0aHJl
YWQgKSApCi0gICAgZGVsZXRlIHRoaXM7Ci0gIGVsc2UKKyAgaWYgKCFfX3B0
aHJlYWRfZXF1YWwoJmpvaW5lciwgJnRocmVhZCkpCiAgICAgeyAgCiAgICAg
ICByZXR1cm5fcHRyID0gdmFsdWVfcHRyOwogICAgICAgbXV0ZXguVW5Mb2Nr
ICgpOwogICAgIH0KKyAgLy8gZWxzZTogY2xlYW51cCBpcyBub3cgZG9uZSBp
biBrZXkgZGVzdHJ1Y3RvciBmdW5jdGlvbgogCiAgIGlmIChJbnRlcmxvY2tl
ZERlY3JlbWVudCAoJk1UX0lOVEVSRkFDRS0+dGhyZWFkY291bnQpID09IDAp
CiAgICAgOjpleGl0ICgwKTsKQEAgLTcwOCw2ICs3MjMsMjcgQEAgcHRocmVh
ZDo6cG9wX2FsbF9jbGVhbnVwX2hhbmRsZXJzICgpCiAgICAgcG9wX2NsZWFu
dXBfaGFuZGxlciAoMSk7CiB9CiAKK3ZvaWQKK3B0aHJlYWQ6OmluaXRfcHRo
cmVhZCAodm9pZCkKK3sKKyAgaWYgKCFEdXBsaWNhdGVIYW5kbGUgKEdldEN1
cnJlbnRQcm9jZXNzICgpLCBHZXRDdXJyZW50VGhyZWFkICgpLAorICAgICAg
ICAgICAgICAgICAgICAgICAgR2V0Q3VycmVudFByb2Nlc3MgKCksICZ3aW4z
Ml9vYmpfaWQsCisgICAgICAgICAgICAgICAgICAgICAgICAwLCBGQUxTRSwg
RFVQTElDQVRFX1NBTUVfQUNDRVNTKSkKKworICAgIHsKKyAgICAgIHN5c3Rl
bV9wcmludGYgKCJGYWlsZWQgdG8gZHVwbGljYXRlIGhhbmRsZSBmb3IgY3Vy
cmVudCB0aHJlYWQ6ICVFIik7CisgICAgICB3aW4zMl9vYmpfaWQgPSBOVUxM
OworICAgIH0KKyAgc2V0VGhyZWFkSWR0b0N1cnJlbnQgKCk7CisgIGNhbmNl
bF9ldmVudCA9IDo6Q3JlYXRlRXZlbnQgKE5VTEwsVFJVRSxGQUxTRSxOVUxM
KTsKKyAgaWYgKCFjYW5jZWxfZXZlbnQpCisgICAgeworICAgICAgc3lzdGVt
X3ByaW50ZiAoImNvdWxkbid0IGNyZWF0ZSBjYW5jZWwgZXZlbnQgZm9yIG1h
aW50aHJlYWQsIExhc3RFcnJvciAlRSIpOworICAgIH0KKyAgYXR0ci5qb2lu
YWJsZSA9IFBUSFJFQURfQ1JFQVRFX0pPSU5BQkxFOworICBqb2luZXIgPSBO
VUxMOworfQorCiBwdGhyZWFkX2F0dHI6OnB0aHJlYWRfYXR0ciAoKTp2ZXJp
ZnlhYmxlX29iamVjdCAoUFRIUkVBRF9BVFRSX01BR0lDKSwKIGpvaW5hYmxl
IChQVEhSRUFEX0NSRUFURV9KT0lOQUJMRSksIGNvbnRlbnRpb25zY29wZSAo
UFRIUkVBRF9TQ09QRV9QUk9DRVNTKSwKIGluaGVyaXRzY2hlZCAoUFRIUkVB
RF9JTkhFUklUX1NDSEVEKSwgc3RhY2tzaXplICgwKQpAQCAtMTI2OCwxNyAr
MTMwNCwxNSBAQCBwdGhyZWFkOjp0aHJlYWRfaW5pdF93cmFwcGVyICh2b2lk
ICpfYXJnCiAKICAgbG9jYWxfd2luc3VwLl9wcm9jZXNzX2xvZ21hc2sgPSBM
T0dfVVBUTyAoTE9HX0RFQlVHKTsKIAotICAvKlRoaXMgaXMgbm90IGNoZWNr
ZWQgYnkgdGhlIE9TICEhICovCi0gIGlmICghVGxzU2V0VmFsdWUgKE1UX0lO
VEVSRkFDRS0+cmVlbnRfaW5kZXgsICZsb2NhbF9yZWVudCkpCisgIGlmIChN
VF9JTlRFUkZBQ0UtPnJlZW50X2tleS5zZXQgKCZsb2NhbF9yZWVudCkpCiAg
ICAgc3lzdGVtX3ByaW50ZiAoImxvY2FsIHN0b3JhZ2UgZm9yIHRocmVhZCBj
b3VsZG4ndCBiZSBzZXQiKTsKLQotICAvKnRoZSBPUyBkb2Vzbid0IGNoZWNr
IHRoaXMgZm9yIDw9IDY0IFRscyBlbnRyaWVzIChwcmUgd2luMmspICovCi0g
IFRsc1NldFZhbHVlIChNVF9JTlRFUkZBQ0UtPnRocmVhZF9zZWxmX2R3VGxz
SW5kZXgsIHRocmVhZCk7CisgIGlmIChNVF9JTlRFUkZBQ0UtPnRocmVhZF9z
ZWxmX2tleS5zZXQgKHRocmVhZCkpCisgICAgc3lzdGVtX3ByaW50ZiAoInRo
cmVhZCBzZWxmIHBvaW50ZXIgZm9yIHRocmVhZCBjb3VsZG4ndCBiZSBzZXQi
KTsKIAogICB0aHJlYWQtPm11dGV4LkxvY2sgKCk7CiAgIC8vIGlmIHRocmVh
ZCBpcyBkZXRhY2hlZCBmb3JjZSBjbGVhbnVwIG9uIGV4aXQKICAgaWYgKHRo
cmVhZC0+YXR0ci5qb2luYWJsZSA9PSBQVEhSRUFEX0NSRUFURV9ERVRBQ0hF
RCAmJiB0aHJlYWQtPmpvaW5lciA9PSBOVUxMKQotICAgIHRocmVhZC0+am9p
bmVyID0gcHRocmVhZDo6c2VsZiAoKTsKKyAgICB0aHJlYWQtPmpvaW5lciA9
IHRocmVhZDsKICAgdGhyZWFkLT5tdXRleC5VbkxvY2sgKCk7CiAKICNpZmRl
ZiBfQ1lHX1RIUkVBRF9GQUlMU0FGRQpkaWZmIC11cnAgc3JjLm9sZC93aW5z
dXAvY3lnd2luL3RocmVhZC5oIHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5o
Ci0tLSBzcmMub2xkL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmgJRnJpIEF1ZyAx
NiAxMzo0NDowNCAyMDAyCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQu
aAlGcmkgQXVnIDE2IDEzOjUyOjI1IDIwMDIKQEAgLTI4Myw5ICsyODMsMTMg
QEAgcHVibGljOgogICAgdm9pZCBwdXNoX2NsZWFudXBfaGFuZGxlciAoX19w
dGhyZWFkX2NsZWFudXBfaGFuZGxlciAqaGFuZGxlcik7CiAgICB2b2lkIHBv
cF9jbGVhbnVwX2hhbmRsZXIgKGludCBjb25zdCBleGVjdXRlKTsKIAotICAg
c3RhdGljIHB0aHJlYWQqIHNlbGYgKCk7CisgICBzdGF0aWMgcHRocmVhZCog
c2VsZiAoY29uc3QgYm9vbCBhdXRvX2luaXQgPSB0cnVlKTsKICAgIHN0YXRp
YyB2b2lkICp0aHJlYWRfaW5pdF93cmFwcGVyICh2b2lkICopOwogCisgICB2
b2lkIGluaXRfcHRocmVhZCAodm9pZCk7CisKKyAgIHN0YXRpYyB2b2lkIGRl
c3RydWN0b3IgKHZvaWQgKnZhbHVlKTsKKwogcHJpdmF0ZToKICAgICBEV09S
RCB0aHJlYWRfaWQ7CiAgICAgX19wdGhyZWFkX2NsZWFudXBfaGFuZGxlciAq
Y2xlYW51cF9zdGFjazsKQEAgLTM2MSwxNyArMzY1LDEyIEBAIGNsYXNzIE1U
aW50ZXJmYWNlCiB7CiBwdWJsaWM6CiAgIC8vIEdlbmVyYWwKLSAgRFdPUkQg
cmVlbnRfaW5kZXg7Ci0gIERXT1JEIHRocmVhZF9zZWxmX2R3VGxzSW5kZXg7
Ci0gIC8qIHdlIG1heSBnZXQgMCBmb3IgdGhlIFRscyBpbmRleC4uIGdycnIg
Ki8KLSAgaW50IGluZGV4YWxsb2NhdGVkOwogICBpbnQgY29uY3VycmVuY3k7
CiAgIGxvbmcgaW50IHRocmVhZGNvdW50OwogCiAgIC8vIFVzZWQgZm9yIG1h
aW4gdGhyZWFkIGRhdGEsIGFuZCBzaWdwcm9jIHRocmVhZAogICBzdHJ1Y3Qg
X19yZWVudF90IHJlZW50czsKICAgc3RydWN0IF93aW5zdXBfdCB3aW5zdXBf
cmVlbnQ7Ci0gIHB0aHJlYWQgbWFpbnRocmVhZDsKIAogICBjYWxsYmFjayAq
cHRocmVhZF9wcmVwYXJlOwogICBjYWxsYmFjayAqcHRocmVhZF9jaGlsZDsK
QEAgLTM4MywxOCArMzgyLDIzIEBAIHB1YmxpYzoKICAgY2xhc3MgcHRocmVh
ZF9jb25kICAqIGNvbmRzOwogICBjbGFzcyBzZW1hcGhvcmUgICAgICogc2Vt
YXBob3JlczsKIAorICBwdGhyZWFkIG1haW50aHJlYWQ7CisKKyAgcHRocmVh
ZF9rZXkgcmVlbnRfa2V5OworICBwdGhyZWFkX2tleSB0aHJlYWRfc2VsZl9r
ZXk7CisKICAgdm9pZCBJbml0IChpbnQpOwogICB2b2lkIGZpeHVwX2JlZm9y
ZV9mb3JrICh2b2lkKTsKICAgdm9pZCBmaXh1cF9hZnRlcl9mb3JrICh2b2lk
KTsKIAogICB2b2lkIG9uX3RocmVhZF9kZXRhY2ggKHZvaWQpOwogCi0gIE1U
aW50ZXJmYWNlICgpOnJlZW50X2luZGV4ICgwKSwgaW5kZXhhbGxvY2F0ZWQg
KDApLCB0aHJlYWRjb3VudCAoMSkKLSAgICB7Ci0gICAgICBwdGhyZWFkX3By
ZXBhcmUgPSBOVUxMOwotICAgICAgcHRocmVhZF9jaGlsZCAgID0gTlVMTDsK
LSAgICAgIHB0aHJlYWRfcGFyZW50ICA9IE5VTEw7Ci0gICAgfQorICBNVGlu
dGVyZmFjZSAoKTogY29uY3VycmVuY3kgKDApLCB0aHJlYWRjb3VudCAoMSks
CisgICAgICAgICAgICAgICAgICBwdGhyZWFkX3ByZXBhcmUgKE5VTEwpLCBw
dGhyZWFkX2NoaWxkIChOVUxMKSwgcHRocmVhZF9wYXJlbnQgKE5VTEwpLAor
ICAgICAgICAgICAgICAgICAga2V5cyAoTlVMTCksIG11dGV4cyAoTlVMTCks
IGNvbmRzIChOVUxMKSwgc2VtYXBob3JlcyAoTlVMTCksCisgICAgICAgICAg
ICAgICAgICBtYWludGhyZWFkICgpLCByZWVudF9rZXkgKE5VTEwpLCB0aHJl
YWRfc2VsZl9rZXkgKHB0aHJlYWQ6OmRlc3RydWN0b3IpCisgIHsKKyAgfQog
fTsKIAogdm9pZCBfX3B0aHJlYWRfYXRmb3JrcHJlcGFyZSh2b2lkKTsK

--4687840-14984-1029531501=:-283127--
