Return-Path: <cygwin-patches-return-3027-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 2540 invoked by alias); 23 Sep 2002 10:52:39 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 2526 invoked from network); 23 Sep 2002 10:52:38 -0000
X-Authentication-Warning: atacama.four-d.de: mail set sender to <tpfaff@gmx.net> using -f
Date: Mon, 23 Sep 2002 03:52:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] updated mutex implementation
Message-ID: <Pine.WNT.4.44.0209231222440.192-200000@algeria.intern.net>
X-X-Sender: pfaff@antarctica.intern.net
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="1583522-5109-1032778099=:192"
Content-ID: <Pine.WNT.4.44.0209231249090.192@algeria.intern.net>
X-SW-Source: 2002-q3/txt/msg00475.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--1583522-5109-1032778099=:192
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0209231249091.192@algeria.intern.net>
Content-length: 1129


This patch contains an update of my mutex implementation that should apply
to current.

2002-09-23  Thomas Pfaff <tpfaff@gmx.net>

	* include/pthread.h: Change default mutex type to errorcheck.
	* thread.cc (pthread_cond::TimedWait): Fix mutex unlock call.
	(pthread_mutex::pthread_mutex): Rewrite.
	(pthread_mutex::~pthread_mutex): Ditto.
	(pthread_mutex::Lock): Ditto.
	(pthread_mutex::TryLock): Ditto.
	(pthread_mutex::UnLock): Ditto.
	(pthread_mutex::Destroy): New method.
	(pthread_mutex::SetOwner): Ditto.
	(pthread_mutex::LockRecursive): Ditto.
	(pthread_mutex::fixup_after_fork): Restore mutex after fork.
	(__pthread_mutex_destroy): Call pthread_mutex::Destroy to destroy
	mutex.
	(__pthread_mutexattr_settype): Allow errorchecking and recursive
	types.
	* thread.h (MUTEX_LOCK_COUNTER_INITIAL): New define.
	(pthread_mutex::criticalsection): Remove.
	(pthread_mutex::lock_counter): New member.
	(pthread_mutex::recursion_counter): Ditto.
	(pthread_mutex::owner): Ditto.
	(pthread_mutex::type): Ditto.
	(pthread_mutex::Destroy): New method.
	(pthread_mutex::SetOwner): Ditto.
	(pthread_mutex::LockRecursive): Ditto.




--1583522-5109-1032778099=:192
Content-Type: TEXT/PLAIN; NAME="pthread_mutex.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0209231248190.192@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_mutex.patch"
Content-length: 15222

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJl
YWQuaCBzcmMvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaAotLS0g
c3JjLm9sZC93aW5zdXAvY3lnd2luL2luY2x1ZGUvcHRocmVhZC5oCVNhdCBK
dWwgIDYgMjI6NDE6MDggMjAwMgorKysgc3JjL3dpbnN1cC9jeWd3aW4vaW5j
bHVkZS9wdGhyZWFkLmgJTW9uIFNlcCAyMyAxMDowMTo0OSAyMDAyCkBAIC01
MCwxMiArNTAsMTEgQEAgZXh0ZXJuICJDIgogI2RlZmluZSBQVEhSRUFEX0NS
RUFURV9KT0lOQUJMRSAwCiAjZGVmaW5lIFBUSFJFQURfRVhQTElDSVRfU0NI
RUQgMQogI2RlZmluZSBQVEhSRUFEX0lOSEVSSVRfU0NIRUQgMAotI2RlZmlu
ZSBQVEhSRUFEX01VVEVYX0RFRkFVTFQgMAotI2RlZmluZSBQVEhSRUFEX01V
VEVYX0VSUk9SQ0hFQ0sgMQotI2RlZmluZSBQVEhSRUFEX01VVEVYX05PUk1B
TCAyCisjZGVmaW5lIFBUSFJFQURfTVVURVhfRVJST1JDSEVDSyAwCisjZGVm
aW5lIFBUSFJFQURfTVVURVhfUkVDVVJTSVZFIDEKKyNkZWZpbmUgUFRIUkVB
RF9NVVRFWF9ERUZBVUxUIFBUSFJFQURfTVVURVhfRVJST1JDSEVDSwogLyog
dGhpcyBzaG91bGQgYmUgdG9vIGxvdyB0byBldmVyIGJlIGEgdmFsaWQgYWRk
cmVzcyAqLwogI2RlZmluZSBQVEhSRUFEX01VVEVYX0lOSVRJQUxJWkVSICh2
b2lkICopMjAKLSNkZWZpbmUgUFRIUkVBRF9NVVRFWF9SRUNVUlNJVkUgMAog
I2RlZmluZSBQVEhSRUFEX09OQ0VfSU5JVCB7IFBUSFJFQURfTVVURVhfSU5J
VElBTElaRVIsIDAgfQogI2RlZmluZSBQVEhSRUFEX1BSSU9fSU5IRVJJVAog
I2RlZmluZSBQVEhSRUFEX1BSSU9fTk9ORQpkaWZmIC11cnAgc3JjLm9sZC93
aW5zdXAvY3lnd2luL3RocmVhZC5jYyBzcmMvd2luc3VwL2N5Z3dpbi90aHJl
YWQuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MJU3Vu
IFNlcCAyMiAyMToxMTozOCAyMDAyCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90
aHJlYWQuY2MJTW9uIFNlcCAyMyAxMTowMDo1NiAyMDAyCkBAIC04NzgsMjcg
Kzg3OCwyMCBAQCBpbnQKIHB0aHJlYWRfY29uZDo6VGltZWRXYWl0IChEV09S
RCBkd01pbGxpc2Vjb25kcykKIHsKICAgRFdPUkQgcnY7Ci0gIGlmICghd2lu
Y2FwLmhhc19zaWduYWxfb2JqZWN0X2FuZF93YWl0ICgpKQotICAgIHsKLSAg
ICAgIC8vIEZJWE1FOiByYWNlIGNvbmRpdGlvbiAocG90ZW50aWFsbHkgZHJv
cCBldmVudHMKLSAgICAgIC8vIFBvc3NpYmxlIHNvbHV0aW9uIChzaW5nbGUg
cHJvY2VzcyBvbmx5KSAtIHBsYWNlIHRoaXMgaW4gYSBjcml0aWNhbCBzZWN0
aW9uLgotICAgICAgUmVsZWFzZU11dGV4IChtdXRleC0+d2luMzJfb2JqX2lk
KTsKLSAgICAgIHJ2ID0gV2FpdEZvclNpbmdsZU9iamVjdCAod2luMzJfb2Jq
X2lkLCBkd01pbGxpc2Vjb25kcyk7Ci0gICAgfQotICBlbHNlCi0gICAgewot
ICAgICAgTGVhdmVDcml0aWNhbFNlY3Rpb24gKCZtdXRleC0+Y3JpdGljYWxz
ZWN0aW9uKTsKLSAgICAgIHJ2ID0gV2FpdEZvclNpbmdsZU9iamVjdCAod2lu
MzJfb2JqX2lkLCBkd01pbGxpc2Vjb25kcyk7CisKKyAgLy8gRklYTUU6IHJh
Y2UgY29uZGl0aW9uIChwb3RlbnRpYWxseSBkcm9wIGV2ZW50cworICAvLyBQ
b3NzaWJsZSBzb2x1dGlvbiAoc2luZ2xlIHByb2Nlc3Mgb25seSkgLSBwbGFj
ZSB0aGlzIGluIGEgY3JpdGljYWwgc2VjdGlvbi4KKyAgbXV0ZXgtPlVuTG9j
ayAoKTsKKyAgcnYgPSBXYWl0Rm9yU2luZ2xlT2JqZWN0ICh3aW4zMl9vYmpf
aWQsIGR3TWlsbGlzZWNvbmRzKTsKICNpZiAwCi0gICAgLyogd2UgbmVlZCB0
byB1c2UgbmF0aXZlIHdpbjMyIG11dGV4J3MgaGVyZSwgYmVjYXVzZSB0aGUg
Y3lnd2luIG9uZXMgbm93IHVzZQotICAgICAqIGNyaXRpY2FsIHNlY3Rpb25z
LCB3aGljaCBhcmUgZmFzdGVyLCBidXQgaW50cm9kdWNlIGEgcmFjZSBfaGVy
ZV8uIFVudGlsIHRoZW4KLSAgICAgKiBUaGUgTlQgdmFyaWFudCBvZiB0aGUg
Y29kZSBpcyByZWR1bmRhbnQuCi0gICAgICovCisgIC8qIHdlIG5lZWQgdG8g
dXNlIG5hdGl2ZSB3aW4zMiBtdXRleCdzIGhlcmUsIGJlY2F1c2UgdGhlIGN5
Z3dpbiBvbmVzIG5vdyB1c2UKKyAgICogY3JpdGljYWwgc2VjdGlvbnMsIHdo
aWNoIGFyZSBmYXN0ZXIsIGJ1dCBpbnRyb2R1Y2UgYSByYWNlIF9oZXJlXy4g
VW50aWwgdGhlbgorICAgKiBUaGUgTlQgdmFyaWFudCBvZiB0aGUgY29kZSBp
cyByZWR1bmRhbnQuCisgICAqLwogCi0gICAgcnYgPSBTaWduYWxPYmplY3RB
bmRXYWl0IChtdXRleC0+d2luMzJfb2JqX2lkLCB3aW4zMl9vYmpfaWQsIGR3
TWlsbGlzZWNvbmRzLAotCQkJIGZhbHNlKTsKKyAgcnYgPSBTaWduYWxPYmpl
Y3RBbmRXYWl0IChtdXRleC0+d2luMzJfb2JqX2lkLCB3aW4zMl9vYmpfaWQs
IGR3TWlsbGlzZWNvbmRzLAorICAgICAgICAgICAgICAgICAgICAgICAgICAg
IGZhbHNlKTsKICNlbmRpZgotICAgIH0KICAgc3dpdGNoIChydikKICAgICB7
CiAgICAgY2FzZSBXQUlUX0ZBSUxFRDoKQEAgLTEwOTAsMzkgKzEwODMsNDAg
QEAgcHRocmVhZF9tdXRleDo6aXNHb29kSW5pdGlhbGl6ZXJPck9iamVjdAog
ICByZXR1cm4gdHJ1ZTsKIH0KIAotcHRocmVhZF9tdXRleDo6cHRocmVhZF9t
dXRleCAocHRocmVhZF9tdXRleGF0dHIgKmF0dHIpOnZlcmlmeWFibGVfb2Jq
ZWN0IChQVEhSRUFEX01VVEVYX01BR0lDKQorcHRocmVhZF9tdXRleDo6cHRo
cmVhZF9tdXRleCAocHRocmVhZF9tdXRleGF0dHIgKmF0dHIpIDoKKyAgdmVy
aWZ5YWJsZV9vYmplY3QgKFBUSFJFQURfTVVURVhfTUFHSUMpLAorICBsb2Nr
X2NvdW50ZXIgKE1VVEVYX0xPQ0tfQ09VTlRFUl9JTklUSUFMKSwKKyAgd2lu
MzJfb2JqX2lkIChOVUxMKSwgcmVjdXJzaW9uX2NvdW50ZXIgKDApLAorICBj
b25kd2FpdHMgKDApLCBvd25lciAoTlVMTCksIHR5cGUgKFBUSFJFQURfTVVU
RVhfREVGQVVMVCksCisgIHBzaGFyZWQoUFRIUkVBRF9QUk9DRVNTX1BSSVZB
VEUpCiB7Ci0gIC8qYXR0ciBjaGVja2VkIGluIHRoZSBDIGNhbGwgKi8KLSAg
aWYgKGF0dHIgJiYgYXR0ci0+cHNoYXJlZCA9PSBQVEhSRUFEX1BST0NFU1Nf
U0hBUkVEKQorICB3aW4zMl9vYmpfaWQgPSA6OkNyZWF0ZVNlbWFwaG9yZSAo
JnNlY19ub25lX25paCwgMCwgTE9OR19NQVgsIE5VTEwpOworICBpZiAoIXdp
bjMyX29ial9pZCkKICAgICB7Ci0gICAgICAvLyBmYWlsCiAgICAgICBtYWdp
YyA9IDA7CiAgICAgICByZXR1cm47CiAgICAgfQotICBpZiAod2luY2FwLmhh
c190cnlfZW50ZXJfY3JpdGljYWxfc2VjdGlvbiAoKSkKLSAgICBJbml0aWFs
aXplQ3JpdGljYWxTZWN0aW9uICgmY3JpdGljYWxzZWN0aW9uKTsKLSAgZWxz
ZQorICAvKmF0dHIgY2hlY2tlZCBpbiB0aGUgQyBjYWxsICovCisgIGlmIChh
dHRyKQogICAgIHsKLSAgICAgIHRoaXMtPndpbjMyX29ial9pZCA9IDo6Q3Jl
YXRlTXV0ZXggKCZzZWNfbm9uZV9uaWgsIGZhbHNlLCBOVUxMKTsKLSAgICAg
IGlmICghd2luMzJfb2JqX2lkKQotCW1hZ2ljID0gMDsKKyAgICAgIGlmIChh
dHRyLT5wc2hhcmVkID09IFBUSFJFQURfUFJPQ0VTU19TSEFSRUQpCisgICAg
ICAgIHsKKyAgICAgICAgICAvLyBmYWlsCisgICAgICAgICAgbWFnaWMgPSAw
OworICAgICAgICAgIHJldHVybjsKKyAgICAgICAgfQorCisgICAgICB0eXBl
ID0gYXR0ci0+bXV0ZXh0eXBlOwogICAgIH0KLSAgY29uZHdhaXRzID0gMDsK
LSAgcHNoYXJlZCA9IFBUSFJFQURfUFJPQ0VTU19QUklWQVRFOworCiAgIC8q
IHRocmVhZHNhZmUgYWRkaXRpb24gaXMgZWFzeSAqLwogICBuZXh0ID0gKHB0
aHJlYWRfbXV0ZXggKikgSW50ZXJsb2NrZWRFeGNoYW5nZVBvaW50ZXIgKCZN
VF9JTlRFUkZBQ0UtPm11dGV4cywgdGhpcyk7CiB9CiAKIHB0aHJlYWRfbXV0
ZXg6On5wdGhyZWFkX211dGV4ICgpCiB7Ci0gIGlmICh3aW5jYXAuaGFzX3Ry
eV9lbnRlcl9jcml0aWNhbF9zZWN0aW9uICgpKQotICAgIERlbGV0ZUNyaXRp
Y2FsU2VjdGlvbiAoJmNyaXRpY2Fsc2VjdGlvbik7Ci0gIGVsc2UKLSAgICB7
Ci0gICAgICBpZiAod2luMzJfb2JqX2lkKQotCUNsb3NlSGFuZGxlICh3aW4z
Ml9vYmpfaWQpOwotICAgICAgd2luMzJfb2JqX2lkID0gTlVMTDsKLSAgICB9
CisgIGlmICh3aW4zMl9vYmpfaWQpCisgICAgQ2xvc2VIYW5kbGUgKHdpbjMy
X29ial9pZCk7CiAgIC8qIEknbSBub3QgMTAwJSBzdXJlIHRoZSBuZXh0IGJp
dCBpcyB0aHJlYWRzYWZlLiBJIHRoaW5rIGl0IGlzLi4uICovCiAgIGlmIChN
VF9JTlRFUkZBQ0UtPm11dGV4cyA9PSB0aGlzKQogICAgIC8qIFRPRE86IHBy
aW50ZiBhbiBlcnJvciBpZiB0aGUgcmV0dXJuIHZhbHVlICE9IHRoaXMgKi8K
QEAgLTExMzEsNyArMTEyNSw3IEBAIHB0aHJlYWRfbXV0ZXg6On5wdGhyZWFk
X211dGV4ICgpCiAgICAgewogICAgICAgcHRocmVhZF9tdXRleCAqdGVtcG11
dGV4ID0gTVRfSU5URVJGQUNFLT5tdXRleHM7CiAgICAgICB3aGlsZSAodGVt
cG11dGV4LT5uZXh0ICYmIHRlbXBtdXRleC0+bmV4dCAhPSB0aGlzKQotCXRl
bXBtdXRleCA9IHRlbXBtdXRleC0+bmV4dDsKKyAgICAgICAgdGVtcG11dGV4
ID0gdGVtcG11dGV4LT5uZXh0OwogICAgICAgLyogYnV0IHRoZXJlIG1heSBi
ZSBhIHJhY2UgYmV0d2VlbiB0aGUgbG9vcCBhYm92ZSBhbmQgdGhpcyBzdGF0
ZW1lbnQgKi8KICAgICAgIC8qIFRPRE86IHByaW50ZiBhbiBlcnJvciBpZiB0
aGUgcmV0dXJuIHZhbHVlICE9IHRoaXMgKi8KICAgICAgIEludGVybG9ja2Vk
RXhjaGFuZ2VQb2ludGVyICgmdGVtcG11dGV4LT5uZXh0LCB0aGlzLT5uZXh0
KTsKQEAgLTExNDEsMzMgKzExMzUsOTYgQEAgcHRocmVhZF9tdXRleDo6fnB0
aHJlYWRfbXV0ZXggKCkKIGludAogcHRocmVhZF9tdXRleDo6TG9jayAoKQog
ewotICBpZiAod2luY2FwLmhhc190cnlfZW50ZXJfY3JpdGljYWxfc2VjdGlv
biAoKSkKKyAgaW50IHJlc3VsdCA9IDA7CisgIHB0aHJlYWRfdCBzZWxmID0g
cHRocmVhZDo6c2VsZiAoKTsKKyAKKyAgaWYgKDAgPT0gSW50ZXJsb2NrZWRJ
bmNyZW1lbnQgKCZsb2NrX2NvdW50ZXIpKQorICAgIFNldE93bmVyICgpOwor
ICBlbHNlIGlmIChfX3B0aHJlYWRfZXF1YWwgKCZvd25lciwgJnNlbGYpKQor
ICAgIHsKKyAgICAgIEludGVybG9ja2VkRGVjcmVtZW50ICgmbG9ja19jb3Vu
dGVyKTsKKyAgICAgIGlmIChQVEhSRUFEX01VVEVYX1JFQ1VSU0lWRSA9PSB0
eXBlKQorICAgICAgICByZXN1bHQgPSBMb2NrUmVjdXJzaXZlICgpOworICAg
ICAgZWxzZQorICAgICAgICByZXN1bHQgPSBFREVBRExLOworICAgIH0KKyAg
ZWxzZQogICAgIHsKLSAgICAgIEVudGVyQ3JpdGljYWxTZWN0aW9uICgmY3Jp
dGljYWxzZWN0aW9uKTsKLSAgICAgIHJldHVybiAwOworICAgICAgV2FpdEZv
clNpbmdsZU9iamVjdCAod2luMzJfb2JqX2lkLCBJTkZJTklURSk7CisgICAg
ICBTZXRPd25lciAoKTsKICAgICB9Ci0gIC8qIEZJWE1FOiBSZXR1cm4gMCBv
biBzdWNjZXNzICovCi0gIHJldHVybiBXYWl0Rm9yU2luZ2xlT2JqZWN0ICh3
aW4zMl9vYmpfaWQsIElORklOSVRFKTsKKyAKKyAgcmV0dXJuIHJlc3VsdDsK
IH0KIAogLyogcmV0dXJucyBub24temVybyBvbiBmYWlsdXJlICovCiBpbnQK
IHB0aHJlYWRfbXV0ZXg6OlRyeUxvY2sgKCkKIHsKLSAgaWYgKHdpbmNhcC5o
YXNfdHJ5X2VudGVyX2NyaXRpY2FsX3NlY3Rpb24gKCkpCi0gICAgcmV0dXJu
ICghVHJ5RW50ZXJDcml0aWNhbFNlY3Rpb24gKCZjcml0aWNhbHNlY3Rpb24p
KTsKLSAgcmV0dXJuIChXYWl0Rm9yU2luZ2xlT2JqZWN0ICh3aW4zMl9vYmpf
aWQsIDApID09IFdBSVRfVElNRU9VVCk7CisgIGludCByZXN1bHQgPSAwOwor
ICBwdGhyZWFkX3Qgc2VsZiA9IHB0aHJlYWQ6OnNlbGYgKCk7CisgCisgIGlm
IChNVVRFWF9MT0NLX0NPVU5URVJfSU5JVElBTCA9PQorICAgICAgSW50ZXJs
b2NrZWRDb21wYXJlRXhjaGFuZ2UgKCZsb2NrX2NvdW50ZXIsIDAsIE1VVEVY
X0xPQ0tfQ09VTlRFUl9JTklUSUFMICkpCisgICAgU2V0T3duZXIgKCk7Cisg
IGVsc2UgaWYgKF9fcHRocmVhZF9lcXVhbCAoJm93bmVyLCAmc2VsZikgJiYg
UFRIUkVBRF9NVVRFWF9SRUNVUlNJVkUgPT0gdHlwZSkKKyAgICByZXN1bHQg
PSBMb2NrUmVjdXJzaXZlICgpOworICBlbHNlCisgICAgcmVzdWx0ID0gRUJV
U1k7CisgCisgIHJldHVybiByZXN1bHQ7CiB9CiAKIGludAogcHRocmVhZF9t
dXRleDo6VW5Mb2NrICgpCiB7Ci0gIGlmICh3aW5jYXAuaGFzX3RyeV9lbnRl
cl9jcml0aWNhbF9zZWN0aW9uICgpKQorICBwdGhyZWFkX3Qgc2VsZiA9IHB0
aHJlYWQ6OnNlbGYgKCk7CisgCisgIGlmICghX19wdGhyZWFkX2VxdWFsICgm
b3duZXIsICZzZWxmKSkKKyAgICByZXR1cm4gRVBFUk07CisgCisgIGlmICgw
ID09IC0tcmVjdXJzaW9uX2NvdW50ZXIpCiAgICAgewotICAgICAgTGVhdmVD
cml0aWNhbFNlY3Rpb24gKCZjcml0aWNhbHNlY3Rpb24pOwotICAgICAgcmV0
dXJuIDA7CisgICAgICBvd25lciA9IE5VTEw7CisgICAgICBpZiAoTVVURVhf
TE9DS19DT1VOVEVSX0lOSVRJQUwgIT0gSW50ZXJsb2NrZWREZWNyZW1lbnQg
KCZsb2NrX2NvdW50ZXIpKQorICAgICAgICAvLyBBbm90aGVyIHRocmVhZCBp
cyB3YWl0aW5nCisgICAgICAgIDo6UmVsZWFzZVNlbWFwaG9yZSAod2luMzJf
b2JqX2lkLCAxLCBOVUxMKTsKICAgICB9Ci0gIHJldHVybiAoIVJlbGVhc2VN
dXRleCAod2luMzJfb2JqX2lkKSk7CisgCisgIHJldHVybiAwOworfQorCitp
bnQKK3B0aHJlYWRfbXV0ZXg6OkRlc3Ryb3kgKCkKK3sKKyAgaWYgKGNvbmR3
YWl0cyB8fCBUcnlMb2NrICgpKQorICAgIC8vIERvIG5vdCBkZXN0cm95IGEg
Y29uZHdhaXRlZCBvciBsb2NrZWQgbXV0ZXgKKyAgICByZXR1cm4gRUJVU1k7
CisgIGVsc2UgaWYgKHJlY3Vyc2lvbl9jb3VudGVyICE9IDEpCisgICAgewor
ICAgICAgLy8gRG8gbm90IGRlc3Ryb3kgYSByZWN1cnNpdmUgbG9ja2VkIG11
dGV4CisgICAgICAtLXJlY3Vyc2lvbl9jb3VudGVyOworICAgICAgcmV0dXJu
IEVCVVNZOworICAgIH0KKyAKKyAgZGVsZXRlIHRoaXM7CisgIHJldHVybiAw
OworfQorIAordm9pZAorcHRocmVhZF9tdXRleDo6U2V0T3duZXIgKCkKK3sK
KyAgcmVjdXJzaW9uX2NvdW50ZXIgPSAxOworICBvd25lciA9IHB0aHJlYWQ6
OnNlbGYgKCk7Cit9CisKK2ludAorcHRocmVhZF9tdXRleDo6TG9ja1JlY3Vy
c2l2ZSAoKQoreworICBpZiAoVUlOVF9NQVggPT0gcmVjdXJzaW9uX2NvdW50
ZXIpCisgICAgcmV0dXJuIEVBR0FJTjsKKyAgKytyZWN1cnNpb25fY291bnRl
cjsKKyAgcmV0dXJuIDA7CiB9CiAKIHZvaWQKQEAgLTExNzYsMTUgKzEyMzMs
MTggQEAgcHRocmVhZF9tdXRleDo6Zml4dXBfYWZ0ZXJfZm9yayAoKQogICBk
ZWJ1Z19wcmludGYgKCJtdXRleCAleCBpbiBmaXh1cF9hZnRlcl9mb3JrIiwg
dGhpcyk7CiAgIGlmIChwc2hhcmVkICE9IFBUSFJFQURfUFJPQ0VTU19QUklW
QVRFKQogICAgIGFwaV9mYXRhbCAoInB0aHJlYWRfbXV0ZXg6OmZpeHVwX2Fm
dGVyX2ZvcmsgKCkgZG9lc24ndHVuZGVyc3RhbmQgUFJPQ0VTU19TSEFSRUQg
bXV0ZXgncyIpOwotICAvKiBGSVhNRTogZHVwbGljYXRlIGNvZGUgaGVyZSBh
bmQgaW4gdGhlIGNvbnN0cnVjdG9yLiAqLwotICBpZiAod2luY2FwLmhhc190
cnlfZW50ZXJfY3JpdGljYWxfc2VjdGlvbiAoKSkKLSAgICBJbml0aWFsaXpl
Q3JpdGljYWxTZWN0aW9uICgmY3JpdGljYWxzZWN0aW9uKTsKLSAgZWxzZQot
ICAgIHsKLSAgICAgIHdpbjMyX29ial9pZCA9IDo6Q3JlYXRlTXV0ZXggKCZz
ZWNfbm9uZV9uaWgsIGZhbHNlLCBOVUxMKTsKLSAgICAgIGlmICghd2luMzJf
b2JqX2lkKQotCWFwaV9mYXRhbCAoInB0aHJlYWRfbXV0ZXg6OmZpeHVwX2Fm
dGVyX2ZvcmsgKCkgZmFpbGVkIHRvIGNyZWF0ZSBuZXcgd2luMzIgbXV0ZXgi
KTsKLSAgICB9CisKKyAgaWYgKE5VTEwgPT0gb3duZXIpCisgICAgLyogbXV0
ZXggaGFzIG5vIG93bmVyLCByZXNldCB0byBpbml0aWFsICovCisgICAgbG9j
a19jb3VudGVyID0gTVVURVhfTE9DS19DT1VOVEVSX0lOSVRJQUw7CisgIGVs
c2UgaWYgKGxvY2tfY291bnRlciAhPSBNVVRFWF9MT0NLX0NPVU5URVJfSU5J
VElBTCkKKyAgICAvKiBBbGwgd2FpdGluZyB0aHJlYWRzIGFyZSBnb25lIGFm
dGVyIGEgZm9yayAqLworICAgIGxvY2tfY291bnRlciA9IDA7CisKKyAgd2lu
MzJfb2JqX2lkID0gOjpDcmVhdGVTZW1hcGhvcmUgKCZzZWNfbm9uZV9uaWgs
IDAsIExPTkdfTUFYLCBOVUxMKTsKKyAgaWYgKCF3aW4zMl9vYmpfaWQpCisg
ICAgYXBpX2ZhdGFsICgicHRocmVhZF9tdXRleDo6Zml4dXBfYWZ0ZXJfZm9y
ayAoKSBmYWlsZWQgdG8gcmVjcmVhdGUgd2luMzIgc2VtYXBob3JlIGZvciBt
dXRleCIpOworCiAjaWYgREVURUNUX0JBRF9BUFBTCiAgIGlmIChjb25kd2Fp
dHMpCiAgICAgYXBpX2ZhdGFsICgiRm9ya2VkICgpIHdoaWxlIGEgbXV0ZXgg
aGFzIGNvbmRpdGlvbiB2YXJpYWJsZXMgd2FpdGluZyBvbiBpdC5cblJlcG9y
dCB0byBjeWd3aW5AY3lnd2luLmNvbSIpOwpAQCAtMjI5OCwxNiArMjM1OCwx
NyBAQCBfX3B0aHJlYWRfbXV0ZXhfdW5sb2NrIChwdGhyZWFkX211dGV4X3Qg
CiBpbnQKIF9fcHRocmVhZF9tdXRleF9kZXN0cm95IChwdGhyZWFkX211dGV4
X3QgKm11dGV4KQogeworICBpbnQgcnY7CisgCiAgIGlmIChwdGhyZWFkX211
dGV4Ojppc0dvb2RJbml0aWFsaXplciAobXV0ZXgpKQogICAgIHJldHVybiAw
OwogICBpZiAoIXB0aHJlYWRfbXV0ZXg6OmlzR29vZE9iamVjdCAobXV0ZXgp
KSAKICAgICByZXR1cm4gRUlOVkFMOwogCi0gIC8qcmVhZGluZyBhIHdvcmQg
aXMgYXRvbWljICovCi0gIGlmICgoKm11dGV4KS0+Y29uZHdhaXRzKQotICAg
IHJldHVybiBFQlVTWTsKKyAgcnYgPSAoKm11dGV4KS0+RGVzdHJveSAoKTsK
KyAgaWYgKHJ2KQorICAgIHJldHVybiBydjsKIAotICBkZWxldGUgKCptdXRl
eCk7CiAgICptdXRleCA9IE5VTEw7CiAgIHJldHVybiAwOwogfQpAQCAtMjM0
NSwxMCArMjQwNiw2IEBAIF9fcHRocmVhZF9tdXRleGF0dHJfZ2V0cHNoYXJl
ZCAoY29uc3QgcHQKICAgcmV0dXJuIDA7CiB9CiAKLS8qV2luMzIgbXV0ZXgn
cyBhcmUgZXF1aXZhbGVudCB0byBwb3NpeCBSRUNVUlNJVkUgbXV0ZXhzLgot
ICpXZSBuZWVkIHRvIHB1dCBnbHVlIGluIHBsYWNlIHRvIHN1cHBvcnQgb3Ro
ZXIgdHlwZXMgb2YgbXV0ZXgncy4gV2UgbWFwCi0gKlBUSFJFQURfTVVURVhf
REVGQVVMVCB0byBQVEhSRUFEX01VVEVYX1JFQ1VSU0lWRSBhbmQgcmV0dXJu
IEVJTlZBTCBmb3Igb3RoZXIgdHlwZXMuCi0gKi8KIGludAogX19wdGhyZWFk
X211dGV4YXR0cl9nZXR0eXBlIChjb25zdCBwdGhyZWFkX211dGV4YXR0cl90
ICphdHRyLCBpbnQgKnR5cGUpCiB7CkBAIC0yMzU4LDEwICsyNDE1LDcgQEAg
X19wdGhyZWFkX211dGV4YXR0cl9nZXR0eXBlIChjb25zdCBwdGhyZQogICBy
ZXR1cm4gMDsKIH0KIAotLypDdXJyZW50bHkgcHRocmVhZF9tdXRleF9pbml0
IGlnbm9yZXMgdGhlIGF0dHIgdmFyaWFibGUsIHRoaXMgaXMgYmVjYXVzZQot
ICpub25lIG9mIHRoZSB2YXJpYWJsZXMgaGF2ZSBhbnkgaW1wYWN0IG9uIGl0
J3MgYmVoYXZpb3VyLgotICoKLSAqRklYTUU6IHdyaXRlIGFuZCB0ZXN0IHBy
b2Nlc3Mgc2hhcmVkIG11dGV4J3MuCisvKkZJWE1FOiB3cml0ZSBhbmQgdGVz
dCBwcm9jZXNzIHNoYXJlZCBtdXRleCdzLgogICovCiBpbnQKIF9fcHRocmVh
ZF9tdXRleGF0dHJfaW5pdCAocHRocmVhZF9tdXRleGF0dHJfdCAqYXR0cikK
QEAgLTI0MzgsOSArMjQ5MiwxNyBAQCBfX3B0aHJlYWRfbXV0ZXhhdHRyX3Nl
dHR5cGUgKHB0aHJlYWRfbXV0CiB7CiAgIGlmICghcHRocmVhZF9tdXRleGF0
dHI6OmlzR29vZE9iamVjdCAoYXR0cikpCiAgICAgcmV0dXJuIEVJTlZBTDsK
LSAgaWYgKHR5cGUgIT0gUFRIUkVBRF9NVVRFWF9SRUNVUlNJVkUpCi0gICAg
cmV0dXJuIEVJTlZBTDsKLSAgKCphdHRyKS0+bXV0ZXh0eXBlID0gdHlwZTsK
KyAKKyAgc3dpdGNoICh0eXBlKQorICAgIHsKKyAgICBjYXNlIFBUSFJFQURf
TVVURVhfRVJST1JDSEVDSzoKKyAgICBjYXNlIFBUSFJFQURfTVVURVhfUkVD
VVJTSVZFOgorICAgICAgKCphdHRyKS0+bXV0ZXh0eXBlID0gdHlwZTsKKyAg
ICAgIGJyZWFrOworICAgIGRlZmF1bHQ6CisgICAgICByZXR1cm4gRUlOVkFM
OworICAgIH0KKwogICByZXR1cm4gMDsKIH0KIApkaWZmIC11cnAgc3JjLm9s
ZC93aW5zdXAvY3lnd2luL3RocmVhZC5oIHNyYy93aW5zdXAvY3lnd2luL3Ro
cmVhZC5oCi0tLSBzcmMub2xkL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmgJU2F0
IFNlcCAyMSAxNjoxMzo0MiAyMDAyCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90
aHJlYWQuaAlNb24gU2VwIDIzIDEwOjMwOjAxIDIwMDIKQEAgLTE1Miw2ICsx
NTIsOCBAQCBwcml2YXRlOgogI2RlZmluZSBTRU1fTUFHSUMgUFRIUkVBRF9N
QUdJQys3CiAjZGVmaW5lIFBUSFJFQURfT05DRV9NQUdJQyBQVEhSRUFEX01B
R0lDKzg7CiAKKyNkZWZpbmUgTVVURVhfTE9DS19DT1VOVEVSX0lOSVRJQUwg
ICAoLTEpCisKIC8qIHZlcmlmeWFibGVfb2JqZWN0IHNob3VsZCBub3QgYmUg
ZGVmaW5lZCBoZXJlIC0gaXQncyBhIGdlbmVyYWwgcHVycG9zZSBjbGFzcyAq
LwogCiBjbGFzcyB2ZXJpZnlhYmxlX29iamVjdApAQCAtMjkxLDE1ICsyOTMs
MjEgQEAgcHVibGljOgogICBzdGF0aWMgYm9vbCBpc0dvb2RPYmplY3QocHRo
cmVhZF9tdXRleF90IGNvbnN0ICopOwogICBzdGF0aWMgYm9vbCBpc0dvb2RJ
bml0aWFsaXplcihwdGhyZWFkX211dGV4X3QgY29uc3QgKik7CiAgIHN0YXRp
YyBib29sIGlzR29vZEluaXRpYWxpemVyT3JPYmplY3QocHRocmVhZF9tdXRl
eF90IGNvbnN0ICopOwotICBDUklUSUNBTF9TRUNUSU9OIGNyaXRpY2Fsc2Vj
dGlvbjsKKyAgTE9ORyBsb2NrX2NvdW50ZXI7CiAgIEhBTkRMRSB3aW4zMl9v
YmpfaWQ7CisgIHVuc2lnbmVkIGludCByZWN1cnNpb25fY291bnRlcjsKICAg
TE9ORyBjb25kd2FpdHM7CisgIHB0aHJlYWRfdCBvd25lcjsKKyAgaW50IHR5
cGU7CiAgIGludCBwc2hhcmVkOwogICBjbGFzcyBwdGhyZWFkX211dGV4ICog
bmV4dDsKIAogICBpbnQgTG9jayAoKTsKICAgaW50IFRyeUxvY2sgKCk7CiAg
IGludCBVbkxvY2sgKCk7CisgIGludCBEZXN0cm95ICgpOworICB2b2lkIFNl
dE93bmVyICgpOworICBpbnQgTG9ja1JlY3Vyc2l2ZSAoKTsKICAgdm9pZCBm
aXh1cF9hZnRlcl9mb3JrICgpOwogCiAgIHB0aHJlYWRfbXV0ZXggKHB0aHJl
YWRfbXV0ZXhhdHRyICogPSBOVUxMKTsK

--1583522-5109-1032778099=:192--
