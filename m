Return-Path: <cygwin-patches-return-3631-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 20861 invoked by alias); 27 Feb 2003 12:26:31 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 20852 invoked from network); 27 Feb 2003 12:26:31 -0000
X-Authentication-Warning: atacama.four-d.de: mail set sender to <tpfaff@gmx.net> using -f
Date: Thu, 27 Feb 2003 12:26:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] add support for PTHREAD_MUTEX_NORMAL
Message-ID: <Pine.WNT.4.44.0302271028080.285-201000@algeria.intern.net>
X-X-Sender: pfaff@antarctica.intern.net
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="2003125-6527-1046339704=:285"
Content-ID: <Pine.WNT.4.44.0302271325290.285@algeria.intern.net>
X-SW-Source: 2003-q1/txt/msg00280.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--2003125-6527-1046339704=:285
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0302271325291.285@algeria.intern.net>
Content-length: 1959


This patch adds support for PTHREAD_MUTEX_NORMAL (fast and
deadlocking) mutexes and slightly modifies the lock counter logic.
The counter now start at 0.

Attached are also additional testcases for the MUTEX_NORMAL type.

2002-03-27  Thomas Pfaff  <tpfaff@gmx.net>

	* include/pthread.h (PTHREAD_MUTEX_NORMAL): New define.
	* thread.cc: Remove errno.h include.
	(pthread::precreate): Change internal mutex type to normal.
	(pthread_mutex::canBeUnlocked): Implement.
	(pthread_mutex::pthread_mutex): Initialize lock_counter with 0.
	(pthread_mutex::Lock): Rename to _Lock. Add self parameter.
	Change lock_counter logic. Update SetOwner call.
	(pthread_mutex::TryLock): Rename to _TryLock. Add self parameter.
	Change lock_counter logic. Update SetOwner call.
	(pthread_mutex::UnLock): Rename to _UnLock. Add self parameter.
	Change lock_counter logic.
	(pthread_mutex::Destroy): Rename to _Destroy. Update TryLock call.
	(pthread_mutex::SetOwner): Move to thread.h as inline.
	(pthread_mutex::LockRecursive): Ditto.
	(pthread_mutex::fixup_after_fork): Change lock_counter logic.
	(__pthread_mutexattr_settype): Add PTHREAD_MUTEX_NORMAL to valid
	types check.
	* thread.h: Include errno.h and limits.h
	(MUTEX_LOCK_COUNTER_INITIAL): Remove
	(MUTEX_OWNER_ANONYMOUS): New define.
	(pthread_mutex::canBeUnlocked): New static method.
	(pthread_mutex::lock_counter): Change type to unsigned long.
	(pthread_mutex::_Lock): New method.
	(pthread_mutex::_TryLock): New method.
	(pthread_mutex::_UnLock): New method.
	(pthread_mutex::_Destroy): New method.
	(pthread_mutex::GetPthreadSelf): New method.
	(pthread_mutex::Lock): Call _Lock with pthread_self pointer.
	(pthread_mutex::TryLock): Call _TryLock with pthread_self pointer.
	(pthread_mutex::UnLock): Call _UnLock with pthread_self pointer.
	(pthread_mutex::Destroy): Call _Destroy with pthread_self pointer.
	(pthread_mutex::SetOwner): Moved from thread.cc as inline.
	(pthread_mutex::LockRecursive): Ditto.


--2003125-6527-1046339704=:285
Content-Type: APPLICATION/X-GZIP; NAME="mutexn.tar.gz"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0302271055040.285@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="mutexn.tar.gz"
Content-length: 1306

H4sICB7gXT4CA211dGV4bi50YXIA7VdtT9swEO7X5VfcmMRaYCUpLZGG+qEb
nTYJGIIibZ+qkFyJtzapbIcXTfvvOzsOtCUtMLYyJj+q2sT34rvm/NxllEm8
9JJ6WPl7cD3X9X2/4rqNlt/YUr/NZsOjXw2v5TUrrr/d8D3fc5uk53lNUge3
sgRkQgYcoDIeBIPBQj3klf8Pm2vgwBqMijKgG3XfETBIuVmuh3CaSbhgMgZ5
NUYQKEGmcNj7eNTt7Pb3T3rdL/2Dz0f7nb26cfCeYyARAhBsNB5i7gnS028Y
yg0YpuF3YHSRJdeXMsYEIhSSp1e0oBxBL2YC6EMy40jQzuorHejFsYxpo8i4
HwQjNrwiQUDRIoQBOUyLiHZxjEkkIE2gc/gJBlkSSpYm4i0JXxg/fe0nkJL3
KUeVa7WmbKflfZYwqQUz6yZ6Ldp0nFcsCYdZhLCiQq7HK44zrS9N3G04ONnb
23FuR0Ealx262HEclkhnFLCEvP9wAAJBBSmrt010cKu5WQ3abXBrZL3AoMjU
2GyUPtcSTyb2PPj5exQBqesNmB9Y7u7lne5UwRh3d6XXz8vrvtrF45urXpIx
R5nxBNwd56fzHM+/Tmn7Sfm/Qcx/w/9+U/F/y2tY/l82/2/f8H+PjoIoJQJD
WYoxDEVrAlbnTBSyCxYiVDmGGRfsHLWwZrQRDGWLOM2GETF+ECn5nTSt49Qo
Tm2oe0zO0FOCGTJcpDBF83N0zhbrzG0HmntK1g0rze8SVJKShUCMr/+692lG
V21FMoWotI/slEpn+8h5yiLKQzlGXjV3AT+b31ZKKRduQltf11RIpXScP9OL
gEmIkVMRFI8Xo5rK9vc3eCjDG2I2Cdag1WopjobZPlq4o7lCbaL+89FlT005
bXjjLe6cpa32j3XaBY7OZh2t5jHfti1yaZfv9eiuPXMWV2mQU81xw9RXfjdp
dzxEHFepI0z7majzNng1U1D0BddVJbIwRIwAz2lQlLR2FqspL0qT1zQPXiR6
IFR+cqtTDAMibfjQOe7l5wOFUQ5jpKGTTJCLmI3r2mDzwSWmU4E7cmnkIryk
v9Mt8oIDSoJTjQYUSpTvPTlJOMvt//7T9v+mt3Xd/z3Pzd//tmz/X3b/9x/d
//U7nORXk9NAlRgLR2NJdX6/iUC/EQ4YV696bETvkEkE3Xcnx1/pvTNM6Uat
2nHhWY8LcyxN6Uwa6yf/yHHg3srdw+7Rvp0fnvv88I/3XAsLCwsLCwsLCwsL
CwsLCwsLi2XhFz/1Q6sAKAAA

--2003125-6527-1046339704=:285
Content-Type: TEXT/PLAIN; NAME="pthread_mutex_normal.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0302271055041.285@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_mutex_normal.patch"
Content-length: 10915

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJl
YWQuaCBzcmMvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaAotLS0g
c3JjLm9sZC93aW5zdXAvY3lnd2luL2luY2x1ZGUvcHRocmVhZC5oCTIwMDMt
MDItMjcgMDk6MTQ6MjEuMDAwMDAwMDAwICswMTAwCisrKyBzcmMvd2luc3Vw
L2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaAkyMDAzLTAyLTI3IDA5OjIwOjI0
LjAwMDAwMDAwMCArMDEwMApAQCAtNTIsNiArNTIsNyBAQCBleHRlcm4gIkMi
CiAjZGVmaW5lIFBUSFJFQURfSU5IRVJJVF9TQ0hFRCAwCiAjZGVmaW5lIFBU
SFJFQURfTVVURVhfUkVDVVJTSVZFIDAKICNkZWZpbmUgUFRIUkVBRF9NVVRF
WF9FUlJPUkNIRUNLIDEKKyNkZWZpbmUgUFRIUkVBRF9NVVRFWF9OT1JNQUwg
MgogI2RlZmluZSBQVEhSRUFEX01VVEVYX0RFRkFVTFQgUFRIUkVBRF9NVVRF
WF9FUlJPUkNIRUNLCiAvKiB0aGlzIHNob3VsZCBiZSB0b28gbG93IHRvIGV2
ZXIgYmUgYSB2YWxpZCBhZGRyZXNzICovCiAjZGVmaW5lIFBUSFJFQURfTVVU
RVhfSU5JVElBTElaRVIgKHB0aHJlYWRfbXV0ZXhfdCkyMApkaWZmIC11cnAg
c3JjLm9sZC93aW5zdXAvY3lnd2luL3RocmVhZC5jYyBzcmMvd2luc3VwL2N5
Z3dpbi90aHJlYWQuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJl
YWQuY2MJMjAwMy0wMi0yNyAwOToxNDoyMS4wMDAwMDAwMDAgKzAxMDAKKysr
IHNyYy93aW5zdXAvY3lnd2luL3RocmVhZC5jYwkyMDAzLTAyLTI3IDA5OjIz
OjEwLjAwMDAwMDAwMCArMDEwMApAQCAtMzIsNyArMzIsNiBAQCBkZXRhaWxz
LiAqLwogI2lmZGVmIF9NVF9TQUZFCiAjaW5jbHVkZSAid2luc3VwLmgiCiAj
aW5jbHVkZSA8bGltaXRzLmg+Ci0jaW5jbHVkZSA8ZXJybm8uaD4KICNpbmNs
dWRlICJjeWdlcnJuby5oIgogI2luY2x1ZGUgPGFzc2VydC5oPgogI2luY2x1
ZGUgPHN0ZGxpYi5oPgpAQCAtMzI4LDYgKzMyNyw4IEBAIHB0aHJlYWQ6OnBy
ZWNyZWF0ZSAocHRocmVhZF9hdHRyICpuZXdhdHQKICAgICAgIG1hZ2ljID0g
MDsKICAgICAgIHJldHVybjsKICAgICB9CisgIC8qIENoYW5nZSB0aGUgbXV0
ZXggdHlwZSB0byBOT1JNQUwgdG8gc3BlZWQgdXAgbXV0ZXggb3BlcmF0aW9u
cyAqLworICBtdXRleC50eXBlID0gUFRIUkVBRF9NVVRFWF9OT1JNQUw7CiAK
ICAgY2FuY2VsX2V2ZW50ID0gOjpDcmVhdGVFdmVudCAoJnNlY19ub25lX25p
aCwgVFJVRSwgRkFMU0UsIE5VTEwpOwogICBpZiAoIWNhbmNlbF9ldmVudCkK
QEAgLTExNTcsNiArMTE1OCwxOSBAQCBwdGhyZWFkX211dGV4Ojppc0dvb2RJ
bml0aWFsaXplck9yQmFkT2JqCiAgIHJldHVybiB0cnVlOwogfQogCitib29s
CitwdGhyZWFkX211dGV4OjpjYW5CZVVubG9ja2VkIChwdGhyZWFkX211dGV4
X3QgY29uc3QgKm11dGV4KQoreworICBwdGhyZWFkX3Qgc2VsZiA9IHB0aHJl
YWQ6OnNlbGYgKCk7CisKKyAgaWYgKCFpc0dvb2RPYmplY3QgKG11dGV4KSkK
KyAgICByZXR1cm4gZmFsc2U7CisgIC8qCisgICAqIENoZWNrIGlmIHRoZSBt
dXRleCBpcyBvd25lZCBieSB0aGUgY3VycmVudCB0aHJlYWQgYW5kIGNhbiBi
ZSB1bmxvY2tlZAorICAgKi8KKyAgcmV0dXJuIChfX3B0aHJlYWRfZXF1YWwg
KCYoKm11dGV4KS0+b3duZXIsICZzZWxmKSkgJiYgMSA9PSAoKm11dGV4KS0+
cmVjdXJzaW9uX2NvdW50ZXI7Cit9CisKIC8qIFRoaXMgaXMgdXNlZCBmb3Ig
bXV0ZXggY3JlYXRpb24gcHJvdGVjdGlvbiB3aXRoaW4gYSBzaW5nbGUgcHJv
Y2VzcyBvbmx5ICovCiBuYXRpdmVNdXRleCBOT19DT1BZIHB0aHJlYWRfbXV0
ZXg6Om11dGV4SW5pdGlhbGl6YXRpb25Mb2NrOwogCkBAIC0xMTcyLDcgKzEx
ODYsNyBAQCBwdGhyZWFkX211dGV4Ojppbml0TXV0ZXggKCkKIAogcHRocmVh
ZF9tdXRleDo6cHRocmVhZF9tdXRleCAocHRocmVhZF9tdXRleGF0dHIgKmF0
dHIpIDoKICAgdmVyaWZ5YWJsZV9vYmplY3QgKFBUSFJFQURfTVVURVhfTUFH
SUMpLAotICBsb2NrX2NvdW50ZXIgKE1VVEVYX0xPQ0tfQ09VTlRFUl9JTklU
SUFMKSwKKyAgbG9ja19jb3VudGVyICgwKSwKICAgd2luMzJfb2JqX2lkIChO
VUxMKSwgcmVjdXJzaW9uX2NvdW50ZXIgKDApLAogICBjb25kd2FpdHMgKDAp
LCBvd25lciAoTlVMTCksIHR5cGUgKFBUSFJFQURfTVVURVhfREVGQVVMVCks
CiAgIHBzaGFyZWQgKFBUSFJFQURfUFJPQ0VTU19QUklWQVRFKQpAQCAtMTIy
MSwxNiArMTIzNSwxNSBAQCBwdGhyZWFkX211dGV4Ojp+cHRocmVhZF9tdXRl
eCAoKQogfQogCiBpbnQKLXB0aHJlYWRfbXV0ZXg6OkxvY2sgKCkKK3B0aHJl
YWRfbXV0ZXg6Ol9Mb2NrIChwdGhyZWFkX3Qgc2VsZikKIHsKICAgaW50IHJl
c3VsdCA9IDA7Ci0gIHB0aHJlYWRfdCBzZWxmID0gcHRocmVhZDo6c2VsZiAo
KTsKIAotICBpZiAoMCA9PSBJbnRlcmxvY2tlZEluY3JlbWVudCAoJmxvY2tf
Y291bnRlcikpCi0gICAgU2V0T3duZXIgKCk7Ci0gIGVsc2UgaWYgKF9fcHRo
cmVhZF9lcXVhbCAoJm93bmVyLCAmc2VsZikpCisgIGlmICgxID09IEludGVy
bG9ja2VkSW5jcmVtZW50ICgobG9uZyAqKSZsb2NrX2NvdW50ZXIpKQorICAg
IFNldE93bmVyIChzZWxmKTsKKyAgZWxzZSBpZiAoUFRIUkVBRF9NVVRFWF9O
T1JNQUwgIT0gdHlwZSAmJiBfX3B0aHJlYWRfZXF1YWwgKCZvd25lciwgJnNl
bGYpKQogICAgIHsKLSAgICAgIEludGVybG9ja2VkRGVjcmVtZW50ICgmbG9j
a19jb3VudGVyKTsKKyAgICAgIEludGVybG9ja2VkRGVjcmVtZW50ICgobG9u
ZyAqKSAmbG9ja19jb3VudGVyKTsKICAgICAgIGlmIChQVEhSRUFEX01VVEVY
X1JFQ1VSU0lWRSA9PSB0eXBlKQogCXJlc3VsdCA9IExvY2tSZWN1cnNpdmUg
KCk7CiAgICAgICBlbHNlCkBAIC0xMjM5LDIzICsxMjUyLDIwIEBAIHB0aHJl
YWRfbXV0ZXg6OkxvY2sgKCkKICAgZWxzZQogICAgIHsKICAgICAgIFdhaXRG
b3JTaW5nbGVPYmplY3QgKHdpbjMyX29ial9pZCwgSU5GSU5JVEUpOwotICAg
ICAgU2V0T3duZXIgKCk7CisgICAgICBTZXRPd25lciAoc2VsZik7CiAgICAg
fQogCiAgIHJldHVybiByZXN1bHQ7CiB9CiAKLS8qIHJldHVybnMgbm9uLXpl
cm8gb24gZmFpbHVyZSAqLwogaW50Ci1wdGhyZWFkX211dGV4OjpUcnlMb2Nr
ICgpCitwdGhyZWFkX211dGV4OjpfVHJ5TG9jayAocHRocmVhZF90IHNlbGYp
CiB7CiAgIGludCByZXN1bHQgPSAwOwotICBwdGhyZWFkX3Qgc2VsZiA9IHB0
aHJlYWQ6OnNlbGYgKCk7CiAKLSAgaWYgKE1VVEVYX0xPQ0tfQ09VTlRFUl9J
TklUSUFMID09Ci0gICAgICBJbnRlcmxvY2tlZENvbXBhcmVFeGNoYW5nZSAo
JmxvY2tfY291bnRlciwgMCwgTVVURVhfTE9DS19DT1VOVEVSX0lOSVRJQUwg
KSkKLSAgICBTZXRPd25lciAoKTsKLSAgZWxzZSBpZiAoX19wdGhyZWFkX2Vx
dWFsICgmb3duZXIsICZzZWxmKSAmJiBQVEhSRUFEX01VVEVYX1JFQ1VSU0lW
RSA9PSB0eXBlKQorICBpZiAoMCA9PSBJbnRlcmxvY2tlZENvbXBhcmVFeGNo
YW5nZSAoKGxvbmcgKikmbG9ja19jb3VudGVyLCAxLCAwICkpCisgICAgU2V0
T3duZXIgKHNlbGYpOworICBlbHNlIGlmIChQVEhSRUFEX01VVEVYX1JFQ1VS
U0lWRSA9PSB0eXBlICYmIF9fcHRocmVhZF9lcXVhbCAoJm93bmVyLCAmc2Vs
ZikpCiAgICAgcmVzdWx0ID0gTG9ja1JlY3Vyc2l2ZSAoKTsKICAgZWxzZQog
ICAgIHJlc3VsdCA9IEVCVVNZOwpAQCAtMTI2NCwxNyArMTI3NCwxNSBAQCBw
dGhyZWFkX211dGV4OjpUcnlMb2NrICgpCiB9CiAKIGludAotcHRocmVhZF9t
dXRleDo6VW5Mb2NrICgpCitwdGhyZWFkX211dGV4OjpfVW5Mb2NrIChwdGhy
ZWFkX3Qgc2VsZikKIHsKLSAgcHRocmVhZF90IHNlbGYgPSBwdGhyZWFkOjpz
ZWxmICgpOwotCiAgIGlmICghX19wdGhyZWFkX2VxdWFsICgmb3duZXIsICZz
ZWxmKSkKICAgICByZXR1cm4gRVBFUk07CiAKICAgaWYgKDAgPT0gLS1yZWN1
cnNpb25fY291bnRlcikKICAgICB7CiAgICAgICBvd25lciA9IE5VTEw7Ci0g
ICAgICBpZiAoTVVURVhfTE9DS19DT1VOVEVSX0lOSVRJQUwgIT0gSW50ZXJs
b2NrZWREZWNyZW1lbnQgKCZsb2NrX2NvdW50ZXIpKQorICAgICAgaWYgKElu
dGVybG9ja2VkRGVjcmVtZW50ICgobG9uZyAqKSZsb2NrX2NvdW50ZXIpKQog
CS8vIEFub3RoZXIgdGhyZWFkIGlzIHdhaXRpbmcKIAk6OlJlbGVhc2VTZW1h
cGhvcmUgKHdpbjMyX29ial9pZCwgMSwgTlVMTCk7CiAgICAgfQpAQCAtMTI4
Myw5ICsxMjkxLDkgQEAgcHRocmVhZF9tdXRleDo6VW5Mb2NrICgpCiB9CiAK
IGludAotcHRocmVhZF9tdXRleDo6RGVzdHJveSAoKQorcHRocmVhZF9tdXRl
eDo6X0Rlc3Ryb3kgKHB0aHJlYWRfdCBzZWxmKQogewotICBpZiAoY29uZHdh
aXRzIHx8IFRyeUxvY2sgKCkpCisgIGlmIChjb25kd2FpdHMgfHwgX1RyeUxv
Y2sgKHNlbGYpKQogICAgIC8vIERvIG5vdCBkZXN0cm95IGEgY29uZHdhaXRl
ZCBvciBsb2NrZWQgbXV0ZXgKICAgICByZXR1cm4gRUJVU1k7CiAgIGVsc2Ug
aWYgKHJlY3Vyc2lvbl9jb3VudGVyICE9IDEpCkBAIC0xMzAwLDIyICsxMzA4
LDYgQEAgcHRocmVhZF9tdXRleDo6RGVzdHJveSAoKQogfQogCiB2b2lkCi1w
dGhyZWFkX211dGV4OjpTZXRPd25lciAoKQotewotICByZWN1cnNpb25fY291
bnRlciA9IDE7Ci0gIG93bmVyID0gcHRocmVhZDo6c2VsZiAoKTsKLX0KLQot
aW50Ci1wdGhyZWFkX211dGV4OjpMb2NrUmVjdXJzaXZlICgpCi17Ci0gIGlm
IChVSU5UX01BWCA9PSByZWN1cnNpb25fY291bnRlcikKLSAgICByZXR1cm4g
RUFHQUlOOwotICArK3JlY3Vyc2lvbl9jb3VudGVyOwotICByZXR1cm4gMDsK
LX0KLQotdm9pZAogcHRocmVhZF9tdXRleDo6Zml4dXBfYWZ0ZXJfZm9yayAo
KQogewogICBkZWJ1Z19wcmludGYgKCJtdXRleCAleCBpbiBmaXh1cF9hZnRl
cl9mb3JrIiwgdGhpcyk7CkBAIC0xMzI0LDEwICsxMzE2LDEwIEBAIHB0aHJl
YWRfbXV0ZXg6OmZpeHVwX2FmdGVyX2ZvcmsgKCkKIAogICBpZiAoTlVMTCA9
PSBvd25lcikKICAgICAvKiBtdXRleCBoYXMgbm8gb3duZXIsIHJlc2V0IHRv
IGluaXRpYWwgKi8KLSAgICBsb2NrX2NvdW50ZXIgPSBNVVRFWF9MT0NLX0NP
VU5URVJfSU5JVElBTDsKLSAgZWxzZSBpZiAobG9ja19jb3VudGVyICE9IE1V
VEVYX0xPQ0tfQ09VTlRFUl9JTklUSUFMKQotICAgIC8qIEFsbCB3YWl0aW5n
IHRocmVhZHMgYXJlIGdvbmUgYWZ0ZXIgYSBmb3JrICovCiAgICAgbG9ja19j
b3VudGVyID0gMDsKKyAgZWxzZSBpZiAobG9ja19jb3VudGVyICE9IDApCisg
ICAgLyogQWxsIHdhaXRpbmcgdGhyZWFkcyBhcmUgZ29uZSBhZnRlciBhIGZv
cmsgKi8KKyAgICBsb2NrX2NvdW50ZXIgPSAxOwogCiAgIHdpbjMyX29ial9p
ZCA9IDo6Q3JlYXRlU2VtYXBob3JlICgmc2VjX25vbmVfbmloLCAwLCBMT05H
X01BWCwgTlVMTCk7CiAgIGlmICghd2luMzJfb2JqX2lkKQpAQCAtMjYxNSw2
ICsyNjA3LDcgQEAgX19wdGhyZWFkX211dGV4YXR0cl9zZXR0eXBlIChwdGhy
ZWFkX211dAogICAgIHsKICAgICBjYXNlIFBUSFJFQURfTVVURVhfRVJST1JD
SEVDSzoKICAgICBjYXNlIFBUSFJFQURfTVVURVhfUkVDVVJTSVZFOgorICAg
IGNhc2UgUFRIUkVBRF9NVVRFWF9OT1JNQUw6CiAgICAgICAoKmF0dHIpLT5t
dXRleHR5cGUgPSB0eXBlOwogICAgICAgYnJlYWs7CiAgICAgZGVmYXVsdDoK
ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuaCBzcmMv
d2luc3VwL2N5Z3dpbi90aHJlYWQuaAotLS0gc3JjLm9sZC93aW5zdXAvY3ln
d2luL3RocmVhZC5oCTIwMDMtMDItMjcgMDk6MTQ6MjEuMDAwMDAwMDAwICsw
MTAwCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuaAkyMDAzLTAyLTI3
IDA5OjIwOjI0LjAwMDAwMDAwMCArMDEwMApAQCAtMzksNiArMzksOCBAQCBl
eHRlcm4gIkMiCiAjZWxzZQogCiAjaW5jbHVkZSA8cHRocmVhZC5oPgorI2lu
Y2x1ZGUgPGxpbWl0cy5oPgorI2luY2x1ZGUgPGVycm5vLmg+CiAjaW5jbHVk
ZSA8c2lnbmFsLmg+CiAjaW5jbHVkZSA8cHdkLmg+CiAjaW5jbHVkZSA8Z3Jw
Lmg+CkBAIC0xNjAsOSArMTYyLDkgQEAgcHJpdmF0ZToKICNkZWZpbmUgUFRI
UkVBRF9DT05EX01BR0lDIFBUSFJFQURfTUFHSUMrNQogI2RlZmluZSBQVEhS
RUFEX0NPTkRBVFRSX01BR0lDIFBUSFJFQURfTUFHSUMrNgogI2RlZmluZSBT
RU1fTUFHSUMgUFRIUkVBRF9NQUdJQys3Ci0jZGVmaW5lIFBUSFJFQURfT05D
RV9NQUdJQyBQVEhSRUFEX01BR0lDKzg7CisjZGVmaW5lIFBUSFJFQURfT05D
RV9NQUdJQyBQVEhSRUFEX01BR0lDKzgKIAotI2RlZmluZSBNVVRFWF9MT0NL
X0NPVU5URVJfSU5JVElBTCAgICgtMSkKKyNkZWZpbmUgTVVURVhfT1dORVJf
QU5PTllNT1VTICAgICAgICAoKHB0aHJlYWRfdCkgLTEpCiAKIC8qIHZlcmlm
eWFibGVfb2JqZWN0IHNob3VsZCBub3QgYmUgZGVmaW5lZCBoZXJlIC0gaXQn
cyBhIGdlbmVyYWwgcHVycG9zZSBjbGFzcyAqLwogCkBAIC0zMDQsMTAgKzMw
NiwxMSBAQCBwdWJsaWM6CiAgIHN0YXRpYyBib29sIGlzR29vZEluaXRpYWxp
emVyIChwdGhyZWFkX211dGV4X3QgY29uc3QgKik7CiAgIHN0YXRpYyBib29s
IGlzR29vZEluaXRpYWxpemVyT3JPYmplY3QgKHB0aHJlYWRfbXV0ZXhfdCBj
b25zdCAqKTsKICAgc3RhdGljIGJvb2wgaXNHb29kSW5pdGlhbGl6ZXJPckJh
ZE9iamVjdCAocHRocmVhZF9tdXRleF90IGNvbnN0ICptdXRleCk7CisgIHN0
YXRpYyBib29sIGNhbkJlVW5sb2NrZWQgKHB0aHJlYWRfbXV0ZXhfdCBjb25z
dCAqbXV0ZXgpOwogICBzdGF0aWMgdm9pZCBpbml0TXV0ZXggKCk7CiAgIHN0
YXRpYyBpbnQgaW5pdCAocHRocmVhZF9tdXRleF90ICosIGNvbnN0IHB0aHJl
YWRfbXV0ZXhhdHRyX3QgKik7CiAKLSAgTE9ORyBsb2NrX2NvdW50ZXI7Cisg
IHVuc2lnbmVkIGxvbmcgbG9ja19jb3VudGVyOwogICBIQU5ETEUgd2luMzJf
b2JqX2lkOwogICB1bnNpZ25lZCBpbnQgcmVjdXJzaW9uX2NvdW50ZXI7CiAg
IExPTkcgY29uZHdhaXRzOwpAQCAtMzE2LDEyICszMTksNDggQEAgcHVibGlj
OgogICBpbnQgcHNoYXJlZDsKICAgY2xhc3MgcHRocmVhZF9tdXRleCAqIG5l
eHQ7CiAKLSAgaW50IExvY2sgKCk7Ci0gIGludCBUcnlMb2NrICgpOwotICBp
bnQgVW5Mb2NrICgpOwotICBpbnQgRGVzdHJveSAoKTsKLSAgdm9pZCBTZXRP
d25lciAoKTsKLSAgaW50IExvY2tSZWN1cnNpdmUgKCk7CisgIGludCBfTG9j
ayAocHRocmVhZF90IHNlbGYpOworICBpbnQgX1RyeUxvY2sgKHB0aHJlYWRf
dCBzZWxmKTsKKyAgaW50IF9VbkxvY2sgKHB0aHJlYWRfdCBzZWxmKTsKKyAg
aW50IF9EZXN0cm95IChwdGhyZWFkX3Qgc2VsZik7CisKKyAgcHRocmVhZF90
IEdldFB0aHJlYWRTZWxmICgpCisgICAgeworICAgICAgcmV0dXJuIFBUSFJF
QURfTVVURVhfTk9STUFMID09IHR5cGUgPyBNVVRFWF9PV05FUl9BTk9OWU1P
VVMgOgorICAgICAgICA6OnB0aHJlYWRfc2VsZiAoKTsKKyAgICB9CisKKyAg
aW50IExvY2sgKCkKKyAgICB7CisgICAgICByZXR1cm4gX0xvY2sgKEdldFB0
aHJlYWRTZWxmICgpKTsKKyAgICB9CisgIGludCBUcnlMb2NrICgpCisgICAg
eworICAgICAgcmV0dXJuIF9UcnlMb2NrIChHZXRQdGhyZWFkU2VsZiAoKSk7
CisgICAgfQorICBpbnQgVW5Mb2NrICgpCisgICAgeworICAgICAgcmV0dXJu
IF9VbkxvY2sgKEdldFB0aHJlYWRTZWxmICgpKTsKKyAgICB9CisgIGludCBE
ZXN0cm95ICgpCisgICAgeworICAgICAgcmV0dXJuIF9EZXN0cm95IChHZXRQ
dGhyZWFkU2VsZiAoKSk7CisgICAgfQorCisgIHZvaWQgU2V0T3duZXIgKHB0
aHJlYWRfdCBzZWxmKQorICAgIHsKKyAgICAgIHJlY3Vyc2lvbl9jb3VudGVy
ID0gMTsKKyAgICAgIG93bmVyID0gc2VsZjsKKyAgICB9CisKKyAgaW50IExv
Y2tSZWN1cnNpdmUgKCkKKyAgICB7CisgICAgICBpZiAoVUlOVF9NQVggPT0g
cmVjdXJzaW9uX2NvdW50ZXIpCisgICAgICAgIHJldHVybiBFQUdBSU47Cisg
ICAgICArK3JlY3Vyc2lvbl9jb3VudGVyOworICAgICAgcmV0dXJuIDA7Cisg
ICAgfQorCiAgIHZvaWQgZml4dXBfYWZ0ZXJfZm9yayAoKTsKIAogICBwdGhy
ZWFkX211dGV4IChwdGhyZWFkX211dGV4YXR0ciAqID0gTlVMTCk7Cg==

--2003125-6527-1046339704=:285--
