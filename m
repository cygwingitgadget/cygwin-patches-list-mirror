Return-Path: <cygwin-patches-return-7498-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 17084 invoked by alias); 29 Aug 2011 20:07:41 -0000
Received: (qmail 17056 invoked by uid 22791); 29 Aug 2011 20:07:36 -0000
X-SWARE-Spam-Status: No, hits=1.2 required=5.0	tests=AWL,BAYES_50,DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW,SARE_OBFU_PROFILE,TW_CG,TW_CX,TW_DB,TW_DC,TW_DW,TW_FN,TW_LG,TW_XC,TW_XD,T_FRT_PROFILE1,T_FRT_PROFILE2,T_TO_NO_BRKTS_FREEMAIL
X-Spam-Check-By: sourceware.org
Received: from mail-yw0-f43.google.com (HELO mail-yw0-f43.google.com) (209.85.213.43)    by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Mon, 29 Aug 2011 20:07:19 +0000
Received: by ywm3 with SMTP id 3so6104367ywm.2        for <cygwin-patches@cygwin.com>; Mon, 29 Aug 2011 13:07:18 -0700 (PDT)
Received: by 10.142.178.14 with SMTP id a14mr1054528wff.367.1314648438074;        Mon, 29 Aug 2011 13:07:18 -0700 (PDT)
Received: from [192.168.1.2] ([118.45.149.126])        by mx.google.com with ESMTPS id g14sm5290566wfh.22.2011.08.29.13.07.13        (version=SSLv3 cipher=OTHER);        Mon, 29 Aug 2011 13:07:15 -0700 (PDT)
Message-ID: <4E5BF23F.8060806@gmail.com>
Date: Mon, 29 Aug 2011 20:07:00 -0000
From: jojelino <jojelino@gmail.com>
User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:8.0a2) Gecko/20110828 Thunderbird/8.0a2
MIME-Version: 1.0
To: cygwin-patches@cygwin.com
Subject: Re: [PATCH] profile support
References: <CADEiHqLZAuJkDJKh4pJ4AOJ1JwUwV06RSkq3GdNihSKhiUswGw@mail.gmail.com> <20110820084946.GA30978@calimero.vinschen.de> <4E533502.4060207@gmail.com> <20110823054003.GA10003@ednor.casa.cgf.cx>
In-Reply-To: <20110823054003.GA10003@ednor.casa.cgf.cx>
Content-Type: multipart/mixed; boundary="------------030807030204090006040304"
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
X-SW-Source: 2011-q3/txt/msg00074.txt.bz2

This is a multi-part message in MIME format.
--------------030807030204090006040304
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-length: 2951

On 2011-08-23 PM 2:40, Christopher Faylor wrote:
> On Tue, Aug 23, 2011 at 02:05:06PM +0900, jojelino wrote:
>> Index: winsup/cygwin/Makefile.in
>> ===================================================================
>> RCS file: /cvs/src/src/winsup/cygwin/Makefile.in,v
>> retrieving revision 1.248
>> diff -u -p -r1.248 Makefile.in
>> --- winsup/cygwin/Makefile.in	2 May 2011 19:14:39 -0000	1.248
>> +++ winsup/cygwin/Makefile.in	22 Aug 2011 20:27:57 -0000
>> @@ -233,7 +233,7 @@ EXTRALIBS:=libautomode.a libbinmode.a li
>> INSTOBJS:=automode.o binmode.o textmode.o textreadmode.o
>> TARGET_LIBS:=$(LIB_NAME) $(CYGWIN_START) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
>>
>> -ifneq "${filter -O%,$(CFLAGS)}" ""
>> +ifneq "" ""
>>
>> -    void *rv = malloc(size);
>> +    void *rv = LocalAlloc(0x40,size);
>
> There are a few things in your patch which make no sense.  The above are
> two of them.  I am not going to look further.  The patch certainly can't
> go in as is.
>
> cgf
>
The two of them is now

  ifneq "${filter -O%,$(CFLAGS)}" ""
+ifneq '$(profile)' '1'
  endif
...
...
+endif

+#if !defined(PROFILE)
      void *rv = malloc(size);
+#else
+    void *rv = LocalAlloc(LMEM_FIXED,size);
+#endif

changelog of winsup-profile-support-3.diff
Following patch are not effective unless you 'make profile=1'
	
	* profil.h: (struct profinfo::{queue,operational}): New member.
	(struct clk): New struct.
	* gmon.h: (struct gmonparam::comm_kcount): New member.
	* gmon.c: (_gmonparam): Add NO_COPY_INIT.
	* profil.c: (prof): Ditto.
	(profile_off): Flush profiling request.
	(apc_spawnthread): New function.
	(profile_on): Initialize init_global_security prior to use it, and 
spawn the consumer by issuing APC call.
	(fake_sbrk): Use LocalAlloc instead of malloc.
	(monstartup): Claim memory for comm_kcount.
	(_mcleanup): Alter formatting of cleanup filename, decide hz which 
maximizes kcount, calculate kcount using comm_kcount. 	
	* gcrt0.c (PROFILE): Define.
	(_monstartup): Use it.
	* exceptions.cc (ctrl_c_handler): Stop the consumer thread explicitly 
to avoid deadlock.
	* external.cc (exit_process): Ditto.
	* pinfo.cc (pinfo::exit): Ditto.
	* init.cc (respawn_wow64_process): Ditto.
	 (dll_entry): call __cyg_profile_{func,tls}_{ctor,dtor} to 
{un}initialize instrument function.
	* dcrt0.cc (dll_crt0_0): call _monstartup,atexit in proper order.
	* Makefile.in (EXTRA_DEPENDENCIES_1): Define variable.
	(EXTRA_LDFLAGS_1): Ditto.
	(profile): Ditto.
	(PROFILE_OPT_OUT): Ditto.
	(CFLAGS_SAVE): Clobber CFLAGS.
	(CFLAGS): Redefine.
	(gcrt1.o): use gcrt0.c as prerequisite.
	(TEST_DLL_NAME): use EXTRA_DEPENDENCIES_?, EXTRA_LDFLAGS_?.
	* sec_helper.cc (init_global_security): Check if called twice.
	* boundbuffer.c: New file.
	* boundbuffer.h: Ditto.
	* instrument.c: Ditto.	
	* instrument.h: Ditto.
	
changelog of winsup-makefile.diff
     * Makefile.common (ALL_CFLAGS): Replace simple expansion to 
recursive expansion.

--------------030807030204090006040304
Content-Type: text/plain;
 name="winsup-profile-support-3.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="winsup-profile-support-3.diff"
Content-length: 40907

SW5kZXg6IHdpbnN1cC9jeWd3aW4vTWFrZWZpbGUuaW4KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3
aW4vTWFrZWZpbGUuaW4sdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjQ4CmRp
ZmYgLXUgLXAgLXIxLjI0OCBNYWtlZmlsZS5pbgotLS0gd2luc3VwL2N5Z3dp
bi9NYWtlZmlsZS5pbgkyIE1heSAyMDExIDE5OjE0OjM5IC0wMDAwCTEuMjQ4
CisrKyB3aW5zdXAvY3lnd2luL01ha2VmaWxlLmluCTI4IEF1ZyAyMDExIDAw
OjMzOjU1IC0wMDAwCkBAIC01OSw3ICs1OSwxMSBAQCBNVF9TQUZFOj1ATVRf
U0FGRUAKIERFRlM6PUBERUZTQAogQ0NFWFRSQTo9CiBDRkxBR1M/PUBDRkxB
R1NACi1vdmVycmlkZSBDRkxBR1MrPS1NTUQgJHskKCpGKV9DRkxBR1N9IC1X
ZXJyb3IgLWZtZXJnZS1jb25zdGFudHMgLWZ0cmFjZXIgXAoraWZlcSAnJChw
cm9maWxlKScgJzEnCitDRkxBR1NfU0FWRTo9JChDRkxBR1MpCitDRkxBR1M9
CitlbmRpZgorb3ZlcnJpZGUgQ0ZMQUdTKz0tTU1EICR7JCgqRilfQ0ZMQUdT
fSAtZm1lcmdlLWNvbnN0YW50cyAtZnRyYWNlciBcCiAgIC1tbm8tdXNlLWxp
YnN0ZGMtd3JhcHBlcnMgJChDQ0VYVFJBKQogQ1hYPUBDWFhACiBvdmVycmlk
ZSBDWFhGTEFHUz1AQ1hYRkxBR1NACkBAIC0yMzQsNiArMjM4LDcgQEAgSU5T
VE9CSlM6PWF1dG9tb2RlLm8gYmlubW9kZS5vIHRleHRtb2RlLgogVEFSR0VU
X0xJQlM6PSQoTElCX05BTUUpICQoQ1lHV0lOX1NUQVJUKSAkKEdNT05fU1RB
UlQpICQoTElCR01PTl9BKSAkKFNVQkxJQlMpICQoSU5TVE9CSlMpICQoRVhU
UkFMSUJTKQogCiBpZm5lcSAiJHtmaWx0ZXIgLU8lLCQoQ0ZMQUdTKX0iICIi
CitpZm5lcSAnJChwcm9maWxlKScgJzEnCiBjeWdoZWFwX0NGTEFHUzo9LWZv
bWl0LWZyYW1lLXBvaW50ZXIKIGN5Z3RocmVhZF9DRkxBR1M6PS1mb21pdC1m
cmFtZS1wb2ludGVyCiBjeWd0bHNfQ0ZMQUdTOj0tZm9taXQtZnJhbWUtcG9p
bnRlcgpAQCAtMjg2LDYgKzI5MSwxNyBAQCBzeXNjYWxsc19DRkxBR1M6PS1m
b21pdC1mcmFtZS1wb2ludGVyCiBzeXNjb25mX0NGTEFHUzo9LWZvbWl0LWZy
YW1lLXBvaW50ZXIKIHVpbmZvX0NGTEFHUzo9LWZvbWl0LWZyYW1lLXBvaW50
ZXIKIGVuZGlmCitlbmRpZgorRVhUUkFfREVQRU5ERU5DSUVTXzE9Z2NydDEu
byBib3VuZGJ1ZmZlci5vIGluc3RydW1lbnQubyBnbW9uLm8gbWNvdW50Lm8g
cHJvZmlsLm8KK0VYVFJBX0xERkxBR1NfMT0uLi93MzJhcGkvbGliL2xpYmtl
cm5lbDMyLmEKK2lmZXEgJyQocHJvZmlsZSknICcxJworUFJPRklMRV9PUFRf
T1VUPSQoRVhUUkFfREVQRU5ERU5DSUVTXzE6Lm89KSBwdGhyZWFkIGtlcm5l
bDMyIG1hbGxvY193cmFwcGVyIHBzZXVkby1yZWxvYyBsaWJzdGRjeHhfd3Jh
cHBlciBjeHggc3luYworb3ZlcnJpZGUgQ0ZMQUdTKz0tRFBST0ZJTEUgJHtQ
Uk9GSUxFX0NGTEFHU18ke3NoZWxsIGVjaG8gJChQUk9GSUxFX09QVF9PVVQp
fGdyZXAgLXEgIiQoKkYpIjtyZXQ9JCQ/O2VjaG8gJCRyZXQ7fX0KK1BST0ZJ
TEVfQ0ZMQUdTXzE9JChzdWJzdCAtZm9taXQtZnJhbWUtcG9pbnRlciwsJChD
RkxBR1NfU0FWRSkpIC1nIC1wZyAtZmluc3RydW1lbnQtZnVuY3Rpb25zCitQ
Uk9GSUxFX0NGTEFHU18wPSQoc3Vic3QgLWZpbnN0cnVtZW50LWZ1bmN0aW9u
cywsJChzdWJzdCAtcGcsLCQoQ0ZMQUdTX1NBVkUpKSkgLWcgLWZvbWl0LWZy
YW1lLXBvaW50ZXIgLVduby1lcnJvcj11bnVzZWQtYnV0LXNldC12YXJpYWJs
ZQorZ2NydDEubzogJChzcmNkaXIpL2djcnQwLmMKKwkkKENPTVBJTEVfQ0Mp
IC1vICQoQEQpLyQoKkYpJG8gJDwKK2VuZGlmCiAKIGZoYW5kbGVyX3Byb2Nf
Q0ZMQUdTKz0tRFVTRVJOQU1FPSJcIiQoVVNFUilcIiIgLURIT1NUTkFNRT0i
XCIkKEhPU1ROQU1FKVwiIgogZmhhbmRsZXJfcHJvY19DRkxBR1MrPS1ER0ND
X1ZFUlNJT049IlwiYCQoQ0MpIC12IDI+JjEgfCB0YWlsIC1uIDFgXCIiCkBA
IC0zOTMsMTIgKzQwOSwxMiBAQCBtYWludGFpbmVyLWNsZWFuIHJlYWxjbGVh
bjogY2xlYW4KIAogCiAjIFJ1bGUgdG8gYnVpbGQgY3lnd2luLmRsbAotJChU
RVNUX0RMTF9OQU1FKTogJChMRFNDUklQVCkgZGxsZml4ZGJnICQoRExMX09G
SUxFUykgJChETExfSU1QT1JUUykgJChMSUJTRVJWRVIpICQoTElCQykgJChM
SUJNKSAkKEFQSV9WRVIpIE1ha2VmaWxlIHdpbnZlcl9zdGFtcAorJChURVNU
X0RMTF9OQU1FKTogJChMRFNDUklQVCkgZGxsZml4ZGJnICQoRVhUUkFfREVQ
RU5ERU5DSUVTXyQocHJvZmlsZSkpICQoRExMX09GSUxFUykgJChETExfSU1Q
T1JUUykgJChMSUJTRVJWRVIpICQoTElCQykgJChMSUJNKSAkKEFQSV9WRVIp
IE1ha2VmaWxlIHdpbnZlcl9zdGFtcAogCSQoQ1hYKSAkKENYWEZMQUdTKSAt
V2wsLS1nYy1zZWN0aW9ucyAkKG5vc3RkbGliKSAtV2wsLVQkKGZpcnN0d29y
ZCAkXikgXAogCS1XbCwtLWhlYXA9MCAtV2wsLS1vdXQtaW1wbGliLGN5Z2Rs
bC5hIC1zaGFyZWQgLW8gJEAgXAotCS1lICQoRExMX0VOVFJZKSAkKERFRl9G
SUxFKSAkKERMTF9PRklMRVMpIHZlcnNpb24ubyB3aW52ZXIubyBcCisJLWUg
JChETExfRU5UUlkpICQoREVGX0ZJTEUpICQoRVhUUkFfREVQRU5ERU5DSUVT
XyQocHJvZmlsZSkpICQoRExMX09GSUxFUykgdmVyc2lvbi5vIHdpbnZlci5v
IFwKIAkkKE1BTExPQ19PQkopICQoTElCU0VSVkVSKSAkKExJQk0pICQoTElC
QykgXAotCS1sZ2NjICQoRExMX0lNUE9SVFMpIC1XbCwtTWFwLGN5Z3dpbi5t
YXAKKwktbGdjYyAkKEVYVFJBX0xERkxBR1NfJChwcm9maWxlKSkgJChETExf
SU1QT1JUUykgLVdsLC1NYXAsY3lnd2luLm1hcAogCUAkKHdvcmQgMiwkXikg
JChPQkpEVU1QKSAkKE9CSkNPUFkpICRAICR7cGF0c3Vic3QgJTAuZGxsLCUx
LmRiZywkQH0KIAlAbG4gLWYgJEAgbmV3LSQoRExMX05BTUUpCiAKSW5kZXg6
IHdpbnN1cC9jeWd3aW4vZGNydDAuY2MKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZGNydDAu
Y2MsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDA2CmRpZmYgLXUgLXAgLXIx
LjQwNiBkY3J0MC5jYwotLS0gd2luc3VwL2N5Z3dpbi9kY3J0MC5jYwkxOCBB
dWcgMjAxMSAxNTo1OToxNiAtMDAwMAkxLjQwNgorKysgd2luc3VwL2N5Z3dp
bi9kY3J0MC5jYwkyOCBBdWcgMjAxMSAwMDozMzo1NiAtMDAwMApAQCAtMzcs
NyArMzcsOSBAQCBkZXRhaWxzLiAqLwogI2luY2x1ZGUgImN5Z3hkci5oIgog
I2luY2x1ZGUgImZlbnYuaCIKICNpbmNsdWRlICJudGRsbC5oIgotCisjaWZk
ZWYgUFJPRklMRQorI2luY2x1ZGUgInByb2ZpbC5oIgorI2VuZGlmCiAjZGVm
aW5lIE1BWF9BVF9GSUxFX0xFVkVMIDEwCiAKICNkZWZpbmUgUFJFTUFJTl9M
RU4gKHNpemVvZiAodXNlcl9kYXRhLT5wcmVtYWluKSAvIHNpemVvZiAodXNl
cl9kYXRhLT5wcmVtYWluWzBdKSkKQEAgLTY0OCw3ICs2NTAsMTEgQEAgaW5p
dF93aW5kb3dzX3N5c3RlbV9kaXJlY3RvcnkgKCkKICAgd2luZG93c19zeXN0
ZW1fZGlyZWN0b3J5W3dpbmRvd3Nfc3lzdGVtX2RpcmVjdG9yeV9sZW5ndGgr
K10gPSBMJ1xcJzsKICAgd2luZG93c19zeXN0ZW1fZGlyZWN0b3J5W3dpbmRv
d3Nfc3lzdGVtX2RpcmVjdG9yeV9sZW5ndGhdID0gTCdcMCc7CiB9Ci0KKyNp
ZmRlZiBQUk9GSUxFCitleHRlcm4gIkMiIHsKKyAgdm9pZCBfbWNsZWFudXAg
KHZvaWQpOworfQorI2VuZGlmCiB2b2lkCiBkbGxfY3J0MF8wICgpCiB7CkBA
IC02OTUsNiArNzAxLDEwIEBAIGRsbF9jcnQwXzAgKCkKIAkgICAgYnJlYWs7
CiAJfQogICAgIH0KKyNpZmRlZiBQUk9GSUxFCisgIGlmICghaW5fZm9ya2Vl
KQorCWF0ZXhpdCgmX21jbGVhbnVwKTsKKyNlbmRpZgogCiAgIHVzZXJfZGF0
YS0+dGhyZWFkaW50ZXJmYWNlLT5Jbml0ICgpOwogCkluZGV4OiB3aW5zdXAv
Y3lnd2luL2V4Y2VwdGlvbnMuY2MKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpS
Q1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZXhjZXB0aW9u
cy5jYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNjAKZGlmZiAtdSAtcCAt
cjEuMzYwIGV4Y2VwdGlvbnMuY2MKLS0tIHdpbnN1cC9jeWd3aW4vZXhjZXB0
aW9ucy5jYwkzIEF1ZyAyMDExIDE2OjQwOjQ3IC0wMDAwCTEuMzYwCisrKyB3
aW5zdXAvY3lnd2luL2V4Y2VwdGlvbnMuY2MJMjggQXVnIDIwMTEgMDA6MzM6
NTYgLTAwMDAKQEAgLTMxLDcgKzMxLDkgQEAgZGV0YWlscy4gKi8KICNpbmNs
dWRlICJjaGlsZF9pbmZvLmgiCiAjaW5jbHVkZSAibnRkbGwuaCIKICNpbmNs
dWRlICJleGNlcHRpb24uaCIKLQorI2lmZGVmIFBST0ZJTEUKKyNpbmNsdWRl
ICJwcm9maWwuaCIKKyNlbmRpZgogI2RlZmluZSBDQUxMX0hBTkRMRVJfUkVU
UllfT1VURVIgMTAKICNkZWZpbmUgQ0FMTF9IQU5ETEVSX1JFVFJZX0lOTkVS
IDEwCiAKQEAgLTkzNyw2ICs5MzksOSBAQCBjdHJsX2NfaGFuZGxlciAoRFdP
UkQgdHlwZSkKICAgICAgIGlmIChteXNlbGYtPmN5Z3N0YXJ0ZWQpCS8qIFdh
cyB0aGlzIHByb2Nlc3MgY3JlYXRlZCBieSBhIGN5Z3dpbiBwcm9jZXNzPyAq
LwogCXJldHVybiBUUlVFOwkJLyogWWVzLiAgTGV0IHRoZSBwYXJlbnQgZXZl
bnR1YWxseSBoYW5kbGUgQ1RSTC1DIGlzc3Vlcy4gKi8KICAgICAgIGRlYnVn
X3ByaW50ZiAoImV4aXRpbmcgd2l0aCBzdGF0dXMgJXAiLCBTVEFUVVNfQ09O
VFJPTF9DX0VYSVQpOworI2lmZGVmIFBST0ZJTEUKKyAgICAgIHByb2ZpbGVf
dGhyZWFkX29mZigpOworI2VuZGlmCiAgICAgICBFeGl0UHJvY2VzcyAoU1RB
VFVTX0NPTlRST0xfQ19FWElUKTsKICAgICB9CiAKSW5kZXg6IHdpbnN1cC9j
eWd3aW4vZXh0ZXJuYWwuY2MKPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1Mg
ZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZXh0ZXJuYWwuY2Ms
dgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTIzCmRpZmYgLXUgLXAgLXIxLjEy
MyBleHRlcm5hbC5jYwotLS0gd2luc3VwL2N5Z3dpbi9leHRlcm5hbC5jYwkx
IEp1biAyMDExIDAxOjIwOjI3IC0wMDAwCTEuMTIzCisrKyB3aW5zdXAvY3ln
d2luL2V4dGVybmFsLmNjCTI4IEF1ZyAyMDExIDAwOjMzOjU2IC0wMDAwCkBA
IC0zMCw3ICszMCw5IEBAIGRldGFpbHMuICovCiAjaW5jbHVkZSA8c3RkbGli
Lmg+CiAjaW5jbHVkZSA8d2NoYXIuaD4KICNpbmNsdWRlIDxpcHR5cGVzLmg+
Ci0KKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVkZSAicHJvZmlsLmgiCisjZW5k
aWYKIGNoaWxkX2luZm8gKmdldF9jeWd3aW5fc3RhcnR1cF9pbmZvICgpOwog
c3RhdGljIHZvaWQgZXhpdF9wcm9jZXNzIChVSU5ULCBib29sKSBfX2F0dHJp
YnV0ZV9fKChub3JldHVybikpOwogCkBAIC0xODAsNiArMTgyLDkgQEAgc3lu
Y193aW5lbnYgKCkKIHN0YXRpYyB2b2lkCiBleGl0X3Byb2Nlc3MgKFVJTlQg
c3RhdHVzLCBib29sIHVzZVRlcm1pbmF0ZVByb2Nlc3MpCiB7CisjaWZkZWYg
UFJPRklMRQorICBwcm9maWxlX3RocmVhZF9vZmYoKTsKKyNlbmRpZgogICBw
aWRfdCBwaWQgPSBnZXRwaWQgKCk7CiAgIGV4dGVybmFsX3BpbmZvICogZXAg
PSBmaWxsb3V0X3BpbmZvIChwaWQsIDEpOwogICBEV09SRCBkd3BpZCA9IGVw
ID8gZXAtPmR3UHJvY2Vzc0lkIDogcGlkOwpJbmRleDogd2luc3VwL2N5Z3dp
bi9nY3J0MC5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL3NyYy93aW5zdXAvY3lnd2luL2djcnQwLmMsdgpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuNQpkaWZmIC11IC1wIC1yMS41IGdjcnQwLmMKLS0tIHdp
bnN1cC9jeWd3aW4vZ2NydDAuYwkxMSBTZXAgMjAwMSAyMDowMTowMCAtMDAw
MAkxLjUKKysrIHdpbnN1cC9jeWd3aW4vZ2NydDAuYwkyOCBBdWcgMjAxMSAw
MDozMzo1NiAtMDAwMApAQCAtMzMsNyArMzMsOSBAQCBfbW9uc3RhcnR1cCAo
dm9pZCkKICAgICByZXR1cm47CiAKICAgbW9uc3RhcnR1cCAoKHVfbG9uZykg
JmVwcm9sLCAodV9sb25nKSAmZXRleHQpOworI2lmbmRlZiBQUk9GSUxFCiAg
IGF0ZXhpdCAoJl9tY2xlYW51cCk7CisjZW5kaWYKIH0KIAogYXNtICgiLnRl
eHQiKTsKSW5kZXg6IHdpbnN1cC9jeWd3aW4vZ21vbi5jCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93aW5zdXAvY3ln
d2luL2dtb24uYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS43CmRpZmYgLXUg
LXAgLXIxLjcgZ21vbi5jCi0tLSB3aW5zdXAvY3lnd2luL2dtb24uYwkzMCBB
dWcgMjAxMCAwMTo1NzozNiAtMDAwMAkxLjcKKysrIHdpbnN1cC9jeWd3aW4v
Z21vbi5jCTI4IEF1ZyAyMDExIDAwOjMzOjU2IC0wMDAwCkBAIC0zNCwxMSAr
MzQsMTcgQEAKICNpZiAhZGVmaW5lZChsaW50KSAmJiBkZWZpbmVkKExJQkNf
U0NDUykKIHN0YXRpYyBjaGFyIHJjc2lkW10gPSAiJE9wZW5CU0Q6IGdtb24u
Yyx2IDEuOCAxOTk3LzA3LzIzIDIxOjExOjI3IGtzdGFpbGV5IEV4cCAkIjsK
ICNlbmRpZgotCisjaWZkZWYgUFJPRklMRQorI2luY2x1ZGUgIndpbnN1cC5o
IgorI2VuZGlmCiAjaW5jbHVkZSAid2lubGVhbi5oIgogI2luY2x1ZGUgPGZj
bnRsLmg+CiAjaW5jbHVkZSA8c3RkaW8uaD4KICNpbmNsdWRlIDx1bmlzdGQu
aD4KKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVkZSA8c3RyaW5nLmg+CisjaW5j
bHVkZSA8bWF0aC5oPgorI2VuZGlmCiAjaW5jbHVkZSA8Z21vbi5oPgogI2lu
Y2x1ZGUgPHN0ZGxpYi5oPgogCkBAIC00Nyw3ICs1MywxMSBAQCBzdGF0aWMg
Y2hhciByY3NpZFtdID0gIiRPcGVuQlNEOiBnbW9uLmMsCiAvKiBYWFggbmVl
ZGVkPyAqLwogLy9leHRlcm4gY2hhciAqbWluYnJrIF9fYXNtICgibWluYnJr
Iik7CiAKLXN0cnVjdCBnbW9ucGFyYW0gX2dtb25wYXJhbSA9IHsgR01PTl9Q
Uk9GX09GRiB9Oworc3RydWN0IGdtb25wYXJhbQorI2lmZGVmIFBST0ZJTEUK
K05PX0NPUFlfSU5JVAorI2VuZGlmCitfZ21vbnBhcmFtID0geyBHTU9OX1BS
T0ZfT0ZGIH07CiAKIHN0YXRpYyBpbnQJc19zY2FsZTsKIC8qIHNlZSBwcm9m
aWwoMikgd2hlcmUgdGhpcyBpcyBkZXNjcmliZSAoaW5jb3JyZWN0bHkpICov
CkBAIC02MCw3ICs3MCwxMSBAQCB2b2lkCW1vbmNvbnRyb2wgX19QKChpbnQp
KTsKIHN0YXRpYyB2b2lkICoKIGZha2Vfc2JyayhpbnQgc2l6ZSkKIHsKKyNp
ZiAhZGVmaW5lZChQUk9GSUxFKQogICAgIHZvaWQgKnJ2ID0gbWFsbG9jKHNp
emUpOworI2Vsc2UKKyAgICB2b2lkICpydiA9IExvY2FsQWxsb2MoTE1FTV9G
SVhFRCxzaXplKTsKKyNlbmRpZgogICAgIGlmIChydikKICAgICAgIHJldHVy
biBydjsKICAgICBlbHNlCkBAIC05Miw4ICsxMDYsMTEgQEAgbW9uc3RhcnR1
cChsb3dwYywgaGlnaHBjKQogCWVsc2UgaWYgKHAtPnRvbGltaXQgPiBNQVhB
UkNTKQogCQlwLT50b2xpbWl0ID0gTUFYQVJDUzsKIAlwLT50b3NzaXplID0g
cC0+dG9saW1pdCAqIHNpemVvZihzdHJ1Y3QgdG9zdHJ1Y3QpOwotCisjaWZk
ZWYgUFJPRklMRQorCWNwID0gZmFrZV9zYnJrKDUgKiBwLT5rY291bnRzaXpl
ICsgcC0+ZnJvbXNzaXplICsgcC0+dG9zc2l6ZSk7CisjZWxzZQogCWNwID0g
ZmFrZV9zYnJrKHAtPmtjb3VudHNpemUgKyBwLT5mcm9tc3NpemUgKyBwLT50
b3NzaXplKTsKKyNlbmRpZgogCWlmIChjcCA9PSAoY2hhciAqKS0xKSB7CiAJ
CUVSUigibW9uc3RhcnR1cDogb3V0IG9mIG1lbW9yeVxuIik7CiAJCXJldHVy
bjsKQEAgLTEwNSw2ICsxMjIsMTEgQEAgbW9uc3RhcnR1cChsb3dwYywgaGln
aHBjKQogCWNwICs9IHAtPnRvc3NpemU7CiAJcC0+a2NvdW50ID0gKHVfc2hv
cnQgKiljcDsKIAljcCArPSBwLT5rY291bnRzaXplOworI2lmZGVmIFBST0ZJ
TEUKKwlwLT5jb21tX2tjb3VudD0odV9pbnQ2NF90KiljcDsKKwljcCArPSA0
KnAtPmtjb3VudHNpemU7CisJbWVtc2V0KHAtPmNvbW1fa2NvdW50LDAsNCpw
LT5rY291bnRzaXplKTsKKyNlbmRpZgogCXAtPmZyb21zID0gKHVfc2hvcnQg
KiljcDsKIAogCS8qIFhYWCBtaW5icmsgbmVlZGVkPyAqLwpAQCAtMTM2LDYg
KzE1OCw5IEBAIG1vbnN0YXJ0dXAobG93cGMsIGhpZ2hwYykKIHZvaWQKIF9t
Y2xlYW51cCgpCiB7CisjaWZkZWYgUFJPRklMRQorCXVuc2lnbmVkIGk7Cisj
ZW5kaWYKIAlpbnQgZmQ7CiAJaW50IGh6OwogCWludCBmcm9taW5kZXg7CkBA
IC0yMDQsOCArMjI5LDE2IEBAIF9tY2xlYW51cCgpCiAJfQogI2Vsc2UKIAl7
CisjaWZkZWYgUFJPRklMRQorCSAgY2hhciBnbW9uX291dFsxMDI0XTsKKwkg
IGNoYXIgcHJvY19tb2R1bGVuYW1lWzEwMjRdOworCSAgR2V0TW9kdWxlRmls
ZU5hbWVBKDAsIHByb2NfbW9kdWxlbmFtZSwgMTAyNCk7CisJICBzcHJpbnRm
KGdtb25fb3V0LCAiZ21vbi4lcy4lZC5vdXQiLCBzdHJyY2hyKHByb2NfbW9k
dWxlbmFtZSwgJ1xcJykgKyAxLCAoaW50KSBHZXRDdXJyZW50UHJvY2Vzc0lk
KCkpOworCSAgcHJvZmZpbGUgPSBnbW9uX291dDsKKyNlbHNlCiAJICBjaGFy
IGdtb25fb3V0W10gPSAiZ21vbi5vdXQiOwogCSAgcHJvZmZpbGUgPSBnbW9u
X291dDsKKyNlbmRpZgogCX0KICNlbmRpZgogCkBAIC0yMjQsNiArMjU3LDUw
IEBAIF9tY2xlYW51cCgpCiAJICAgIHAtPmtjb3VudCwgcC0+a2NvdW50c2l6
ZSk7CiAJd3JpdGUobG9nLCBkYnVmLCBsZW4pOwogI2VuZGlmCisjaWZkZWYg
UFJPRklMRQorICB1X2ludDY0X3QgbWF4Y291bnQgPSAwOworICBmb3IgKGkg
PSAwOyBpIDwgcC0+a2NvdW50c2l6ZSAvIDI7IGkrKykKKwl7CisJICBpZiAo
cC0+Y29tbV9rY291bnRbaV0gPiBtYXhjb3VudCkKKwkJeworCQkgIG1heGNv
dW50ID0gcC0+Y29tbV9rY291bnRbaV07CisJCX0KKwl9CisgIHVfaW50NjRf
dCBwZXJmZnJlcTsKKyAgUXVlcnlQZXJmb3JtYW5jZUZyZXF1ZW5jeSgoUExB
UkdFX0lOVEVHRVIpICZwZXJmZnJlcSk7CisKKyAgZG91YmxlIGxvZ3BlcmZm
cmVxID0gbG9nMTAocGVyZmZyZXEpLCBsb2dtYXhjb3VudCA9IGxvZzEwKG1h
eGNvdW50KTsKKyAgZG91YmxlIGZsb29ybG9ncGVyZmZyZXEgPSBmbG9vcihs
b2dwZXJmZnJlcSk7CisgIGRvdWJsZSBjb2VmZl90b19tYXhpbWl6ZV9rY291
bnQgPSBsb2dtYXhjb3VudCAtIGxvZ3BlcmZmcmVxICsgZmxvb3Jsb2dwZXJm
ZnJlcTsKKyAgLyoKKyAgICogVG8gbWF4aW1pemUga2NvdW50LCB3ZSBjb3Zl
ciB0aGUgY2FzZSB3aGVyZSB1cHBlciBib3VuZCBpcyA5OTk5LgorICAgKi8K
KyAgaWYgKGNvZWZmX3RvX21heGltaXplX2tjb3VudCA+IDMpeworCWNvZWZm
X3RvX21heGltaXplX2tjb3VudCAtPSAzOworCS8qCisJICogYW5kIGNvdmVy
IHRoZSBjYXNlIHVwIHRvIDY1NTM1LgorCSAqLworICBpZiAoKGxvZ3BlcmZm
cmVxIC0gZmxvb3Jsb2dwZXJmZnJlcSkgPCBsb2cxMCg2LjU1KSkKKwljb2Vm
Zl90b19tYXhpbWl6ZV9rY291bnQtLTsKKyAgfQorICBlbHNleworCSAgY29l
ZmZfdG9fbWF4aW1pemVfa2NvdW50PTA7CisgIH0KKyAgaHogPSAoaW50KSBw
b3coMTAsIGZsb29yKGZsb29ybG9ncGVyZmZyZXEgLSBjb2VmZl90b19tYXhp
bWl6ZV9rY291bnQpKTsKKyAgcGVyZmZyZXEgLz0gaHo7CisjaWYgMAorICBw
cmludGYoIiVkICVkIG1heGNvdW50ICVsbGQgbG9nbWF4Y250ICVmIG1heHBy
ZXEgJWYgaHogJWQgcGVyZmZyZXEgJWRcbiIsIEdldEN1cnJlbnRQcm9jZXNz
SWQoKSwgR2V0Q3VycmVudFRocmVhZElkKCksIG1heGNvdW50LCBsb2dtYXhj
b3VudCwgY29lZmZfdG9fbWF4aW1pemVfa2NvdW50LCBoeiwgcGVyZmZyZXEp
OworI2VuZGlmCisgIGZvciAoaSA9IDA7IGkgPCBwLT5rY291bnRzaXplIC8g
MjsgaSsrKQorCXsKKwkgIGlmIChwLT5jb21tX2tjb3VudFtpXSA8IHBlcmZm
cmVxKQorCQljb250aW51ZTsKKwkgIGVsc2UKKwkJeworCQkgIHAtPmtjb3Vu
dFtpXSA9IHAtPmNvbW1fa2NvdW50W2ldIC8gcGVyZmZyZXE7CisJCX0KKwl9
CisjZW5kaWYKIAloZHIgPSAoc3RydWN0IGdtb25oZHIgKikmZ21vbmhkcjsK
IAloZHItPmxwYyA9IHAtPmxvd3BjOwogCWhkci0+aHBjID0gcC0+aGlnaHBj
OwpJbmRleDogd2luc3VwL2N5Z3dpbi9nbW9uLmgKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4v
Z21vbi5oLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjIKZGlmZiAtdSAtcCAt
cjEuMiBnbW9uLmgKLS0tIHdpbnN1cC9jeWd3aW4vZ21vbi5oCTI0IEp1biAy
MDAxIDIyOjI2OjUxIC0wMDAwCTEuMgorKysgd2luc3VwL2N5Z3dpbi9nbW9u
LmgJMjggQXVnIDIwMTEgMDA6MzM6NTYgLTAwMDAKQEAgLTEzNCw2ICsxMzQs
OSBAQCBzdHJ1Y3QgcmF3YXJjIHsKIHN0cnVjdCBnbW9ucGFyYW0gewogCWlu
dAkJc3RhdGU7CiAJdV9zaG9ydAkJKmtjb3VudDsKKyNpZmRlZiBQUk9GSUxF
CisJdV9pbnQ2NF90ICpjb21tX2tjb3VudDsKKyNlbmRpZgogCXVfbG9uZwkJ
a2NvdW50c2l6ZTsKIAl1X3Nob3J0CQkqZnJvbXM7CiAJdV9sb25nCQlmcm9t
c3NpemU7CkluZGV4OiB3aW5zdXAvY3lnd2luL2luaXQuY2MKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9j
eWd3aW4vaW5pdC5jYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS44NApkaWZm
IC11IC1wIC1yMS44NCBpbml0LmNjCi0tLSB3aW5zdXAvY3lnd2luL2luaXQu
Y2MJMTggQXVnIDIwMTEgMTU6NTk6MTYgLTAwMDAJMS44NAorKysgd2luc3Vw
L2N5Z3dpbi9pbml0LmNjCTI4IEF1ZyAyMDExIDAwOjMzOjU2IC0wMDAwCkBA
IC0xMyw2ICsxMywxMCBAQCBkZXRhaWxzLiAqLwogI2luY2x1ZGUgImN5Z3Rs
cy5oIgogI2luY2x1ZGUgIm50ZGxsLmgiCiAjaW5jbHVkZSAic2hhcmVkX2lu
Zm8uaCIKKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVkZSAicHJvZmlsLmgiCisj
aW5jbHVkZSAiaW5zdHJ1bWVudC5oIgorI2VuZGlmCiAKIHN0YXRpYyBEV09S
RCBfbXlfb2xkZnVuYzsKIApAQCAtMTA2LDYgKzExMCw5IEBAIHJlc3Bhd25f
d293NjRfcHJvY2VzcyAoKQogCWFwaV9mYXRhbCAoIldhaXRpbmcgZm9yIHBy
b2Nlc3MgJWQgZmFpbGVkLCAlRSIsIHBpLmR3UHJvY2Vzc0lkKTsKICAgICAg
IEdldEV4aXRDb2RlUHJvY2VzcyAocGkuaFByb2Nlc3MsICZyZXQpOwogICAg
ICAgQ2xvc2VIYW5kbGUgKHBpLmhQcm9jZXNzKTsKKyNpZmRlZiBQUk9GSUxF
CisgICAgICBwcm9maWxlX3RocmVhZF9vZmYoKTsKKyNlbmRpZgogICAgICAg
RXhpdFByb2Nlc3MgKHJldCk7CiAgICAgfQogfQpAQCAtMTIwLDYgKzEyNywx
MCBAQCBkbGxfZW50cnkgKEhBTkRMRSBoLCBEV09SRCByZWFzb24sIHZvaWQg
CiAgIHN3aXRjaCAocmVhc29uKQogICAgIHsKICAgICBjYXNlIERMTF9QUk9D
RVNTX0FUVEFDSDoKKyNpZmRlZiBQUk9GSUxFCisgICAgICBfX2N5Z19wcm9m
aWxlX2Z1bmNfY3RvcigpOworICAgICAgX19jeWdfcHJvZmlsZV90bHNfY3Rv
cigpOworI2VuZGlmCiAgICAgICB3aW5jYXAuaW5pdCAoKTsKICAgICAgIGlu
aXRfY29uc29sZV9oYW5kbGVyIChmYWxzZSk7CiAKQEAgLTE0Myw4ICsxNTQs
MTUgQEAgZGxsX2VudHJ5IChIQU5ETEUgaCwgRFdPUkQgcmVhc29uLCB2b2lk
IAogICAgIGNhc2UgRExMX1BST0NFU1NfREVUQUNIOgogICAgICAgaWYgKGR5
bmFtaWNhbGx5X2xvYWRlZCkKIAlzaGFyZWRfZGVzdHJveSAoKTsKKyNpZmRl
ZiBQUk9GSUxFCisgICAgICBfX2N5Z19wcm9maWxlX3Rsc19kdG9yKCk7Cisg
ICAgICBfX2N5Z19wcm9maWxlX2Z1bmNfZHRvcigpOworI2VuZGlmCiAgICAg
ICBicmVhazsKICAgICBjYXNlIERMTF9USFJFQURfQVRUQUNIOgorI2lmZGVm
IFBST0ZJTEUKKyAgICAgIF9fY3lnX3Byb2ZpbGVfdGxzX2N0b3IoKTsKKyNl
bmRpZgogICAgICAgaWYgKGRsbF9maW5pc2hlZF9sb2FkaW5nKQogCW11bmdl
X3RocmVhZGZ1bmMgKCk7CiAgICAgICBicmVhazsKQEAgLTE1Myw2ICsxNzEs
OSBAQCBkbGxfZW50cnkgKEhBTkRMRSBoLCBEV09SRCByZWFzb24sIHZvaWQg
CiAJICAmJiAoUFZPSUQpICZfbXlfdGxzID4gKFBWT0lEKSAmd293NjRfdGVz
dF9zdGFja19tYXJrZXIKIAkgICYmIF9teV90bHMuaXNpbml0aWFsaXplZCAo
KSkKIAlfbXlfdGxzLnJlbW92ZSAoMCk7CisjaWZkZWYgUFJPRklMRQorCV9f
Y3lnX3Byb2ZpbGVfdGxzX2R0b3IoKTsKKyNlbmRpZgogICAgICAgLyogV2lu
ZG93cyAyMDAwIGhhcyBhIGJ1ZyBpbiBOdFRlcm1pbmF0ZVRocmVhZC4gIElu
c3RlYWQgb2YgcmVsZWFzaW5nCiAJIHRoZSBzdGFjayBhdCB0ZWItPkRlYWxs
b2NhdGlvblN0YWNrIGl0IHVzZXMgdGhlIHZhbHVlIG9mCiAJIHRlYi0+VGli
LlN0YWNrTGltaXQgdG8gZXZhbHVhdGUgdGhlIHN0YWNrIGFkZHJlc3MuICBT
byB3ZSBqdXN0IGNsYWltCkluZGV4OiB3aW5zdXAvY3lnd2luL3BpbmZvLmNj
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Ny
Yy93aW5zdXAvY3lnd2luL3BpbmZvLmNjLHYKcmV0cmlldmluZyByZXZpc2lv
biAxLjI3OQpkaWZmIC11IC1wIC1yMS4yNzkgcGluZm8uY2MKLS0tIHdpbnN1
cC9jeWd3aW4vcGluZm8uY2MJMTMgQXVnIDIwMTEgMTA6Mjg6MTUgLTAwMDAJ
MS4yNzkKKysrIHdpbnN1cC9jeWd3aW4vcGluZm8uY2MJMjggQXVnIDIwMTEg
MDA6MzM6NTcgLTAwMDAKQEAgLTI5LDcgKzI5LDkgQEAgZGV0YWlscy4gKi8K
ICNpbmNsdWRlICJjeWd0bHMuaCIKICNpbmNsdWRlICJ0bHNfcGJ1Zi5oIgog
I2luY2x1ZGUgImNoaWxkX2luZm8uaCIKLQorI2lmZGVmIFBST0ZJTEUKKyNp
bmNsdWRlICJwcm9maWwuaCIKKyNlbmRpZgogY2xhc3MgcGluZm9fYmFzaWM6
IHB1YmxpYyBfcGluZm8KIHsKIHB1YmxpYzoKQEAgLTIwNCw2ICsyMDYsOSBA
QCBwaW5mbzo6ZXhpdCAoRFdPUkQgbikKICAgaWYgKCFzZWxmLT5jeWdzdGFy
dGVkKQogICAgIGV4aXRjb2RlID0gKChleGl0Y29kZSAmIDB4ZmYpIDw8IDgp
IHwgKChleGl0Y29kZSA+PiA4KSAmIDB4ZmYpOwogICBzaWdwcm9jX3ByaW50
ZiAoIkNhbGxpbmcgRXhpdFByb2Nlc3MgbiAlcCwgZXhpdGNvZGUgJXAiLCBu
LCBleGl0Y29kZSk7CisjaWZkZWYgUFJPRklMRQorICBwcm9maWxlX3RocmVh
ZF9vZmYoKTsKKyNlbmRpZgogICBFeGl0UHJvY2VzcyAoZXhpdGNvZGUpOwog
fQogIyB1bmRlZiBzZWxmCkluZGV4OiB3aW5zdXAvY3lnd2luL3Byb2ZpbC5j
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Ny
Yy93aW5zdXAvY3lnd2luL3Byb2ZpbC5jLHYKcmV0cmlldmluZyByZXZpc2lv
biAxLjgKZGlmZiAtdSAtcCAtcjEuOCBwcm9maWwuYwotLS0gd2luc3VwL2N5
Z3dpbi9wcm9maWwuYwkzMCBBdWcgMjAxMCAwMTo1NzozNiAtMDAwMAkxLjgK
KysrIHdpbnN1cC9jeWd3aW4vcHJvZmlsLmMJMjggQXVnIDIwMTEgMDA6MzM6
NTcgLTAwMDAKQEAgLTcsMTggKzcsMjcgQEAKICAgIFRoaXMgc29mdHdhcmUg
aXMgYSBjb3B5cmlnaHRlZCB3b3JrIGxpY2Vuc2VkIHVuZGVyIHRoZSB0ZXJt
cyBvZiB0aGUKICAgIEN5Z3dpbiBsaWNlbnNlLiAgUGxlYXNlIGNvbnN1bHQg
dGhlIGZpbGUgIkNZR1dJTl9MSUNFTlNFIiBmb3IKICAgIGRldGFpbHMuICov
Ci0KKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVkZSAid2luc3VwLmgiCisjZW5k
aWYKICNpbmNsdWRlICJ3aW5sZWFuLmgiCiAjaW5jbHVkZSA8c3lzL3R5cGVz
Lmg+CiAjaW5jbHVkZSA8ZXJybm8uaD4KLQorI2lmZGVmIFBST0ZJTEUKKyNp
bmNsdWRlICJnbW9uLmgiCisjZW5kaWYKICNpbmNsdWRlIDxwcm9maWwuaD4K
IAogI2RlZmluZSBTTEVFUFRJTUUgKDEwMDAgLyBQUk9GX0haKQotCisjaWZk
ZWYgUFJPRklMRQorZXh0ZXJuIFNFQ1VSSVRZX0FUVFJJQlVURVMgc2VjX25v
bmVfbmloOworI2VuZGlmCiAvKiBnbG9iYWwgcHJvZmluZm8gZm9yIHByb2Zp
bCgpIGNhbGwgKi8KKyNpZmRlZiBQUk9GSUxFCitzdHJ1Y3QgcHJvZmluZm8g
Tk9fQ09QWSBwcm9mOworI2Vsc2UKIHN0YXRpYyBzdHJ1Y3QgcHJvZmluZm8g
cHJvZjsKLQorI2VuZGlmCiAvKiBHZXQgdGhlIHBjIGZvciB0aHJlYWQgVEhS
ICovCiAKIHN0YXRpYyB1X2xvbmcKQEAgLTg1LDE5ICs5NCw1MiBAQCBwcm9m
aWxlX29mZiAoc3RydWN0IHByb2ZpbmZvICpwKQogewogICBpZiAocC0+cHJv
ZnRocikKICAgICB7CisjaWZkZWYgUFJPRklMRQorICAgICAgaWYgKHByb2Yu
cXVldWUud29ya2VyX2VuYWJsZWQpCisJCXsKKwkJICBwcm9maWxlX3RocmVh
ZF9vZmYoKTsKKwkJICBib3VuZGJ1ZmZlcl9kdG9yKCZwLT5xdWV1ZSk7CisJ
CSAgd2hpbGUgKGJvdW5kYnVmZmVyX2VtcHR5KCZwLT5xdWV1ZSkpCisJCQl7
CisJCQkgIG1lc3NhZ2UgbXNnOworCQkJICBib3VuZGJ1ZmZlcl9kZXF1ZXVl
X25vbG9jaygmcC0+cXVldWUsICZtc2cpOworCQkJICB1bnNpZ25lZCBpZHgg
PSBQUk9GSURYICgodW5zaWduZWQpbXNnLnB2LCBwLT5sb3dwYywgcC0+c2Nh
bGUpOworCQkJICBpZiAoIW1zZy51bGx2YWwpCisJCQkgIGNvbnRpbnVlOwor
CQkJICBfZ21vbnBhcmFtLmNvbW1fa2NvdW50W2lkeF0gKz0gbXNnLnVsbHZh
bDsKKwkJCX0KKwkJfQorCSAgQ2xvc2VIYW5kbGUocC0+cHJvZnRocik7CisJ
ICBDbG9zZUhhbmRsZShwcm9mLm9wZXJhdGlvbmFsKTsKKwkgIHAtPnByb2Z0
aHIgPSAwOworI2Vsc2UKICAgICAgIFRlcm1pbmF0ZVRocmVhZCAocC0+cHJv
ZnRociwgMCk7CiAgICAgICBDbG9zZUhhbmRsZSAocC0+cHJvZnRocik7Cisj
ZW5kaWYKICAgICB9CisjaWYgIWRlZmluZWQoUFJPRklMRSkKICAgaWYgKHAt
PnRhcmd0aHIpCiAgICAgQ2xvc2VIYW5kbGUgKHAtPnRhcmd0aHIpOworI2Vu
ZGlmCiAgIHJldHVybiAwOwogfQotCisjaWZkZWYgUFJPRklMRQorc3RhdGlj
IHZvaWQgX19zdGRjYWxsCithcGNfc3Bhd250aHJlYWQodW5zaWduZWQgbG9u
ZyBhcmcpCit7CisgIHN0cnVjdCBwcm9maW5mbyogcCA9IChzdHJ1Y3QgcHJv
ZmluZm8qKSBhcmc7CisgIHAtPnByb2Z0aHIgPSBDcmVhdGVUaHJlYWQoJnNl
Y19ub25lX25paCwgMCwgd29ya2VyX2NvbnN1bWVyLCAodm9pZCAqKSBwLCAw
LAorCSAgMCk7Cit9CisjZW5kaWYKIC8qIENyZWF0ZSBhIHRpbWVyIHRocmVh
ZCBhbmQgcGFzcyBpdCBhIHBvaW50ZXIgUCB0byB0aGUgcHJvZmlsaW5nIGJ1
ZmZlci4gKi8KIAogc3RhdGljIGludAogcHJvZmlsZV9vbiAoc3RydWN0IHBy
b2ZpbmZvICpwKQogeworI2lmICFkZWZpbmVkKFBST0ZJTEUpCisgIGV4dGVy
biB2b2lkIGluaXRfZ2xvYmFsX3NlY3VyaXR5KCkgYXNtKCJfWjIwaW5pdF9n
bG9iYWxfc2VjdXJpdHl2Iik7CisgIGluaXRfZ2xvYmFsX3NlY3VyaXR5KCk7
CiAgIERXT1JEIHRocmlkOwogCiAgIC8qIGdldCBoYW5kbGUgZm9yIHRoaXMg
dGhyZWFkICovCkBAIC0xMTcsNiArMTU5LDExIEBAIHByb2ZpbGVfb24gKHN0
cnVjdCBwcm9maW5mbyAqcCkKICAgICAgIGVycm5vID0gRUFHQUlOOwogICAg
ICAgcmV0dXJuIC0xOwogICAgIH0KKyNlbHNlCisgIGJvdW5kYnVmZmVyX2lu
aXRpYWwoJnByb2YucXVldWUpOworICBwcm9mLm9wZXJhdGlvbmFsID0gQ3Jl
YXRlU2VtYXBob3JlQSgmc2VjX25vbmVfbmloLCAwLCAxLCAwKTsKKyAgUXVl
dWVVc2VyQVBDKGFwY19zcGF3bnRocmVhZCwgR2V0Q3VycmVudFRocmVhZCgp
LCAoVUxPTkdfUFRSKSBwKTsKKyNlbmRpZgogICByZXR1cm4gMDsKIH0KIApJ
bmRleDogd2luc3VwL2N5Z3dpbi9wcm9maWwuaAo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9w
cm9maWwuaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40CmRpZmYgLXUgLXAg
LXIxLjQgcHJvZmlsLmgKLS0tIHdpbnN1cC9jeWd3aW4vcHJvZmlsLmgJMjgg
QXByIDIwMDMgMjA6MTA6NTMgLTAwMDAJMS40CisrKyB3aW5zdXAvY3lnd2lu
L3Byb2ZpbC5oCTI4IEF1ZyAyMDExIDAwOjMzOjU3IC0wMDAwCkBAIC03LDEw
ICs3LDE2IEBAIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEN5Z3dpbi4KIFRoaXMg
c29mdHdhcmUgaXMgYSBjb3B5cmlnaHRlZCB3b3JrIGxpY2Vuc2VkIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUKIEN5Z3dpbiBsaWNlbnNlLiAgUGxlYXNlIGNv
bnN1bHQgdGhlIGZpbGUgIkNZR1dJTl9MSUNFTlNFIiBmb3IKIGRldGFpbHMu
ICovCi0KKyNpZm5kZWYgUFJPRklMX0gKKyNkZWZpbmUgUFJPRklMX0gKKyNp
ZmRlZiBfX2NwbHVzcGx1cworZXh0ZXJuICJDInsKKyNlbmRpZgogLyogcHJv
ZmlsaW5nIGZyZXF1ZW5jeS4gIChObyBsYXJnZXIgdGhhbiAxMDAwKSAqLwog
I2RlZmluZSBQUk9GX0haCQkJMTAwCi0KKyNpZiBkZWZpbmVkKFBST0ZJTEUp
CisjaW5jbHVkZSAiYm91bmRidWZmZXIuaCIKKyNlbmRpZgogLyogY29udmVy
dCBhbiBhZGRyIHRvIGFuIGluZGV4ICovCiAjZGVmaW5lIFBST0ZJRFgocGMs
IGJhc2UsIHNjYWxlKQlcCiAgICh7CQkJCQkJCQkJXApAQCAtMzcsOCArNDMs
MTcgQEAgc3RydWN0IHByb2ZpbmZvIHsKICAgICB1X3Nob3J0ICpjb3VudGVy
OwkJCS8qIHByb2ZpbGluZyBjb3VudGVycyAqLwogICAgIHVfbG9uZyBsb3dw
YywgaGlnaHBjOwkJLyogcmFuZ2UgdG8gYmUgcHJvZmlsZWQgKi8KICAgICB1
X2ludCBzY2FsZTsJCQkvKiBzY2FsZSB2YWx1ZSBvZiBiaW5zICovCisjaWZk
ZWYgUFJPRklMRQorICAgIHN0cnVjdCBib3VuZGJ1ZmZlciBxdWV1ZTsKKyAg
ICBfV0lOSEFORExFIG9wZXJhdGlvbmFsOworI2VuZGlmCiB9OwotCisjaWZk
ZWYgUFJPRklMRQorZXh0ZXJuIHN0cnVjdCBwcm9maW5mbyBwcm9mOworI2Vu
ZGlmCiBpbnQgcHJvZmlsZV9jdGwoc3RydWN0IHByb2ZpbmZvICosIGNoYXIg
Kiwgc2l6ZV90LCB1X2xvbmcsIHVfaW50KTsKIGludCBwcm9maWwoY2hhciAq
LCBzaXplX3QsIHVfbG9uZywgdV9pbnQpOwotCisjaWZkZWYgX19jcGx1c3Bs
dXMKK30KKyNlbmRpZgorI2VuZGlmCkluZGV4OiB3aW5zdXAvY3lnd2luL3Nl
Y19oZWxwZXIuY2MKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTog
L2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vc2VjX2hlbHBlci5jYyx2CnJl
dHJpZXZpbmcgcmV2aXNpb24gMS45MwpkaWZmIC11IC1wIC1yMS45MyBzZWNf
aGVscGVyLmNjCi0tLSB3aW5zdXAvY3lnd2luL3NlY19oZWxwZXIuY2MJMjkg
QXByIDIwMTEgMTA6Mzg6MTIgLTAwMDAJMS45MworKysgd2luc3VwL2N5Z3dp
bi9zZWNfaGVscGVyLmNjCTI4IEF1ZyAyMDExIDAwOjMzOjU3IC0wMDAwCkBA
IC00NzYsNiArNDc2LDExIEBAIGdldF9udWxsX3NkICgpCiB2b2lkCiBpbml0
X2dsb2JhbF9zZWN1cml0eSAoKQogeworI2lmZGVmIFBST0ZJTEUKKyAgc3Rh
dGljIGludCBjYWxsZWQ7CisgIGlmIChjYWxsZWQrKykKKwlyZXR1cm47Cisj
ZW5kaWYKICAgc2VjX25vbmUubkxlbmd0aCA9IHNlY19ub25lX25paC5uTGVu
Z3RoID0KICAgc2VjX2FsbC5uTGVuZ3RoID0gc2VjX2FsbF9uaWgubkxlbmd0
aCA9IHNpemVvZiAoU0VDVVJJVFlfQVRUUklCVVRFUyk7CiAgIHNlY19ub25l
LmJJbmhlcml0SGFuZGxlID0gc2VjX2FsbC5iSW5oZXJpdEhhbmRsZSA9IFRS
VUU7Ci0tLSAvZGV2L251bGwJMjAxMS0wOC0yOCAyMzoyOTozMS4wMDAwMDAw
MDAgKzA5MDAKKysrIHdpbnN1cC9jeWd3aW4vYm91bmRidWZmZXIuaAkyMDEx
LTA4LTI1IDAxOjMzOjIxLjk0MzI1NTAwMCArMDkwMApAQCAtMCwwICsxLDY2
IEBACisvKiBib3VuZGJ1ZmZlci5oCisKKyBUSElTIFNPRlRXQVJFIElTIE5P
VCBDT1BZUklHSFRFRAorCisgVGhpcyBzb3VyY2UgY29kZSBpcyBvZmZlcmVk
IGZvciB1c2UgaW4gdGhlIHB1YmxpYyBkb21haW4uIFlvdSBtYXkKKyB1c2Us
IG1vZGlmeSBvciBkaXN0cmlidXRlIGl0IGZyZWVseS4KKworIFRoaXMgY29k
ZSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUg
dXNlZnVsIGJ1dAorIFdJVEhPVVQgQU5ZIFdBUlJBTlRZLiBBTEwgV0FSUkVO
VElFUywgRVhQUkVTUyBPUiBJTVBMSUVEIEFSRSBIRVJFQlkKKyBESVNDTEFN
RUQuIFRoaXMgaW5jbHVkZXMgYnV0IGlzIG5vdCBsaW1pdGVkIHRvIHdhcnJl
bnRpZXMgb2YKKyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQ
QVJUSUNVTEFSIFBVUlBPU0UuCisgKi8KKyNpZm5kZWYgQk9VTkRCVUZGRVJf
SF8KKyNkZWZpbmUgQk9VTkRCVUZGRVJfSF8KKyNpbmNsdWRlIDxzdGRpby5o
PgorI2lmZGVmIF9fY3BsdXNwbHVzCitleHRlcm4gIkMiCit7CisjZW5kaWYK
KyAgZXh0ZXJuIHZvaWQKKyAgcHJvZmlsZV90aHJlYWRfb2ZmKCk7CisgIHN0
cnVjdCBtZXNzYWdlCisgIHsKKyNpZiAwCisJdW5zaWduZWQgbG9uZyBsb25n
IGxkYXRhOworCXVuc2lnbmVkIGxvbmcgaWRhdGFbMl07CisjZW5kaWYKKwl2
b2lkKiBwdjsKKwl1bnNpZ25lZCBsb25nIGxvbmcgdWxsdmFsOworICB9Owor
ICB0eXBlZGVmIHN0cnVjdCBtZXNzYWdlIG1lc3NhZ2U7CisgIGV4dGVybiBE
V09SRCBfX3N0ZGNhbGwKKyAgd29ya2VyX2NvbnN1bWVyKHZvaWQqIGFyZyk7
CisgIHVuaW9uIGF2b2lkdHlwZWNoZWNrCisgIHsKKwlIQU5ETEUgaDsKKwlD
UklUSUNBTF9TRUNUSU9OIHM7CisJaW50IGk7CisgIH07CisgIGVudW0gYmNv
bnN0CisgIHsKKwlNVVRFWCwgRklMTCwgRU1QVFksIEZST05ULCBCQUNLLCBT
Wk1FTUJFUiwgU1pCVUYgPSAxNjM4NAorICB9OworICBzdHJ1Y3QgYm91bmRi
dWZmZXIKKyAgeworCXVuaW9uIGF2b2lkdHlwZWNoZWNrIG1lbWJlcltTWk1F
TUJFUl07CisJbWVzc2FnZSBidWZmZXJbU1pCVUZdOworCWludCB3b3JrZXJf
ZW5hYmxlZDsKKwlpbnQgaW5pdGlhbDsKKyAgfTsKKyNkZWZpbmUgcmVnKHgp
IF9fYXR0cmlidXRlX18oKHJlZ3Bhcm0oKHgpKSkpCisjZGVmaW5lIGJ1ZmZl
cm1ldGhvZCh4KSBib3VuZGJ1ZmZlcl8jI3gKKyAgZXh0ZXJuIHZvaWQgYnVm
ZmVybWV0aG9kKGN0b3IpKHN0cnVjdCBib3VuZGJ1ZmZlciopOworICBleHRl
cm4gdm9pZCBidWZmZXJtZXRob2QoaW5pdGlhbCkoc3RydWN0IGJvdW5kYnVm
ZmVyKik7CisgIGV4dGVybiB2b2lkIGJ1ZmZlcm1ldGhvZChkdG9yKShzdHJ1
Y3QgYm91bmRidWZmZXIqKTsKKyAgZXh0ZXJuIHJlZygyKSBpbnQgYnVmZmVy
bWV0aG9kKGVucXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciosIG1lc3NhZ2Up
OworICBleHRlcm4gcmVnKDIpIGludCBidWZmZXJtZXRob2QoZGVxdWV1ZSko
c3RydWN0IGJvdW5kYnVmZmVyKiwgbWVzc2FnZSopOworICBleHRlcm4gcmVn
KDIpIHZvaWQgYnVmZmVybWV0aG9kKGRlcXVldWVfbm9sb2NrKShzdHJ1Y3Qg
Ym91bmRidWZmZXIqLCBtZXNzYWdlKik7CisgIGV4dGVybiBpbnQgYnVmZmVy
bWV0aG9kKGVtcHR5KShzdHJ1Y3QgYm91bmRidWZmZXIqKTsKKyAgZXh0ZXJu
IGludCBidWZmZXJtZXRob2QoZnVsbCkoc3RydWN0IGJvdW5kYnVmZmVyKik7
CisjdW5kZWYgYnVmZmVybWV0aG9kCisjdW5kZWYgcmVnCisjaWZkZWYgX19j
cGx1c3BsdXMKK30KKyNlbmRpZgorI2VuZGlmIC8qIEJPVU5EQlVGRkVSX0hf
ICovCi0tLSAvZGV2L251bGwJMjAxMS0wOC0yOCAyMzoyOTozMS4wMDAwMDAw
MDAgKzA5MDAKKysrIHdpbnN1cC9jeWd3aW4vYm91bmRidWZmZXIuYwkyMDEx
LTA4LTI4IDE0OjE1OjIyLjI4MTI1MDAwMCArMDkwMApAQCAtMCwwICsxLDE3
OSBAQAorLyogYm91bmRidWZmZXIuYworCisgVEhJUyBTT0ZUV0FSRSBJUyBO
T1QgQ09QWVJJR0hURUQKKworIFRoaXMgc291cmNlIGNvZGUgaXMgb2ZmZXJl
ZCBmb3IgdXNlIGluIHRoZSBwdWJsaWMgZG9tYWluLiBZb3UgbWF5CisgdXNl
LCBtb2RpZnkgb3IgZGlzdHJpYnV0ZSBpdCBmcmVlbHkuCisKKyBUaGlzIGNv
ZGUgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJl
IHVzZWZ1bCBidXQKKyBXSVRIT1VUIEFOWSBXQVJSQU5UWS4gQUxMIFdBUlJF
TlRJRVMsIEVYUFJFU1MgT1IgSU1QTElFRCBBUkUgSEVSRUJZCisgRElTQ0xB
TUVELiBUaGlzIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0byB3YXJy
ZW50aWVzIG9mCisgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEg
UEFSVElDVUxBUiBQVVJQT1NFLgorICovCisjaW5jbHVkZSAid2luc3VwLmgi
CisjaW5jbHVkZSAid2lubGVhbi5oIgorI2luY2x1ZGUgInByb2ZpbC5oIgor
I2luY2x1ZGUgImdtb24uaCIKKyNpbmNsdWRlIDxzdGRpbnQuaD4KKyNpbmNs
dWRlIDxzdGRsaWIuaD4KKyNpbmNsdWRlIDxzdGRib29sLmg+CisjaW5jbHVk
ZSAiYm91bmRidWZmZXIuaCIKKy8qIFVzZQorICogMDogc2VtYXBob3JlCisg
KiAxOiBldmVudAorICovCisjZGVmaW5lIFVTRV9FVkVOVCAxCisvKgorICog
VGhlcmUgYXJlIGNhc2VzIHdoZXJlIHRoZSBib3VuZGVkIGJ1ZmZlciBpcyBi
bG9ja2VkIGFuZCBub3Qgb3BlcmF0aW9uYWwuCisgKiBhcyBhIHdvcmthcm91
bmQsIGdpdmUgbWF4aW11bSB0aW1lb3V0IHRvIFdGU08uCisgKiBhcyBsb25n
IGFzIHByb2ZpbGVfdGhyZWFkX29mZiBpcyBpc3N1ZWQgYmVmb3JlIGV2ZXJ5
IEV4aXRQcm9jZXNzLCBpdCBpcyBva2F5IGlmIHRoZSB0aW1lb3V0IGlzIElO
RklOSVRFLgorICovCisjZGVmaW5lIFdGU09fVElNRU9VVF9NUyBJTkZJTklU
RQorLyoKKyAqIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGli
cmFyeS9tczY4NzAzMi5hc3B4CisgKiAgQ3VycmVudCB0aHJlYWQgYW5kIHBy
b2Nlc3MgaGFuZGxlcyBhcmUgc3BlY2lhbCBjYXNlZAorICovCisjZGVmaW5l
IElOVkFMSURfRk9SX1NVUkUgLTMKK2V4dGVybiBTRUNVUklUWV9BVFRSSUJV
VEVTIHNlY19ub25lX25paDsKK0RXT1JEIF9fc3RkY2FsbAord29ya2VyX2Nv
bnN1bWVyKHZvaWQqIGFyZykKK3sKKyAgaWYgKHByb2YucXVldWUuaW5pdGlh
bCkKKwl7CisJICBib3VuZGJ1ZmZlcl9jdG9yKCZwcm9mLnF1ZXVlKTsKKwkg
IHByb2YucXVldWUuaW5pdGlhbCA9IDA7CisJfQorICBFbnRlckNyaXRpY2Fs
U2VjdGlvbigmcHJvZi5xdWV1ZS5tZW1iZXJbTVVURVhdLnMpOworICBwcm9m
LnF1ZXVlLndvcmtlcl9lbmFibGVkID0gMTsKKyAgUmVsZWFzZVNlbWFwaG9y
ZShwcm9mLm9wZXJhdGlvbmFsLCAxLCAwKTsKKyAgTGVhdmVDcml0aWNhbFNl
Y3Rpb24oJnByb2YucXVldWUubWVtYmVyW01VVEVYXS5zKTsKKyAgd2hpbGUg
KHByb2YucXVldWUud29ya2VyX2VuYWJsZWQpCisJeworCSAgbWVzc2FnZSBt
c2c7CisJICBpZiAoIWJvdW5kYnVmZmVyX2RlcXVldWUoJnByb2YucXVldWUs
ICZtc2cpKQorCQljb250aW51ZTsKKwkgIHVuc2lnbmVkIGlkeCA9IFBST0ZJ
RFggKCh1bnNpZ25lZCltc2cucHYsIHByb2YubG93cGMsIHByb2YuCisJCSAg
c2NhbGUpOworCSAgaWYgKCFtc2cudWxsdmFsKQorCQljb250aW51ZTsKKwkg
IF9nbW9ucGFyYW0uY29tbV9rY291bnRbaWR4XSArPSBtc2cudWxsdmFsOwor
CX0KKyAgcmV0dXJuIDA7Cit9CisjaWZkZWYgUFJPRklMRQordm9pZAorcHJv
ZmlsZV90aHJlYWRfb2ZmKCkKK3sKKyAgaW50IGVuYWJsZWQgPSBfX3N5bmNf
ZmV0Y2hfYW5kX2FuZCgmcHJvZi5xdWV1ZS53b3JrZXJfZW5hYmxlZCwgMCk7
CisgIGlmIChlbmFibGVkKQorCXsKKwkgIFJlbGVhc2VTZW1hcGhvcmUocHJv
Zi5xdWV1ZS5tZW1iZXJbRklMTF0uaCwgMSwgMCk7CisJICBXYWl0Rm9yU2lu
Z2xlT2JqZWN0KHByb2YucHJvZnRociwgSU5GSU5JVEUpOworCX0KK30KKyNl
bmRpZgorI2RlZmluZSBidWZmZXJtZXRob2QoeCkgYm91bmRidWZmZXJfIyN4
Cit2b2lkIGJ1ZmZlcm1ldGhvZChjdG9yKShzdHJ1Y3QgYm91bmRidWZmZXIq
IHRoaXMpCit7CisgIHRoaXMtPm1lbWJlcltGUk9OVF0uaSA9IHRoaXMtPm1l
bWJlcltCQUNLXS5pID0gMDsKKyAgSW5pdGlhbGl6ZUNyaXRpY2FsU2VjdGlv
bkFuZFNwaW5Db3VudCgmdGhpcy0+bWVtYmVyW01VVEVYXS5zLCAweDA4MDAw
MDAwKTsKKyNpZiBVU0VfRVZFTlQKKyAgdGhpcy0+bWVtYmVyW0VNUFRZXS5o
ID0gQ3JlYXRlRXZlbnRBKCZzZWNfbm9uZV9uaWgsIDEsIDEsIDApOworI2Vs
c2UKKyAgdGhpcy0+bWVtYmVyW0VNUFRZXS5oID0gQ3JlYXRlU2VtYXBob3Jl
QSgmc2VjX25vbmVfbmloLCBTWkJVRiwgU1pCVUYsIDApOworI2VuZGlmCisg
IHRoaXMtPm1lbWJlcltGSUxMXS5oID0gQ3JlYXRlU2VtYXBob3JlQSgmc2Vj
X25vbmVfbmloLCAwLCBTWkJVRiwgMCk7Cit9Cit2b2lkIGJ1ZmZlcm1ldGhv
ZChpbml0aWFsKShzdHJ1Y3QgYm91bmRidWZmZXIqIHRoaXMpCit7CisgIHRo
aXMtPmluaXRpYWwgPSAxOworICB0aGlzLT5tZW1iZXJbTVVURVhdLmkgPSB0
aGlzLT5tZW1iZXJbRU1QVFldLmkgPSB0aGlzLT5tZW1iZXJbRklMTF0uaSA9
IElOVkFMSURfRk9SX1NVUkU7Cit9Cit2b2lkIGJ1ZmZlcm1ldGhvZChkdG9y
KShzdHJ1Y3QgYm91bmRidWZmZXIqIHRoaXMpCit7CisgIENsb3NlSGFuZGxl
KHRoaXMtPm1lbWJlcltNVVRFWF0uaCk7CisgIENsb3NlSGFuZGxlKHRoaXMt
Pm1lbWJlcltFTVBUWV0uaCk7CisgIENsb3NlSGFuZGxlKHRoaXMtPm1lbWJl
cltGSUxMXS5oKTsKKyAgdGhpcy0+bWVtYmVyW01VVEVYXS5pID0gdGhpcy0+
bWVtYmVyW0VNUFRZXS5pID0gdGhpcy0+bWVtYmVyW0ZJTExdLmkgPSBJTlZB
TElEX0ZPUl9TVVJFOworfQorc3RhdGljIF9fYXR0cmlidXRlX18oKHVzZWQp
KSB2b2lkIGJ1ZmZlcm1ldGhvZChjaGVjaykoc3RydWN0IGJvdW5kYnVmZmVy
KiB0aGlzKQoreworICBpZiAoISgodGhpcy0+bWVtYmVyW0ZST05UXS5pID4g
LTEpICYmICh0aGlzLT5tZW1iZXJbRlJPTlRdLmkgPCBTWkJVRikpKQorCWFz
bSB2b2xhdGlsZSgiaW50ICQzXHRcbiIpOworICBpZiAoISgodGhpcy0+bWVt
YmVyW0JBQ0tdLmkgPiAtMSkgJiYgKHRoaXMtPm1lbWJlcltCQUNLXS5pIDwg
U1pCVUYpKSkKKwlhc20gdm9sYXRpbGUoImludCAkM1x0XG4iKTsKK30KK19f
YXR0cmlidXRlX18oKGFsd2F5c19pbmxpbmUscmVncGFybSgyKSkpIHZvaWQg
YnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKShzdHJ1Y3QgYm91bmRidWZm
ZXIqLCBtZXNzYWdlKTsKK2ludCBfX2F0dHJpYnV0ZV9fKChyZWdwYXJtKDIp
KSkgYnVmZmVybWV0aG9kKGVucXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciog
dGhpcywgbWVzc2FnZSBvYmopCit7CisgIGlmIChwcm9mLnF1ZXVlLmluaXRp
YWwpCisJeworCSAgYnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSh0aGlz
LCBvYmopOworCSAgcmV0dXJuIDE7CisJfQorICBpbnQgcmV0ID0gV2FpdEZv
clNpbmdsZU9iamVjdCh0aGlzLT5tZW1iZXJbRU1QVFldLmgsIFdGU09fVElN
RU9VVF9NUyk7CisgIGlmICgocmV0ICE9IFdBSVRfT0JKRUNUXzApIHx8ICF0
aGlzLT53b3JrZXJfZW5hYmxlZCkKKwlyZXR1cm4gMDsKKyAgRW50ZXJDcml0
aWNhbFNlY3Rpb24oJnByb2YucXVldWUubWVtYmVyW01VVEVYXS5zKTsKKyAg
YnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSh0aGlzLCBvYmopOworI2lm
IFVTRV9FVkVOVAorICBsb25nIGF2YWlsX3RvX2RlcXVldWU7CisgIFJlbGVh
c2VTZW1hcGhvcmUodGhpcy0+bWVtYmVyW0ZJTExdLmgsIDAsICZhdmFpbF90
b19kZXF1ZXVlKTsKKyAgYXZhaWxfdG9fZGVxdWV1ZSA9IGF2YWlsX3RvX2Rl
cXVldWUgPT0gKFNaQlVGIC0gMSk7CisjZW5kaWYKKyAgTGVhdmVDcml0aWNh
bFNlY3Rpb24oJnByb2YucXVldWUubWVtYmVyW01VVEVYXS5zKTsKKyNpZiBV
U0VfRVZFTlQKKyAgaWYgKGF2YWlsX3RvX2RlcXVldWUpCisJUmVzZXRFdmVu
dCh0aGlzLT5tZW1iZXJbRU1QVFldLmgpOworI2VuZGlmCisgIFJlbGVhc2VT
ZW1hcGhvcmUodGhpcy0+bWVtYmVyW0ZJTExdLmgsIDEsIDApOworICByZXR1
cm4gMTsKK30KKworaW50IGJ1ZmZlcm1ldGhvZChlbXB0eSkoc3RydWN0IGJv
dW5kYnVmZmVyKiB0aGlzKQoreworICBpbnQgcmV0ID0gdGhpcy0+bWVtYmVy
W0ZST05UXS5pID09IHRoaXMtPm1lbWJlcltCQUNLXS5pOworICByZXR1cm4g
cmV0OworfQoraW50IGJ1ZmZlcm1ldGhvZChmdWxsKShzdHJ1Y3QgYm91bmRi
dWZmZXIqIHRoaXMpCit7CisgIGludCByZXQgPSAodGhpcy0+bWVtYmVyW0ZS
T05UXS5pICsgdGhpcy0+bWVtYmVyW0JBQ0tdLmkpID09IChTWkJVRiAtIDEp
OworICByZXR1cm4gcmV0OworfQoraW50IF9fYXR0cmlidXRlX18oKHJlZ3Bh
cm0oMikpKSBidWZmZXJtZXRob2QoZGVxdWV1ZSkoc3RydWN0IGJvdW5kYnVm
ZmVyKiB0aGlzLCBtZXNzYWdlKiByZXN1bHQpCit7CisgIGlmIChwcm9mLnF1
ZXVlLmluaXRpYWwpCisJeworCSAgYnVmZmVybWV0aG9kKGRlcXVldWVfbm9s
b2NrKSh0aGlzLCByZXN1bHQpOworCSAgcmV0dXJuIDE7CisJfQorICBpbnQg
cmV0ID0gV2FpdEZvclNpbmdsZU9iamVjdCh0aGlzLT5tZW1iZXJbRklMTF0u
aCwgV0ZTT19USU1FT1VUX01TKTsKKyAgaWYgKChyZXQgIT0gV0FJVF9PQkpF
Q1RfMCkgfHwgIXRoaXMtPndvcmtlcl9lbmFibGVkKQorCXJldHVybiAwOwor
ICBFbnRlckNyaXRpY2FsU2VjdGlvbigmcHJvZi5xdWV1ZS5tZW1iZXJbTVVU
RVhdLnMpOworICBidWZmZXJtZXRob2QoZGVxdWV1ZV9ub2xvY2spKHRoaXMs
IHJlc3VsdCk7CisjaWYgVVNFX0VWRU5UCisgIGxvbmcgYXZhaWxfdG9fZW5x
dWV1ZTsKKyAgUmVsZWFzZVNlbWFwaG9yZSh0aGlzLT5tZW1iZXJbRklMTF0u
aCwgMCwgJmF2YWlsX3RvX2VucXVldWUpOworICBhdmFpbF90b19lbnF1ZXVl
ID0gYXZhaWxfdG9fZW5xdWV1ZSA8PSAwOworI2VuZGlmCisgIExlYXZlQ3Jp
dGljYWxTZWN0aW9uKCZwcm9mLnF1ZXVlLm1lbWJlcltNVVRFWF0ucyk7Cisj
aWYgVVNFX0VWRU5UCisgIGlmIChhdmFpbF90b19lbnF1ZXVlKQorCVNldEV2
ZW50KHRoaXMtPm1lbWJlcltFTVBUWV0uaCk7CisjZWxzZQorICBSZWxlYXNl
U2VtYXBob3JlKHRoaXMtPm1lbWJlcltFTVBUWV0uaCwgMSwgMCk7CisjZW5k
aWYKKyAgcmV0dXJuIDE7Cit9CitfX2F0dHJpYnV0ZV9fKChhbHdheXNfaW5s
aW5lLHJlZ3Bhcm0oMikpKSB2b2lkIGJ1ZmZlcm1ldGhvZChlbnF1ZXVlX25v
bG9jaykoc3RydWN0IGJvdW5kYnVmZmVyKiB0aGlzLCBtZXNzYWdlIG9iaikK
K3sKKyAgdGhpcy0+YnVmZmVyW3RoaXMtPm1lbWJlcltCQUNLXS5pXSA9IG9i
ajsKKyAgdGhpcy0+bWVtYmVyW0JBQ0tdLmkgPSAodGhpcy0+bWVtYmVyW0JB
Q0tdLmkgKyAxKSAlIFNaQlVGOworfQorX19hdHRyaWJ1dGVfXygoYWx3YXlz
X2lubGluZSxyZWdwYXJtKDIpKSkgdm9pZCBidWZmZXJtZXRob2QoZGVxdWV1
ZV9ub2xvY2spKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhpcywgbWVzc2FnZSog
cmVzdWx0KQoreworICAoKnJlc3VsdCkgPSB0aGlzLT5idWZmZXJbdGhpcy0+
bWVtYmVyW0ZST05UXS5pXTsKKyAgdGhpcy0+bWVtYmVyW0ZST05UXS5pID0g
KHRoaXMtPm1lbWJlcltGUk9OVF0uaSArIDEpICUgU1pCVUY7Cit9CisjdW5k
ZWYgYnVmZmVybWV0aG9kCi0tLSAvZGV2L251bGwJMjAxMS0wOC0yOCAyMzoy
OTozMS4wMDAwMDAwMDAgKzA5MDAKKysrIHdpbnN1cC9jeWd3aW4vaW5zdHJ1
bWVudC5jCTIwMTEtMDgtMjYgMDU6NDU6MTUuMjM0Mzc1MDAwICswOTAwCkBA
IC0wLDAgKzEsMTE5IEBACisvKiBpbnN0cnVtZW50LmMKKworIFRISVMgU09G
VFdBUkUgSVMgTk9UIENPUFlSSUdIVEVECisKKyBUaGlzIHNvdXJjZSBjb2Rl
IGlzIG9mZmVyZWQgZm9yIHVzZSBpbiB0aGUgcHVibGljIGRvbWFpbi4gWW91
IG1heQorIHVzZSwgbW9kaWZ5IG9yIGRpc3RyaWJ1dGUgaXQgZnJlZWx5Lgor
CisgVGhpcyBjb2RlIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQg
aXQgd2lsbCBiZSB1c2VmdWwgYnV0CisgV0lUSE9VVCBBTlkgV0FSUkFOVFku
IEFMTCBXQVJSRU5USUVTLCBFWFBSRVNTIE9SIElNUExJRUQgQVJFIEhFUkVC
WQorIERJU0NMQU1FRC4gVGhpcyBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0
ZWQgdG8gd2FycmVudGllcyBvZgorIE1FUkNIQU5UQUJJTElUWSBvciBGSVRO
RVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4KKworIENyZWF0ZWQgb246
IDIwMTEuIDMuIDIuCisgKi8KKyNpbmNsdWRlIDxzdGRpbnQuaD4KKyNpbmNs
dWRlICJ3aW5zdXAuaCIKKyNpbmNsdWRlICJ3aW5sZWFuLmgiCisjaW5jbHVk
ZSAicHJvZmlsLmgiCisjaW5jbHVkZSAiaW5zdHJ1bWVudC5oIgorI2luY2x1
ZGUgImJvdW5kYnVmZmVyLmgiCisjaW5jbHVkZSAiZ21vbi5oIgorRFdPUkQg
Tk9fQ09QWSB0bHNrZXk7CitleHRlcm4gRFdPUkQgV0lOQVBJCitHZXRMYXN0
RXJyb3Iodm9pZCk7Cit2b2lkIFdJTkFQSQorU2V0TGFzdEVycm9yKERXT1JE
KTsKK3ZvaWQKK19fYXR0cmlidXRlX18oKG5vX2luc3RydW1lbnRfZnVuY3Rp
b24pKQorX19jeWdfcHJvZmlsZV9mdW5jX2N0b3IoKQoreworICB0bHNrZXkg
PSBUbHNBbGxvYygpOworfQordm9pZCBfX2F0dHJpYnV0ZV9fICgobm9faW5z
dHJ1bWVudF9mdW5jdGlvbikpCitfX2N5Z19wcm9maWxlX3Rsc19jdG9yKCkK
K3sKKyAgdm9pZCAqIG1hcCA9ICh2b2lkKikgTG9jYWxBbGxvYyhMTUVNX1pF
Uk9JTklULCBzaXplb2Yoc3RydWN0IGNsaykpOworICBUbHNTZXRWYWx1ZSh0
bHNrZXksIG1hcCk7CisgIHN0cnVjdCBjbGsqIGNsa2luZm8gPSAoc3RydWN0
IGNsayopIG1hcDsKKyAgY2xraW5mby0+aWR4ID0gMDsKK30KK3ZvaWQgX19h
dHRyaWJ1dGVfXyAoKG5vX2luc3RydW1lbnRfZnVuY3Rpb24pKQorX19jeWdf
cHJvZmlsZV90bHNfZHRvcigpCit7CisgIHZvaWQgKiBtYXAgPSBUbHNHZXRW
YWx1ZSh0bHNrZXkpOworICBpZiAobWFwKQorCUxvY2FsRnJlZShtYXApOwor
ICBUbHNTZXRWYWx1ZSh0bHNrZXksIDApOworCit9Cit2b2lkIF9fYXR0cmli
dXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkKK19fY3lnX3Byb2Zp
bGVfZnVuY19kdG9yKCkKK3sKKyAgVGxzRnJlZSh0bHNrZXkpOworICB0bHNr
ZXkgPSAtMTsKK30KKy8qCisgKiBJdCB3b3VsZCBiZSBiZXR0ZXIgaWYgaXQg
ZG9lcyBlaXRoZXIgYm91bmQgY2hlY2tzIGFuZCBzb21lIGFzc2VydGlvbiBh
Ym91dCBjYWxsZXIuCisgKiBGb3IgdGhlIGlzc3VlIG9mIGJvdW5kIGNoZWNr
LCBpdCBpcyBhc3N1bWVkIHRoYXQgY3lnd2luJ3MgY2FsbCBzdGFjayBncm93
cyBsZXNzIHRoYW4gQ0FMTFNUQUNLQk9VTkQuCisgKiBGb3IgdGhlIGlzc3Vl
IG9mIGNhbGxlciwgaXQgaXMgYmVsaXZlZCB0aGF0IGdjYyBkb2VzIHJpZ2h0
IHRoaW5nIHNvIHRoYXQgd2UgaGF2ZSBtYXRjaGluZyBlbnRlci9leGl0IHBh
aXIuCisgKi8KK3N0YXRpYyB2b2lkIF9fYXR0cmlidXRlX18gKChhbHdheXNf
aW5saW5lLG5vX2luc3RydW1lbnRfZnVuY3Rpb24scmVncGFybSgzKSkpCitf
X2N5Z19zZXRfY2xrKHN0cnVjdCBjbGsqIGNsa2luZm8sIHZvaWQgKmNhbGxl
ciwgaW50IHN0YXRlKQoreworICByZWdpc3RlciBpbnQgaWR4OworICByZWdp
c3RlciBtZXNzYWdlIG1zZzsKKyAgc3dpdGNoIChzdGF0ZSkKKwl7CisgIGNh
c2UgMDoKKwlpZiAoIWNsa2luZm8tPmlkeCkKKwkgIGdvdG8gc2tpcDsKKwlp
ZHggPSAtLWNsa2luZm8tPmlkeDsKKwljbGtpbmZvLT50c2NbaWR4XSA9IF9f
YnVpbHRpbl9pYTMyX3JkdHNjKCkgLSBjbGtpbmZvLT50c2NbaWR4XTsKKwlt
c2cucHYgPSBjbGtpbmZvLT5wY1tpZHhdOworCW1zZy51bGx2YWwgPSBjbGtp
bmZvLT50c2NbaWR4XTsKKwlpZiAoJnByb2YucXVldWUud29ya2VyX2VuYWJs
ZWQpCisJICBib3VuZGJ1ZmZlcl9lbnF1ZXVlKCZwcm9mLnF1ZXVlLCBtc2cp
OworCWJyZWFrOworICBjYXNlIDE6CisJaWR4ID0gY2xraW5mby0+aWR4Owor
CWNsa2luZm8tPnBjW2lkeF0gPSBjYWxsZXI7CisJY2xraW5mby0+dHNjW2lk
eF0gPSBfX2J1aWx0aW5faWEzMl9yZHRzYygpOworCWNsa2luZm8tPmlkeCsr
OworCWJyZWFrOworICBkZWZhdWx0OgorCWdvdG8gc2tpcDsKKwlicmVhazsK
Kwl9OworICBza2lwOiBkbworCXsKKwl9CisgIHdoaWxlICgwKTsKK30KKy8q
CisgKiBHZXRMYXN0RXJyb3IgLyBTZXRMYXN0RXJyb3IgaXMgbmVlZGVkIGJl
Y2F1c2UgVGxzKiBhbHRlciBsYXN0IGVycm9yIGNvZGUKKyAqLwordm9pZCBf
X2F0dHJpYnV0ZV9fICgobm9faW5zdHJ1bWVudF9mdW5jdGlvbikpCitfX2N5
Z19wcm9maWxlX2Z1bmNfZW50ZXIodm9pZCogY2FsbGVyLCB2b2lkKiBzaXRl
KQoreworICBEV09SRCBlcnIgPSBHZXRMYXN0RXJyb3IoKTsKKyAgc3RydWN0
IGNsayogY2xraW5mbyA9IChzdHJ1Y3QgY2xrKikgVGxzR2V0VmFsdWUodGxz
a2V5KTsKKyAgaWYgKCFjbGtpbmZvKQorCXsKKwkgIGdvdG8gdHJhcDsKKwl9
CisgIF9fY3lnX3NldF9jbGsoY2xraW5mbywgY2FsbGVyLCAxKTsKKyAgdHJh
cDogU2V0TGFzdEVycm9yKGVycik7Cit9Cit2b2lkIF9fYXR0cmlidXRlX18g
KChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkKK19fY3lnX3Byb2ZpbGVfZnVu
Y19leGl0KHZvaWQqIGNhbGxlciwgdm9pZCogc2l0ZSkKK3sKKyAgRFdPUkQg
ZXJyID0gR2V0TGFzdEVycm9yKCk7CisgIHN0cnVjdCBjbGsqIGNsa2luZm8g
PSAoc3RydWN0IGNsayopIFRsc0dldFZhbHVlKHRsc2tleSk7CisgIGlmICgh
Y2xraW5mbykKKwl7CisJICBnb3RvIHRyYXA7CisJfQorICBfX2N5Z19zZXRf
Y2xrKGNsa2luZm8sIGNhbGxlciwgMCk7CisgIHRyYXA6IFNldExhc3RFcnJv
cihlcnIpOworfQotLS0gL2Rldi9udWxsCTIwMTEtMDgtMjggMjM6Mjk6MzIu
MDAwMDAwMDAwICswOTAwCisrKyB3aW5zdXAvY3lnd2luL2luc3RydW1lbnQu
aAkyMDExLTA4LTI2IDA1OjMyOjE0LjcxODM3NTAwMCArMDkwMApAQCAtMCww
ICsxLDQyIEBACisvKiBpbnN0cnVtZW50LmMKKworIFRISVMgU09GVFdBUkUg
SVMgTk9UIENPUFlSSUdIVEVECisKKyBUaGlzIHNvdXJjZSBjb2RlIGlzIG9m
ZmVyZWQgZm9yIHVzZSBpbiB0aGUgcHVibGljIGRvbWFpbi4gWW91IG1heQor
IHVzZSwgbW9kaWZ5IG9yIGRpc3RyaWJ1dGUgaXQgZnJlZWx5LgorCisgVGhp
cyBjb2RlIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2ls
bCBiZSB1c2VmdWwgYnV0CisgV0lUSE9VVCBBTlkgV0FSUkFOVFkuIEFMTCBX
QVJSRU5USUVTLCBFWFBSRVNTIE9SIElNUExJRUQgQVJFIEhFUkVCWQorIERJ
U0NMQU1FRC4gVGhpcyBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0ZWQgdG8g
d2FycmVudGllcyBvZgorIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZP
UiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4KKworIENyZWF0ZWQgb246IDIwMTEu
IDMuIDE4LgorICovCisjaWZuZGVmIElOU1RSVU1FTlRfSF8KKyNkZWZpbmUg
SU5TVFJVTUVOVF9IXworI2lmZGVmIF9fY3BsdXNwbHVzCitleHRlcm4gIkMi
Cit7CisjZW5kaWYKKyAgc3RydWN0IGNsaworICB7CisJLyoKKwkgKiBGSVhN
RTogQ0FMTFNUQUNLQk9VTkQgc2hvdWxkIGJlIGxlc3MgdGhhbiBtYXhpbXVt
IGNhbGwgc3RhY2sgc2l6ZS4KKwkgKi8KKyNkZWZpbmUgQ0FMTFNUQUNLQk9V
TkQgMHgxMDAwMAorCXVuc2lnbmVkIGlkeDsKKwl2b2lkKiBwY1tDQUxMU1RB
Q0tCT1VORF07CisJdW5zaWduZWQgbG9uZyBsb25nIHRzY1tDQUxMU1RBQ0tC
T1VORF07CisgIH07CisgIHZvaWQgX19hdHRyaWJ1dGVfXyAoKG5vX2luc3Ry
dW1lbnRfZnVuY3Rpb24pKQorICBfX2N5Z19wcm9maWxlX2Z1bmNfY3Rvcigp
OworICB2b2lkIF9fYXR0cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0
aW9uKSkKKyAgX19jeWdfcHJvZmlsZV9mdW5jX2R0b3IoKTsKKyAgdm9pZCBf
X2F0dHJpYnV0ZV9fICgobm9faW5zdHJ1bWVudF9mdW5jdGlvbikpCisgIF9f
Y3lnX3Byb2ZpbGVfdGxzX2N0b3IoKTsKKyAgdm9pZCBfX2F0dHJpYnV0ZV9f
ICgobm9faW5zdHJ1bWVudF9mdW5jdGlvbikpCisgIF9fY3lnX3Byb2ZpbGVf
dGxzX2R0b3IoKTsKKyNpZmRlZiBfX2NwbHVzcGx1cworfQorI2VuZGlmCisj
ZW5kaWYgLyogSU5TVFJVTUVOVF9IXyAqLwo=

--------------030807030204090006040304
Content-Type: text/plain; charset=UTF-8;
 name="winsup-makefile.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="winsup-makefile.diff"
Content-length: 883

77u/SW5kZXg6IHdpbnN1cC9NYWtlZmlsZS5jb21tb24KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9NYWtl
ZmlsZS5jb21tb24sdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNTYKZGlmZiAt
dSAtcjEuNTYgTWFrZWZpbGUuY29tbW9uCi0tLSB3aW5zdXAvTWFrZWZpbGUu
Y29tbW9uICAgICAgNyBKdWwgMjAwOSAyMDoxMjo0MyAtMDAwMCAgICAgICAx
LjU2CisrKyB3aW5zdXAvTWFrZWZpbGUuY29tbW9uICAgICAgMTkgQXVnIDIw
MTEgMjA6MjI6NDAgLTAwMDAKQEAgLTExMyw3ICsxMTMsNyBAQAogTElCTTo9
JChuZXdsaWJfYnVpbGQpL2xpYm0vbGlibS5hCiBDUlQwOj0kKGN5Z3dpbl9i
dWlsZCkvY3J0MC5vCgotQUxMX0NGTEFHUzo9JChERUZTKSAkKE1BTExPQ19E
RUJVRykgJChDRkxBR1MpICQoR0NDX0RFRkFVTFRfT1BUSU9OUykKK0FMTF9D
RkxBR1M9JChERUZTKSAkKE1BTExPQ19ERUJVRykgJChDRkxBR1MpICQoR0ND
X0RFRkFVTFRfT1BUSU9OUykKIEFMTF9DWFhGTEFHUz0kKERFRlMpICQoTUFM
TE9DX0RFQlVHKSAkKENYWEZMQUdTKSAkKEdDQ19ERUZBVUxUX09QVElPTlMp
CgogaWZuZGVmIFBSRVBST0NFU1MK

--------------030807030204090006040304--
