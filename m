Return-Path: <cygwin-patches-return-3454-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 8018 invoked by alias); 23 Jan 2003 12:21:48 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 8009 invoked from network); 23 Jan 2003 12:21:47 -0000
X-Authentication-Warning: atacama.four-d.de: mail set sender to <tpfaff@gmx.net> using -f
Date: Thu, 23 Jan 2003 12:21:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] a new pthread_cond implementation
Message-ID: <Pine.WNT.4.44.0301221427270.531-400000@algeria.intern.net>
X-X-Sender: pfaff@antarctica.intern.net
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="5839514-18335-1043247879=:531"
Content-ID: <Pine.WNT.4.44.0301221656500.531@algeria.intern.net>
X-SW-Source: 2003-q1/txt/msg00103.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--5839514-18335-1043247879=:531
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0301221656501.531@algeria.intern.net>
Content-length: 3146


Attached is a new pthread_cond implementation.

The current implementation uses WIN32 events to block threads. To work
around the missing SignalObjectAndWait on 9x and to protect against the
"lost wakeup" problem the code is rather complex and uses a busy loop to
wait for released threads.
(see http://www.cs.wustl.edu/~schmidt/win32-cv-1.html for a strategies
about implementing pthread cond variables on WIN32 and a description of
the lost wakeup problem).

Actually the implementation suffers from following problems:

1. pthread_cond_broadcast does not protect against the lost wakeup
problem.
2. pthread_cond_{wait|timedwait} is not a cancellation point.
3. pthread_cond_timedwait ignores the nsec part of abstime.
4. The spec requires that the mutex which is used with the condition
shall be locked by the calling thread. The current code does not check
this and will additionally create the mutex if it initialized with
PTHREAD_MUTEX_INITIALIZER. The opengroup spec suggests EPERM under that
condition.

The attached code has passed all pthreads_win32 tests so far and a stress
test of one the pthreads_win32 contributors. And i was able to build a
threaded perl 5.8.0-1 that passed all pthread related tests. The
pthread_cond test in perl is really good and it failed with the current
code erratically.

(FYI: The perl test result was:
...
t/op/alarm...........................Unable to create sub named "" at
op/alarm.t line 20.
# Looks like you planned 4 tests but ran 0.
FAILED at test 1
...
t/op/magic...........................FAILED at test 24
...
lib/ExtUtils/t/Embed.................FAILED at test 2
Failed 3 test scripts out of 681, 99.56% okay.
The Embed test failed with an segmentation fault.)


Attached are also two additional test cases from pthreads_win32.

As a side effect thread.cc will shrink significantly.

2003-01-23  Thomas Pfaff  <tpfaff@gmx.net>

	* thread.h (pthread_mutex::canBeUnlocked): New static method.
	(pthread_cond::ExitingWait): Remove.
	(pthread_cond::mutex): Ditto.
	(pthread_cond::cond_access): Ditto.
	(pthread_cond::win32_obj_id): Ditto.
	(pthread_cond::TimedWait): Ditto.
	(pthread_cond::BroadCast): Ditto.
	(pthread_cond::Signal): Ditto.
	(pthread_cond::pending): New member.
	(pthread_cond::semWait): Ditto.
	(pthread_cond::semIn): Ditto.
	(pthread_cond::mtxOut): Ditto.
	(pthread_cond::mtxCond): Ditto.
	(pthread_cond::UnBlock): New method.
	(pthread_cond::Wait): Ditto.
	* thread.cc: Update list of cancellation points.
	(pthread_cond::pthread_cond): Rewrite.
	(pthread_cond::~pthread_cond): Ditto.
	(pthread_cond::TimedWait): Remove.
	(pthread_cond::BroadCast): Ditto.
	(pthread_cond::Signal): Ditto.
	(pthread_cond::UnBlock): Implement.
	(pthread_cond::Wait): Ditto.
	(pthread_cond::fixup_after_fork): Rewrite.
	(pthread_mutex::canBeUnlocked): Implement.
	(pthread_mutex::fixup_after_fork): Remove DETECT_BAD_APP
	conditional.
	(__pthread_cond_broadcast): Just return 0 if the condition is
	ot initialized. Call pthread_cond::UnBlock to release blocked
	threads.
	(__pthread_cond_signal): Ditto.
	(__pthread_cond__dowait): Rewrite.
	(pthread_cond_timedwait): Fix waitlength calculation.

--5839514-18335-1043247879=:531
Content-Type: TEXT/PLAIN; NAME="condvar9.c"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0301221604390.531@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="condvar9.c"
Content-length: 6027

LyoKICogRmlsZTogY29uZHZhcjkuYwogKgogKgogKiBUZXN0IFN5bm9wc2lz
OgogKiAtIFRlc3QgbXVsdGlwbGUgcHRocmVhZF9jb25kX2Jyb2FkY2FzdHMg
d2l0aCB0aHJlYWQgY2FuY2VsYXRpb24uCiAqCiAqIFRlc3QgTWV0aG9kIChW
YWxpZGF0aW9uIG9yIEZhbHNpZmljYXRpb24pOgogKiAtIFZhbGlkYXRpb24K
ICoKICogUmVxdWlyZW1lbnRzIFRlc3RlZDoKICogLSAKICoKICogRmVhdHVy
ZXMgVGVzdGVkOgogKiAtIAogKgogKiBDYXNlcyBUZXN0ZWQ6CiAqIC0gCiAq
CiAqIERlc2NyaXB0aW9uOgogKiAtIE1ha2UgTlVNVEhSRUFEUyB0aHJlYWRz
IHdhaXQgb24gQ1YsIGNhbmNlbCBvbmUsIGJyb2FkY2FzdCBzaWduYWwgdGhl
bSwKICogICBhbmQgdGhlbiByZXBlYXQuCiAqCiAqIEVudmlyb25tZW50Ogog
KiAtIAogKgogKiBJbnB1dDoKICogLSBOb25lLgogKgogKiBPdXRwdXQ6CiAq
IC0gRmlsZSBuYW1lLCBMaW5lIG51bWJlciwgYW5kIGZhaWxlZCBleHByZXNz
aW9uIG9uIGZhaWx1cmUuCiAqIC0gTm8gb3V0cHV0IG9uIHN1Y2Nlc3MuCiAq
CiAqIEFzc3VtcHRpb25zOgogKiAtIAogKgogKiBQYXNzIENyaXRlcmlhOgog
KiAtIFByb2Nlc3MgcmV0dXJucyB6ZXJvIGV4aXQgc3RhdHVzLgogKgogKiBG
YWlsIENyaXRlcmlhOgogKiAtIFByb2Nlc3MgcmV0dXJucyBub24temVybyBl
eGl0IHN0YXR1cy4KICovCgojaW5jbHVkZSAidGVzdC5oIgojaW5jbHVkZSA8
c3lzL3RpbWViLmg+CgovKgogKiBDcmVhdGUgTlVNVEhSRUFEUyB0aHJlYWRz
IGluIGFkZGl0aW9uIHRvIHRoZSBNYWluIHRocmVhZC4KICovCmVudW0gewog
IE5VTVRIUkVBRFMgPSA5Cn07Cgp0eXBlZGVmIHN0cnVjdCBiYWdfdF8gYmFn
X3Q7CnN0cnVjdCBiYWdfdF8gewogIGludCB0aHJlYWRudW07CiAgaW50IHN0
YXJ0ZWQ7CiAgLyogQWRkIG1vcmUgcGVyLXRocmVhZCBzdGF0ZSB2YXJpYWJs
ZXMgaGVyZSAqLwp9OwoKc3RhdGljIGJhZ190IHRocmVhZGJhZ1tOVU1USFJF
QURTICsgMV07Cgp0eXBlZGVmIHN0cnVjdCBjdnRoaW5nX3RfIGN2dGhpbmdf
dDsKCnN0cnVjdCBjdnRoaW5nX3RfIHsKICBwdGhyZWFkX2NvbmRfdCBub3Ri
dXN5OwogIHB0aHJlYWRfbXV0ZXhfdCBsb2NrOwogIGludCBzaGFyZWQ7Cn07
CgpzdGF0aWMgY3Z0aGluZ190IGN2dGhpbmcgPSB7CiAgUFRIUkVBRF9DT05E
X0lOSVRJQUxJWkVSLAogIFBUSFJFQURfTVVURVhfSU5JVElBTElaRVIsCiAg
MAp9OwoKc3RhdGljIHB0aHJlYWRfbXV0ZXhfdCBzdGFydF9mbGFnID0gUFRI
UkVBRF9NVVRFWF9JTklUSUFMSVpFUjsKCnN0YXRpYyBzdHJ1Y3QgdGltZXNw
ZWMgYWJzdGltZSA9IHsgMCwgMCB9OwoKc3RhdGljIGludCBhd29rZW47Cgpz
dGF0aWMgdm9pZCAqCm15dGhyZWFkKHZvaWQgKiBhcmcpCnsKICBiYWdfdCAq
IGJhZyA9IChiYWdfdCAqKSBhcmc7CgogIGFzc2VydChiYWcgPT0gJnRocmVh
ZGJhZ1tiYWctPnRocmVhZG51bV0pOwogIGFzc2VydChiYWctPnN0YXJ0ZWQg
PT0gMCk7CiAgYmFnLT5zdGFydGVkID0gMTsKCiAgLyogV2FpdCBmb3IgdGhl
IHN0YXJ0IGd1biAqLwogIGFzc2VydChwdGhyZWFkX211dGV4X2xvY2soJnN0
YXJ0X2ZsYWcpID09IDApOwogIGFzc2VydChwdGhyZWFkX211dGV4X3VubG9j
aygmc3RhcnRfZmxhZykgPT0gMCk7CgogIGFzc2VydChwdGhyZWFkX211dGV4
X2xvY2soJmN2dGhpbmcubG9jaykgPT0gMCk7CgogIC8qCiAgICogcHRocmVh
ZF9jb25kX3RpbWVkd2FpdCBpcyBhIGNhbmNlbGF0aW9uIHBvaW50IGFuZCB3
ZQogICAqIGdvaW5nIHRvIGNhbmNlbCBvbmUgZGVsaWJlcmF0ZWx5LgogICAq
LwojaWZkZWYgX01TQ19WRVIKI3ByYWdtYSBpbmxpbmVfZGVwdGgoMCkKI2Vu
ZGlmCiAgcHRocmVhZF9jbGVhbnVwX3B1c2gocHRocmVhZF9tdXRleF91bmxv
Y2ssICh2b2lkICopICZjdnRoaW5nLmxvY2spOwoKICB3aGlsZSAoISAoY3Z0
aGluZy5zaGFyZWQgPiAwKSkKICAgIGFzc2VydChwdGhyZWFkX2NvbmRfdGlt
ZWR3YWl0KCZjdnRoaW5nLm5vdGJ1c3ksICZjdnRoaW5nLmxvY2ssICZhYnN0
aW1lKSA9PSAwKTsKCiAgcHRocmVhZF9jbGVhbnVwX3BvcCgwKTsKI2lmZGVm
IF9NU0NfVkVSCiNwcmFnbWEgaW5saW5lX2RlcHRoKCkKI2VuZGlmCgogIGFz
c2VydChjdnRoaW5nLnNoYXJlZCA+IDApOwoKICBhd29rZW4rKzsKCiAgYXNz
ZXJ0KHB0aHJlYWRfbXV0ZXhfdW5sb2NrKCZjdnRoaW5nLmxvY2spID09IDAp
OwoKICByZXR1cm4gKHZvaWQgKikgMDsKfQoKaW50Cm1haW4oKQp7CiAgaW50
IGZhaWxlZCA9IDA7CiAgaW50IGk7CiAgaW50IGZpcnN0LCBsYXN0OwogIGlu
dCBjYW5jZWxlZFRocmVhZHMgPSAwOwogIHB0aHJlYWRfdCB0W05VTVRIUkVB
RFMgKyAxXTsKICBzdHJ1Y3QgdGltZWIgY3VyclN5c1RpbWU7CiAgY29uc3Qg
RFdPUkQgTkFOT1NFQ19QRVJfTUlMTElTRUMgPSAxMDAwMDAwOwoKICBhc3Nl
cnQoKHRbMF0gPSBwdGhyZWFkX3NlbGYoKSkgIT0gTlVMTCk7CgogIGFzc2Vy
dChjdnRoaW5nLm5vdGJ1c3kgPT0gUFRIUkVBRF9DT05EX0lOSVRJQUxJWkVS
KTsKCiAgYXNzZXJ0KGN2dGhpbmcubG9jayA9PSBQVEhSRUFEX01VVEVYX0lO
SVRJQUxJWkVSKTsKCiAgLyogZ2V0IGN1cnJlbnQgc3lzdGVtIHRpbWUgKi8K
ICBmdGltZSgmY3VyclN5c1RpbWUpOwoKICBhYnN0aW1lLnR2X3NlYyA9IGN1
cnJTeXNUaW1lLnRpbWU7CiAgYWJzdGltZS50dl9uc2VjID0gTkFOT1NFQ19Q
RVJfTUlMTElTRUMgKiBjdXJyU3lzVGltZS5taWxsaXRtOwogCiAgYWJzdGlt
ZS50dl9zZWMgKz0gNTsKCiAgYXNzZXJ0KCh0WzBdID0gcHRocmVhZF9zZWxm
KCkpICE9IE5VTEwpOwoKICBhd29rZW4gPSAwOwoKICBmb3IgKGZpcnN0ID0g
MSwgbGFzdCA9IE5VTVRIUkVBRFMgLyAyOwogICAgICAgZmlyc3QgPCBOVU1U
SFJFQURTOwogICAgICAgZmlyc3QgPSBsYXN0ICsgMSwgbGFzdCA9IE5VTVRI
UkVBRFMpCiAgICB7CiAgICAgIGFzc2VydChwdGhyZWFkX211dGV4X2xvY2so
JnN0YXJ0X2ZsYWcpID09IDApOwoKICAgICAgZm9yIChpID0gZmlyc3Q7IGkg
PD0gbGFzdDsgaSsrKQoJewoJICB0aHJlYWRiYWdbaV0uc3RhcnRlZCA9IDA7
CgkgIHRocmVhZGJhZ1tpXS50aHJlYWRudW0gPSBpOwoJICBhc3NlcnQocHRo
cmVhZF9jcmVhdGUoJnRbaV0sIE5VTEwsIG15dGhyZWFkLCAodm9pZCAqKSAm
dGhyZWFkYmFnW2ldKSA9PSAwKTsKCSAgYXNzZXJ0KHB0aHJlYWRfZGV0YWNo
KHRbaV0pID09IDApOwoJfQoKICAgICAgLyoKICAgICAgICogQ29kZSB0byBj
b250cm9sIG9yIG11bmlwdWxhdGUgY2hpbGQgdGhyZWFkcyBzaG91bGQgcHJv
YmFibHkgZ28gaGVyZS4KICAgICAgICovCiAgICAgIGN2dGhpbmcuc2hhcmVk
ID0gMDsKCiAgICAgIGFzc2VydChwdGhyZWFkX211dGV4X3VubG9jaygmc3Rh
cnRfZmxhZykgPT0gMCk7CgogICAgICAvKgogICAgICAgKiBHaXZlIHRocmVh
ZHMgdGltZSB0byBzdGFydC4KICAgICAgICovCiAgICAgIFNsZWVwKDEwMDAp
OwoKICAgICAgYXNzZXJ0KHB0aHJlYWRfbXV0ZXhfbG9jaygmY3Z0aGluZy5s
b2NrKSA9PSAwKTsKCiAgICAgIGN2dGhpbmcuc2hhcmVkKys7CgogICAgICBh
c3NlcnQocHRocmVhZF9tdXRleF91bmxvY2soJmN2dGhpbmcubG9jaykgPT0g
MCk7CgogICAgICBhc3NlcnQocHRocmVhZF9jYW5jZWwodFsoZmlyc3QgKyBs
YXN0KSAvIDJdKSA9PSAwKTsKICAgICAgY2FuY2VsZWRUaHJlYWRzKys7Cgog
ICAgICBhc3NlcnQocHRocmVhZF9jb25kX2Jyb2FkY2FzdCgmY3Z0aGluZy5u
b3RidXN5KSA9PSAwKTsKCiAgICAgIC8qCiAgICAgICAqIEdpdmUgdGhyZWFk
cyB0aW1lIHRvIGNvbXBsZXRlLgogICAgICAgKi8KICAgICAgU2xlZXAoMTAw
MCk7CiAgICB9CgoKICAvKgogICAqIFN0YW5kYXJkIGNoZWNrIHRoYXQgYWxs
IHRocmVhZHMgc3RhcnRlZC4KICAgKi8KICBmb3IgKGkgPSAxOyBpIDw9IE5V
TVRIUkVBRFM7IGkrKykKICAgIHsgCiAgICAgIGZhaWxlZCA9ICF0aHJlYWRi
YWdbaV0uc3RhcnRlZDsKCiAgICAgIGlmIChmYWlsZWQpCgl7CgkgIGZwcmlu
dGYoc3RkZXJyLCAiVGhyZWFkICVkOiBzdGFydGVkICVkXG4iLCBpLCB0aHJl
YWRiYWdbaV0uc3RhcnRlZCk7Cgl9CiAgICB9CgogIC8qIAogICAqIENsZWFu
dXAgdGhlIENWLgogICAqLwogIAogIGFzc2VydChwdGhyZWFkX211dGV4X2Rl
c3Ryb3koJmN2dGhpbmcubG9jaykgPT0gMCk7CgogIGFzc2VydChjdnRoaW5n
LmxvY2sgPT0gTlVMTCk7CgogIGFzc2VydChwdGhyZWFkX2NvbmRfZGVzdHJv
eSgmY3Z0aGluZy5ub3RidXN5KSA9PSAwKTsKCiAgYXNzZXJ0KGN2dGhpbmcu
bm90YnVzeSA9PSBOVUxMKTsKCiAgYXNzZXJ0KCFmYWlsZWQpOwoKICAvKgog
ICAqIENoZWNrIGFueSByZXN1bHRzIGhlcmUuCiAgICovCgogIGFzc2VydChh
d29rZW4gPT0gTlVNVEhSRUFEUyAtIGNhbmNlbGVkVGhyZWFkcyk7CgogIC8q
CiAgICogU3VjY2Vzcy4KICAgKi8KICByZXR1cm4gMDsKfQo=

--5839514-18335-1043247879=:531
Content-Type: TEXT/PLAIN; NAME="condvar7.c"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0301221604391.531@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="condvar7.c"
Content-length: 5551

LyoKICogRmlsZTogY29uZHZhcjcuYwogKgogKgogKiBUZXN0IFN5bm9wc2lz
OgogKiAtIFRlc3QgcHRocmVhZF9jb25kX2Jyb2FkY2FzdCB3aXRoIHRocmVh
ZCBjYW5jZWxhdGlvbi4KICoKICogVGVzdCBNZXRob2QgKFZhbGlkYXRpb24g
b3IgRmFsc2lmaWNhdGlvbik6CiAqIC0gVmFsaWRhdGlvbgogKgogKiBSZXF1
aXJlbWVudHMgVGVzdGVkOgogKiAtIAogKgogKiBGZWF0dXJlcyBUZXN0ZWQ6
CiAqIC0gCiAqCiAqIENhc2VzIFRlc3RlZDoKICogLSAKICoKICogRGVzY3Jp
cHRpb246CiAqIC0gVGVzdCBicm9hZGNhc3Qgd2l0aCBOVU1USFJFQURTICg9
NSkgd2FpdGluZyBDVnMsIG9uZSBpcyBjYW5jZWxlZCB3aGlsZSB3YWl0aW5n
LgogKgogKiBFbnZpcm9ubWVudDoKICogLSAKICoKICogSW5wdXQ6CiAqIC0g
Tm9uZS4KICoKICogT3V0cHV0OgogKiAtIEZpbGUgbmFtZSwgTGluZSBudW1i
ZXIsIGFuZCBmYWlsZWQgZXhwcmVzc2lvbiBvbiBmYWlsdXJlLgogKiAtIE5v
IG91dHB1dCBvbiBzdWNjZXNzLgogKgogKiBBc3N1bXB0aW9uczoKICogLSAK
ICoKICogUGFzcyBDcml0ZXJpYToKICogLSBQcm9jZXNzIHJldHVybnMgemVy
byBleGl0IHN0YXR1cy4KICoKICogRmFpbCBDcml0ZXJpYToKICogLSBQcm9j
ZXNzIHJldHVybnMgbm9uLXplcm8gZXhpdCBzdGF0dXMuCiAqLwoKI2luY2x1
ZGUgInRlc3QuaCIKI2luY2x1ZGUgPHN5cy90aW1lYi5oPgoKLyoKICogQ3Jl
YXRlIE5VTVRIUkVBRFMgdGhyZWFkcyBpbiBhZGRpdGlvbiB0byB0aGUgTWFp
biB0aHJlYWQuCiAqLwplbnVtIHsKICBOVU1USFJFQURTID0gNQp9OwoKdHlw
ZWRlZiBzdHJ1Y3QgYmFnX3RfIGJhZ190OwpzdHJ1Y3QgYmFnX3RfIHsKICBp
bnQgdGhyZWFkbnVtOwogIGludCBzdGFydGVkOwogIC8qIEFkZCBtb3JlIHBl
ci10aHJlYWQgc3RhdGUgdmFyaWFibGVzIGhlcmUgKi8KfTsKCnN0YXRpYyBi
YWdfdCB0aHJlYWRiYWdbTlVNVEhSRUFEUyArIDFdOwoKdHlwZWRlZiBzdHJ1
Y3QgY3Z0aGluZ190XyBjdnRoaW5nX3Q7CgpzdHJ1Y3QgY3Z0aGluZ190XyB7
CiAgcHRocmVhZF9jb25kX3Qgbm90YnVzeTsKICBwdGhyZWFkX211dGV4X3Qg
bG9jazsKICBpbnQgc2hhcmVkOwp9OwoKc3RhdGljIGN2dGhpbmdfdCBjdnRo
aW5nID0gewogIFBUSFJFQURfQ09ORF9JTklUSUFMSVpFUiwKICBQVEhSRUFE
X01VVEVYX0lOSVRJQUxJWkVSLAogIDAKfTsKCnN0YXRpYyBwdGhyZWFkX211
dGV4X3Qgc3RhcnRfZmxhZyA9IFBUSFJFQURfTVVURVhfSU5JVElBTElaRVI7
CgpzdGF0aWMgc3RydWN0IHRpbWVzcGVjIGFic3RpbWUgPSB7IDAsIDAgfTsK
CnN0YXRpYyBpbnQgYXdva2VuOwoKdm9pZCAqCm15dGhyZWFkKHZvaWQgKiBh
cmcpCnsKICBiYWdfdCAqIGJhZyA9IChiYWdfdCAqKSBhcmc7CgogIGFzc2Vy
dChiYWcgPT0gJnRocmVhZGJhZ1tiYWctPnRocmVhZG51bV0pOwogIGFzc2Vy
dChiYWctPnN0YXJ0ZWQgPT0gMCk7CiAgYmFnLT5zdGFydGVkID0gMTsKCiAg
LyogV2FpdCBmb3IgdGhlIHN0YXJ0IGd1biAqLwogIGFzc2VydChwdGhyZWFk
X211dGV4X2xvY2soJnN0YXJ0X2ZsYWcpID09IDApOwogIGFzc2VydChwdGhy
ZWFkX211dGV4X3VubG9jaygmc3RhcnRfZmxhZykgPT0gMCk7CgogIGFzc2Vy
dChwdGhyZWFkX211dGV4X2xvY2soJmN2dGhpbmcubG9jaykgPT0gMCk7Cgoj
aWZkZWYgX01TQ19WRVIKI3ByYWdtYSBpbmxpbmVfZGVwdGgoMCkKI2VuZGlm
CiAgcHRocmVhZF9jbGVhbnVwX3B1c2gocHRocmVhZF9tdXRleF91bmxvY2ss
ICh2b2lkICopICZjdnRoaW5nLmxvY2spOwoKICB3aGlsZSAoISAoY3Z0aGlu
Zy5zaGFyZWQgPiAwKSkKICAgIGFzc2VydChwdGhyZWFkX2NvbmRfdGltZWR3
YWl0KCZjdnRoaW5nLm5vdGJ1c3ksICZjdnRoaW5nLmxvY2ssICZhYnN0aW1l
KSA9PSAwKTsKCiAgcHRocmVhZF9jbGVhbnVwX3BvcCgwKTsKI2lmZGVmIF9N
U0NfVkVSCiNwcmFnbWEgaW5saW5lX2RlcHRoKCkKI2VuZGlmCgogIGFzc2Vy
dChjdnRoaW5nLnNoYXJlZCA+IDApOwoKICBhd29rZW4rKzsKCiAgYXNzZXJ0
KHB0aHJlYWRfbXV0ZXhfdW5sb2NrKCZjdnRoaW5nLmxvY2spID09IDApOwoK
ICByZXR1cm4gKHZvaWQgKikgMDsKfQoKaW50Cm1haW4oKQp7CiAgaW50IGZh
aWxlZCA9IDA7CiAgaW50IGk7CiAgcHRocmVhZF90IHRbTlVNVEhSRUFEUyAr
IDFdOwogIHN0cnVjdCB0aW1lYiBjdXJyU3lzVGltZTsKICBjb25zdCBEV09S
RCBOQU5PU0VDX1BFUl9NSUxMSVNFQyA9IDEwMDAwMDA7CgogIGN2dGhpbmcu
c2hhcmVkID0gMDsKCiAgYXNzZXJ0KCh0WzBdID0gcHRocmVhZF9zZWxmKCkp
ICE9IE5VTEwpOwoKICBhc3NlcnQoY3Z0aGluZy5ub3RidXN5ID09IFBUSFJF
QURfQ09ORF9JTklUSUFMSVpFUik7CgogIGFzc2VydChjdnRoaW5nLmxvY2sg
PT0gUFRIUkVBRF9NVVRFWF9JTklUSUFMSVpFUik7CgogIGFzc2VydChwdGhy
ZWFkX211dGV4X2xvY2soJnN0YXJ0X2ZsYWcpID09IDApOwoKICAvKiBnZXQg
Y3VycmVudCBzeXN0ZW0gdGltZSAqLwogIGZ0aW1lKCZjdXJyU3lzVGltZSk7
CgogIGFic3RpbWUudHZfc2VjID0gY3VyclN5c1RpbWUudGltZTsKICBhYnN0
aW1lLnR2X25zZWMgPSBOQU5PU0VDX1BFUl9NSUxMSVNFQyAqIGN1cnJTeXNU
aW1lLm1pbGxpdG07CgogIGFic3RpbWUudHZfc2VjICs9IDEwOwoKICBhc3Nl
cnQoKHRbMF0gPSBwdGhyZWFkX3NlbGYoKSkgIT0gTlVMTCk7CgogIGF3b2tl
biA9IDA7CgogIGZvciAoaSA9IDE7IGkgPD0gTlVNVEhSRUFEUzsgaSsrKQog
ICAgewogICAgICB0aHJlYWRiYWdbaV0uc3RhcnRlZCA9IDA7CiAgICAgIHRo
cmVhZGJhZ1tpXS50aHJlYWRudW0gPSBpOwogICAgICBhc3NlcnQocHRocmVh
ZF9jcmVhdGUoJnRbaV0sIE5VTEwsIG15dGhyZWFkLCAodm9pZCAqKSAmdGhy
ZWFkYmFnW2ldKSA9PSAwKTsKICAgIH0KCiAgLyoKICAgKiBDb2RlIHRvIGNv
bnRyb2wgb3IgbXVuaXB1bGF0ZSBjaGlsZCB0aHJlYWRzIHNob3VsZCBwcm9i
YWJseSBnbyBoZXJlLgogICAqLwoKICBhc3NlcnQocHRocmVhZF9tdXRleF91
bmxvY2soJnN0YXJ0X2ZsYWcpID09IDApOwoKICAvKgogICAqIEdpdmUgdGhy
ZWFkcyB0aW1lIHRvIHN0YXJ0LgogICAqLwogIFNsZWVwKDEwMDApOwoKICBh
c3NlcnQocHRocmVhZF9tdXRleF9sb2NrKCZjdnRoaW5nLmxvY2spID09IDAp
OwoKICBjdnRoaW5nLnNoYXJlZCsrOwoKICBhc3NlcnQocHRocmVhZF9tdXRl
eF91bmxvY2soJmN2dGhpbmcubG9jaykgPT0gMCk7CgogIC8qCiAgICogQ2Fu
Y2VsIG9uZSBvZiB0aGUgdGhyZWFkcy4KICAgKi8KICBhc3NlcnQocHRocmVh
ZF9jYW5jZWwodFszXSkgPT0gMCk7CiAgU2xlZXAoNTAwKTsKCiAgLyoKICAg
KiBTaWduYWwgYWxsIHJlbWFpbmluZyB3YWl0aW5nIHRocmVhZHMuCiAgICov
CiAgYXNzZXJ0KHB0aHJlYWRfY29uZF9icm9hZGNhc3QoJmN2dGhpbmcubm90
YnVzeSkgPT0gMCk7CgogIC8qCiAgICogR2l2ZSB0aHJlYWRzIHRpbWUgdG8g
Y29tcGxldGUuCiAgICovCiAgU2xlZXAoMjAwMCk7CgogIC8qIAogICAqIENs
ZWFudXAgdGhlIENWLgogICAqLwogIAogIGFzc2VydChwdGhyZWFkX211dGV4
X2Rlc3Ryb3koJmN2dGhpbmcubG9jaykgPT0gMCk7CgogIGFzc2VydChjdnRo
aW5nLmxvY2sgPT0gTlVMTCk7CgogIGFzc2VydChwdGhyZWFkX2NvbmRfZGVz
dHJveSgmY3Z0aGluZy5ub3RidXN5KSA9PSAwKTsKCiAgYXNzZXJ0KGN2dGhp
bmcubm90YnVzeSA9PSBOVUxMKTsKCiAgLyoKICAgKiBTdGFuZGFyZCBjaGVj
ayB0aGF0IGFsbCB0aHJlYWRzIHN0YXJ0ZWQuCiAgICovCiAgZm9yIChpID0g
MTsgaSA8PSBOVU1USFJFQURTOyBpKyspCiAgICB7IAogICAgICBmYWlsZWQg
PSAhdGhyZWFkYmFnW2ldLnN0YXJ0ZWQ7CgogICAgICBpZiAoZmFpbGVkKQoJ
ewoJICBmcHJpbnRmKHN0ZGVyciwgIlRocmVhZCAlZDogc3RhcnRlZCAlZFxu
IiwgaSwgdGhyZWFkYmFnW2ldLnN0YXJ0ZWQpOwoJfQogICAgfQoKICBhc3Nl
cnQoIWZhaWxlZCk7CgogIC8qCiAgICogQ2hlY2sgYW55IHJlc3VsdHMgaGVy
ZS4KICAgKi8KCiAgYXNzZXJ0KGF3b2tlbiA9PSAoTlVNVEhSRUFEUyAtIDEp
KTsKCiAgLyoKICAgKiBTdWNjZXNzLgogICAqLwogIHJldHVybiAwOwp9Cg==

--5839514-18335-1043247879=:531
Content-Type: TEXT/PLAIN; NAME="pthread_cond.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0301231036490.189@algeria.intern.net>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_cond.patch"
Content-length: 22103

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2Mgc3Jj
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCi0tLSBzcmMub2xkL3dpbnN1cC9j
eWd3aW4vdGhyZWFkLmNjCTIwMDMtMDEtMjAgMTU6NTM6MzYuMDAwMDAwMDAw
ICswMTAwCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MJMjAwMy0w
MS0yMyAwOTozNDo1NC4wMDAwMDAwMDAgKzAxMDAKQEAgLTQ2MSw4ICs0NjEs
OCBAQCBvcGVuICgpCiAqcGF1c2UgKCkKIHBvbGwgKCkKIHByZWFkICgpCi1w
dGhyZWFkX2NvbmRfdGltZWR3YWl0ICgpCi1wdGhyZWFkX2NvbmRfd2FpdCAo
KQorKnB0aHJlYWRfY29uZF90aW1lZHdhaXQgKCkKKypwdGhyZWFkX2NvbmRf
d2FpdCAoKQogKnB0aHJlYWRfam9pbiAoKQogKnB0aHJlYWRfdGVzdGNhbmNl
bCAoKQogcHV0bXNnICgpCkBAIC04MTEsMzYgKzgxMSw1NSBAQCBwdGhyZWFk
X2NvbmQ6OmluaXRNdXRleCAoKQogICAgIGFwaV9mYXRhbCAoIkNvdWxkIG5v
dCBjcmVhdGUgd2luMzIgTXV0ZXggZm9yIHB0aHJlYWQgY29uZCBzdGF0aWMg
aW5pdGlhbGl6ZXIgc3VwcG9ydC4iKTsKIH0KIAotcHRocmVhZF9jb25kOjpw
dGhyZWFkX2NvbmQgKHB0aHJlYWRfY29uZGF0dHIgKmF0dHIpOnZlcmlmeWFi
bGVfb2JqZWN0IChQVEhSRUFEX0NPTkRfTUFHSUMpCitwdGhyZWFkX2NvbmQ6
OnB0aHJlYWRfY29uZCAocHRocmVhZF9jb25kYXR0ciAqYXR0cikgOgorICB2
ZXJpZnlhYmxlX29iamVjdCAoUFRIUkVBRF9DT05EX01BR0lDKSwKKyAgc2hh
cmVkICgwKSwgd2FpdGluZyAoMCksIHBlbmRpbmcgKDApLCBzZW1XYWl0IChO
VUxMKSwKKyAgc2VtSW4gKE5VTEwpLCBtdHhDb25kKE5VTEwpLCBuZXh0IChO
VUxMKQogewotICBpbnQgdGVtcGVycjsKLSAgdGhpcy0+c2hhcmVkID0gYXR0
ciA/IGF0dHItPnNoYXJlZCA6IFBUSFJFQURfUFJPQ0VTU19QUklWQVRFOwot
ICB0aGlzLT5tdXRleCA9IE5VTEw7Ci0gIHRoaXMtPndhaXRpbmcgPSAwOwot
Ci0gIHRoaXMtPndpbjMyX29ial9pZCA9IDo6Q3JlYXRlRXZlbnQgKCZzZWNf
bm9uZV9uaWgsIGZhbHNlLAkvKiBhdXRvIHNpZ25hbCByZXNldCAtIHdoaWNo
IEkgdGhpbmsgaXMgcHRocmVhZHMgbGlrZSA/ICovCi0JCQkJICAgICAgZmFs
c2UsCS8qIHN0YXJ0IG5vbiBzaWduYWxlZCAqLwotCQkJCSAgICAgIE5VTEwg
Lyogbm8gbmFtZSAqLyk7Ci0gIC8qIFRPRE86IG1ha2UgYSBzaGFyZWQgbWVt
IG11dGV4IGlmIG91dCBhdHRyaWJ1dGVzIHJlcXVlc3Qgc2hhcmVkIG1lbSBj
b25kICovCi0gIGNvbmRfYWNjZXNzID0gTlVMTDsKLSAgaWYgKCh0ZW1wZXJy
ID0gcHRocmVhZF9tdXRleF9pbml0ICgmdGhpcy0+Y29uZF9hY2Nlc3MsIE5V
TEwpKSkKKyAgcHRocmVhZF9tdXRleCAqdmVyaWZ5YWJsZV9tdXRleF9vYmog
PSAmbXR4T3V0OworCisgIGlmIChhdHRyKQorICAgIGlmIChhdHRyLT5zaGFy
ZWQgIT0gUFRIUkVBRF9QUk9DRVNTX1BSSVZBVEUpCisgICAgICB7CisgICAg
ICAgIG1hZ2ljID0gMDsKKyAgICAgICAgcmV0dXJuOworICAgICAgfQorCisg
IGlmICghcHRocmVhZF9tdXRleDo6aXNHb29kT2JqZWN0ICgmdmVyaWZ5YWJs
ZV9tdXRleF9vYmopKQogICAgIHsKLSAgICAgIHN5c3RlbV9wcmludGYgKCJj
b3VsZG4ndCBpbml0IG11dGV4LCB0aGlzICVwIGVycm5vICVkIiwgdGhpcywg
dGVtcGVycik7Ci0gICAgICAvKiB3ZSBuZWVkIHRoZSBtdXRleCBmb3IgY29y
cmVjdCBiZWhhdmlvdXIgKi8KKyAgICAgIHRocmVhZF9wcmludGYgKCJJbnRl
cm5hbCBjb25kIG11dGV4IGlzIG5vdCB2YWxpZC4gdGhpcyAlcCIsIHRoaXMp
OwogICAgICAgbWFnaWMgPSAwOworICAgICAgcmV0dXJuOworICAgIH0KKwor
ICBzZW1XYWl0ID0gOjpDcmVhdGVTZW1hcGhvcmUgKCZzZWNfbm9uZV9uaWgs
IDAsIExPTkdfTUFYLCBOVUxMKTsKKyAgaWYgKCFzZW1XYWl0KQorICAgIHsK
KyAgICAgIGRlYnVnX3ByaW50ZiAoIkNyZWF0ZVNlbWFwaG9yZSBmYWlsZWQu
ICVFIik7CisgICAgICBtYWdpYyA9IDA7CisgICAgICByZXR1cm47CisgICAg
fQorCisgIHNlbUluID0gOjpDcmVhdGVTZW1hcGhvcmUgKCZzZWNfbm9uZV9u
aWgsIDEsIDEsIE5VTEwpOworICBpZiAoIXNlbUluKQorICAgIHsKKyAgICAg
IGRlYnVnX3ByaW50ZiAoIkNyZWF0ZVNlbWFwaG9yZSBmYWlsZWQuICVFIik7
CisgICAgICBDbG9zZUhhbmRsZSAoc2VtV2FpdCk7CisgICAgICBtYWdpYyA9
IDA7CisgICAgICByZXR1cm47CiAgICAgfQogCi0gIGlmICghdGhpcy0+d2lu
MzJfb2JqX2lkKQotICAgIG1hZ2ljID0gMDsKICAgLyogdGhyZWFkc2FmZSBh
ZGRpdGlvbiBpcyBlYXN5ICovCiAgIG5leHQgPSAocHRocmVhZF9jb25kICop
IEludGVybG9ja2VkRXhjaGFuZ2VQb2ludGVyICgmTVRfSU5URVJGQUNFLT5j
b25kcywgdGhpcyk7CiB9CiAKIHB0aHJlYWRfY29uZDo6fnB0aHJlYWRfY29u
ZCAoKQogewotICBpZiAod2luMzJfb2JqX2lkKQotICAgIENsb3NlSGFuZGxl
ICh3aW4zMl9vYmpfaWQpOwotICBwdGhyZWFkX211dGV4X2Rlc3Ryb3kgKCZj
b25kX2FjY2Vzcyk7CisgIGlmIChzZW1XYWl0KQorICAgIENsb3NlSGFuZGxl
IChzZW1XYWl0KTsKKyAgaWYgKHNlbUluKQorICAgIENsb3NlSGFuZGxlIChz
ZW1Jbik7CisKICAgLyogSSdtIG5vdCAxMDAlIHN1cmUgdGhlIG5leHQgYml0
IGlzIHRocmVhZHNhZmUuIEkgdGhpbmsgaXQgaXMuLi4gKi8KICAgaWYgKE1U
X0lOVEVSRkFDRS0+Y29uZHMgPT0gdGhpcykKICAgICBJbnRlcmxvY2tlZEV4
Y2hhbmdlUG9pbnRlciAoJk1UX0lOVEVSRkFDRS0+Y29uZHMsIHRoaXMtPm5l
eHQpOwpAQCAtODU1LDEzMiArODc0LDEyNSBAQCBwdGhyZWFkX2NvbmQ6On5w
dGhyZWFkX2NvbmQgKCkKIH0KIAogdm9pZAotcHRocmVhZF9jb25kOjpCcm9h
ZENhc3QgKCkKK3B0aHJlYWRfY29uZDo6VW5CbG9jayAoY29uc3QgYm9vbCBh
bGwpCiB7Ci0gIC8qIFRPRE86IGltcGxlbWVudCB0aGUgc2FtZSByYWNlIGZp
eCBhcyBTaWduYWwgaGFzICovCi0gIGlmIChwdGhyZWFkX211dGV4X2xvY2sg
KCZjb25kX2FjY2VzcykpCi0gICAgc3lzdGVtX3ByaW50ZiAoIkZhaWxlZCB0
byBsb2NrIGNvbmRpdGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMg
JXAiLCB0aGlzKTsKLSAgaW50IGNvdW50ID0gd2FpdGluZzsKLSAgaWYgKCFw
dGhyZWFkX211dGV4Ojppc0dvb2RPYmplY3QgKCZtdXRleCkpCi0gICAgewot
ICAgICAgaWYgKHB0aHJlYWRfbXV0ZXhfdW5sb2NrICgmY29uZF9hY2Nlc3Mp
KQotCXN5c3RlbV9wcmludGYgKCJGYWlsZWQgdG8gdW5sb2NrIGNvbmRpdGlv
biB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgJXAiLCB0aGlzKTsKLSAg
ICAgIC8qIFRoaXMgaXNuJ3QgYW5kIEFQSSBlcnJvciAtIHVzZXJzIGFyZSBh
bGxvd2VkIHRvIGNhbGwgdGhpcyB3aGVuIG5vIHRocmVhZHMKLQkgYXJlIHdh
aXRpbmcKLQkgc3lzdGVtX3ByaW50ZiAoIkJyb2FkY2FzdCBjYWxsZWQgd2l0
aCBpbnZhbGlkIG11dGV4Iik7Ci0gICAgICAqLwotICAgICAgcmV0dXJuOwot
ICAgIH0KLSAgd2hpbGUgKGNvdW50LS0pCi0gICAgUHVsc2VFdmVudCAod2lu
MzJfb2JqX2lkKTsKLSAgaWYgKHB0aHJlYWRfbXV0ZXhfdW5sb2NrICgmY29u
ZF9hY2Nlc3MpKQotICAgIHN5c3RlbV9wcmludGYgKCJGYWlsZWQgdG8gdW5s
b2NrIGNvbmRpdGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgJXAi
LCB0aGlzKTsKLX0KKyAgdW5zaWduZWQgbG9uZyByZWxlYXNlYWJsZTsKIAot
dm9pZAotcHRocmVhZF9jb25kOjpTaWduYWwgKCkKLXsKLSAgaWYgKHB0aHJl
YWRfbXV0ZXhfbG9jayAoJmNvbmRfYWNjZXNzKSkKLSAgICBzeXN0ZW1fcHJp
bnRmICgiRmFpbGVkIHRvIGxvY2sgY29uZGl0aW9uIHZhcmlhYmxlIGFjY2Vz
cyBtdXRleCwgdGhpcyAlcCIsIHRoaXMpOwotICBpZiAoIXB0aHJlYWRfbXV0
ZXg6OmlzR29vZE9iamVjdCAoJm11dGV4KSkKLSAgICB7Ci0gICAgICBpZiAo
cHRocmVhZF9tdXRleF91bmxvY2sgKCZjb25kX2FjY2VzcykpCi0Jc3lzdGVt
X3ByaW50ZiAoIkZhaWxlZCB0byB1bmxvY2sgY29uZGl0aW9uIHZhcmlhYmxl
IGFjY2VzcyBtdXRleCwgdGhpcyAlcCIsCi0JCSAgICAgICB0aGlzKTsKLSAg
ICAgIHJldHVybjsKLSAgICB9Ci0gIGludCB0ZW1wID0gd2FpdGluZzsKLSAg
aWYgKCF0ZW1wKQotICAgIC8qIG5vdGhpbmcgdG8gc2lnbmFsICovCi0gICAg
ewotICAgICAgaWYgKHB0aHJlYWRfbXV0ZXhfdW5sb2NrICgmY29uZF9hY2Nl
c3MpKQotCXN5c3RlbV9wcmludGYgKCJGYWlsZWQgdG8gdW5sb2NrIGNvbmRp
dGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgJXAiLCB0aGlzKTsK
LSAgICAgIHJldHVybjsKLSAgICB9Ci0gIC8qIFByaW1lIHRoZSBkZXRlY3Rp
b24gZmxhZyAqLwotICBFeGl0aW5nV2FpdCA9IDE7Ci0gIC8qIFNpZ25hbCBh
bnkgd2FpdGluZyB0aHJlYWQgKi8KLSAgUHVsc2VFdmVudCAod2luMzJfb2Jq
X2lkKTsKLSAgLyogTm8gb25lIGNhbiBzdGFydCB3YWl0aW5nIHVudGlsIHdl
IHJlbGVhc2UgdGhlIGNvbmRpdGlvbiBhY2Nlc3MgbXV0ZXggKi8KLSAgLyog
VGhlIHJlbGVhc2VkIHRocmVhZCB3aWxsIGRlY3JlbWVudCB3YWl0aW5nIHdo
ZW4gaXQgZ2V0cyBhIHRpbWUgc2xpY2UuLi4KLSAgICAgd2l0aG91dCB3YWl0
aW5nIGZvciB0aGUgYWNjZXNzIG11dGV4Ci0gICAqIEludGVyTG9ja2VkSW5j
cmVtZW50IG9uIDk4ICssIE5UNCArIHJldHVybnMgdGhlIGluY3JlbWVudGVk
IHZhbHVlLgotICAgKiBPbiA5NSwgbnQgMy41MSA8IGl0IHJldHVybnMgYSBz
aWduIGNvcnJlY3QgbnVtYmVyIC0gMD0wLCArIGZvciBncmVhdGVyIHRoYW4g
MCwgLQotICAgKiBmb3IgbGVzcyB0aGFuIDAuCi0gICAqIEJlY2F1c2Ugb2Yg
dGhpcyB3ZSBjYW5ub3Qgc3BpbiBvbiB0aGUgd2FpdGluZyBjb3VudCwgYnV0
IHJhdGhlciB3ZSBuZWVkIGEKLSAgICogZGVkaWNhdGVkIGZsYWcgZm9yIGEg
dGhyZWFkIGV4aXRpbmcgdGhlIFdhaXQgZnVuY3Rpb24uCi0gICAqIEFsc28g
bm90IHRoYXQgSW50ZXJsb2NrZWQqIHN5bmMgQ1BVIGNhY2hlcyB3aXRoIG1l
bW9yeS4KKyAgLyogCisgICAqIEJsb2NrIG91dGdvaW5nIHRocmVhZHMgKGFu
ZCBhdm9pZCBzaW11bHRhbm91cyB1bmJsb2NrcykKICAgICovCi0gIGludCBz
cGlucyA9IDEwOwotICAvKiBXaGVuIEV4aXRpbmdXYWl0IGlzIG5vbnplcm8g
YWZ0ZXIgYSBkZWNyZW1lbnQsIHRoZSBsZWF2aW5nIHRocmVhZCBoYXMKLSAg
ICogZG9uZSBpdCdzIHRoaW5nCi0gICAqLwotICB3aGlsZSAoSW50ZXJsb2Nr
ZWREZWNyZW1lbnQgKCZFeGl0aW5nV2FpdCkgPT0gMCAmJiBzcGlucykKKyAg
bXR4T3V0LkxvY2sgKCk7CisKKyAgcmVsZWFzZWFibGUgPSB3YWl0aW5nIC0g
cGVuZGluZzsKKyAgaWYgKHJlbGVhc2VhYmxlKQogICAgIHsKLSAgICAgIElu
dGVybG9ja2VkSW5jcmVtZW50ICgmRXhpdGluZ1dhaXQpOwotICAgICAgLyog
Z2l2ZSB1cCB0aGUgY3B1IHRvIGZvcmNlIGEgY29udGV4dCBzd2l0Y2guICov
Ci0gICAgICBsb3dfcHJpb3JpdHlfc2xlZXAgKDApOwotICAgICAgaWYgKHNw
aW5zID09IDUpCi0JLyogd2UndmUgaGFkIDUgdGltZXNsaWNlcywgYW5kIHRo
ZSB3b2tlbiB0aHJlYWQgc3RpbGwgaGFzbid0IGRvbmUgaXQncwotCSAqIHRo
aW5nIC0gbWF5YmUgd2UgcmFjZWQgaXQgd2l0aCB0aGUgZXZlbnQ/ICovCi0J
UHVsc2VFdmVudCAod2luMzJfb2JqX2lkKTsKLSAgICAgIHNwaW5zLS07Cisg
ICAgICB1bnNpZ25lZCBsb25nIHJlbGVhc2VkOworCisgICAgICBpZiAoIXBl
bmRpbmcpCisgICAgICAgIHsKKyAgICAgICAgICAvKiAKKyAgICAgICAgICAg
KiBCbG9jayBpbmNvbWluZyB0aHJlYWRzIHVudGlsIGFsbCB3YWl0aW5nIHRo
cmVhZHMgYXJlIHJlbGVhc2VkLgorICAgICAgICAgICAqLworICAgICAgICAg
IFdhaXRGb3JTaW5nbGVPYmplY3QgKHNlbUluLCBJTkZJTklURSk7CisKKyAg
ICAgICAgICAvKiAKKyAgICAgICAgICAgKiBDYWxjdWxhdGUgcmVsZWFzZWFi
bGUgYWdhaW4gYmVjYXVzZSB0aHJlYWRzIGNhbiBlbnRlciB1bnRpbAorICAg
ICAgICAgICAqIHRoZSBzZW1hcGhvcmUgaGFzIGJlZW4gdGFrZW4sIGJ1dCB0
aGV5IGNhbiBub3QgbGVhdmUsIHRoZXJlZm9yZSBwZW5kaW5nCisgICAgICAg
ICAgICogaXMgdW5jaGFuZ2VkIGFuZCByZWxlYXNlYWJsZSBjYW4gb25seSBn
ZXQgaGlnaGVyCisgICAgICAgICAgICovCisgICAgICAgICAgcmVsZWFzZWFi
bGUgPSB3YWl0aW5nIC0gcGVuZGluZzsKKyAgICAgICAgfQorCisgICAgICBy
ZWxlYXNlZCA9IGFsbCA/IHJlbGVhc2VhYmxlIDogMTsKKyAgICAgIHBlbmRp
bmcgKz0gcmVsZWFzZWQ7CisgICAgICAvKgorICAgICAgICogU2lnbmFsIHRo
cmVhZHMKKyAgICAgICAqLworICAgICAgOjpSZWxlYXNlU2VtYXBob3JlIChz
ZW1XYWl0LCByZWxlYXNlZCwgTlVMTCk7CiAgICAgfQotICBpZiAod2FpdGlu
ZyArIDEgIT0gdGVtcCkKLSAgICBzeXN0ZW1fcHJpbnRmICgiUmVsZWFzZWQg
dG9vIG1hbnkgdGhyZWFkcyAtICVkIG5vdyAlZCBvcmlnaW5hbGx5Iiwgd2Fp
dGluZywgdGVtcCk7Ci0gIGlmIChwdGhyZWFkX211dGV4X3VubG9jayAoJmNv
bmRfYWNjZXNzKSkKLSAgICBzeXN0ZW1fcHJpbnRmICgiRmFpbGVkIHRvIHVu
bG9jayBjb25kaXRpb24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzICVw
IiwgdGhpcyk7CisKKyAgLyoKKyAgICogQW5kIGxldCB0aGUgdGhyZWFkcyBy
ZWxlYXNlLgorICAgKi8KKyAgbXR4T3V0LlVuTG9jayAoKTsKIH0KIAogaW50
Ci1wdGhyZWFkX2NvbmQ6OlRpbWVkV2FpdCAoRFdPUkQgZHdNaWxsaXNlY29u
ZHMpCitwdGhyZWFkX2NvbmQ6OldhaXQgKHB0aHJlYWRfbXV0ZXhfdCBtdXRl
eCwgRFdPUkQgZHdNaWxsaXNlY29uZHMpCiB7CiAgIERXT1JEIHJ2OwogCi0g
IC8vIEZJWE1FOiByYWNlIGNvbmRpdGlvbiAocG90ZW50aWFsbHkgZHJvcCBl
dmVudHMKLSAgLy8gUG9zc2libGUgc29sdXRpb24gKHNpbmdsZSBwcm9jZXNz
IG9ubHkpIC0gcGxhY2UgdGhpcyBpbiBhIGNyaXRpY2FsIHNlY3Rpb24uCi0g
IG11dGV4LT5VbkxvY2sgKCk7Ci0gIHJ2ID0gV2FpdEZvclNpbmdsZU9iamVj
dCAod2luMzJfb2JqX2lkLCBkd01pbGxpc2Vjb25kcyk7Ci0jaWYgMAotICAv
KiB3ZSBuZWVkIHRvIHVzZSBuYXRpdmUgd2luMzIgbXV0ZXgncyBoZXJlLCBi
ZWNhdXNlIHRoZSBjeWd3aW4gb25lcyBub3cgdXNlCi0gICAqIGNyaXRpY2Fs
IHNlY3Rpb25zLCB3aGljaCBhcmUgZmFzdGVyLCBidXQgaW50cm9kdWNlIGEg
cmFjZSBfaGVyZV8uIFVudGlsIHRoZW4KLSAgICogVGhlIE5UIHZhcmlhbnQg
b2YgdGhlIGNvZGUgaXMgcmVkdW5kYW50LgotICAgKi8KLQotICBydiA9IFNp
Z25hbE9iamVjdEFuZFdhaXQgKG11dGV4LT53aW4zMl9vYmpfaWQsIHdpbjMy
X29ial9pZCwgZHdNaWxsaXNlY29uZHMsCi0JCQkgICAgZmFsc2UpOwotI2Vu
ZGlmCi0gIHN3aXRjaCAocnYpCisgIFdhaXRGb3JTaW5nbGVPYmplY3QgKHNl
bUluLCBJTkZJTklURSk7CisgIGlmICgxID09IEludGVybG9ja2VkSW5jcmVt
ZW50ICgobG9uZyAqKSZ3YWl0aW5nKSkKKyAgICBtdHhDb25kID0gbXV0ZXg7
CisgIGVsc2UgaWYgKG10eENvbmQgIT0gbXV0ZXgpCiAgICAgewotICAgIGNh
c2UgV0FJVF9GQUlMRUQ6Ci0gICAgICByZXR1cm4gMDsJCQkvKiBQT1NJWCBk
b2Vzbid0IGFsbG93IGVycm9ycyBhZnRlciB3ZSBtb2RpZnkgdGhlIG11dGV4
IHN0YXRlICovCi0gICAgY2FzZSBXQUlUX0FCQU5ET05FRDoKLSAgICBjYXNl
IFdBSVRfVElNRU9VVDoKLSAgICAgIHJldHVybiBFVElNRURPVVQ7Ci0gICAg
Y2FzZSBXQUlUX09CSkVDVF8wOgotICAgICAgcmV0dXJuIDA7CQkJLyogd2Ug
aGF2ZSBiZWVuIHNpZ25hbGVkICovCi0gICAgZGVmYXVsdDoKLSAgICAgIHJl
dHVybiAwOworICAgICAgSW50ZXJsb2NrZWREZWNyZW1lbnQgKChsb25nICop
JndhaXRpbmcpOworICAgICAgOjpSZWxlYXNlU2VtYXBob3JlIChzZW1Jbiwg
MSwgTlVMTCk7CisgICAgICByZXR1cm4gRUlOVkFMOwogICAgIH0KKyAgOjpS
ZWxlYXNlU2VtYXBob3JlIChzZW1JbiwgMSwgTlVMTCk7CisKKyAgLyoKKyAg
ICogUmVsZWFzZSB0aGUgbXV0ZXggYW5kIHdhaXQgZm9yIHNlbWFwaG9yZQor
ICAgKi8KKyAgKyttdXRleC0+Y29uZHdhaXRzOworICBtdXRleC0+VW5Mb2Nr
ICgpOworCisgIHJ2ID0gcHRocmVhZDo6Y2FuY2VsYWJsZV93YWl0IChzZW1X
YWl0LCBkd01pbGxpc2Vjb25kcywgZmFsc2UpOworCisgIG10eE91dC5Mb2Nr
ICgpOworICAKKyAgaWYgKHJ2ICE9IFdBSVRfT0JKRUNUXzApCisgICAgewor
ICAgICAgLyoKKyAgICAgICAqIEl0IG1pZ2h0IGhhcHBlbiB0aGF0IGEgc2ln
bmFsIGlzIHNlbnQgd2hpbGUgdGhlIHRocmVhZCBnb3QgY2FuY2VsZWQKKyAg
ICAgICAqIG9yIHRpbWVkIG91dC4gVHJ5IHRvIHRha2Ugb25lLgorICAgICAg
ICogSWYgdGhlIHRocmVhZCBnZXRzIG9uZSB0aGFuIGEgc2lnbmFsfGJyb2Fk
Y2FzdCBpcyBpbiBwcm9ncmVzcy4KKyAgICAgICAqLyAKKyAgICAgIGlmIChX
QUlUX09CSkVDVF8wID09IFdhaXRGb3JTaW5nbGVPYmplY3QgKHNlbVdhaXQs
IDApKQorICAgICAgICAvKgorICAgICAgICAgKiB0aHJlYWQgZ290IGNhbmNl
bGxlZCBvdCB0aW1lZCBvdXQgd2hpbGUgYSBzaWduYWxsaW5nIGlzIGluIHBy
b2dyZXNzLgorICAgICAgICAgKiBTZXQgd2FpdCByZXN1bHQgYmFjayB0byBz
aWduYWxlZAorICAgICAgICAgKi8KKyAgICAgICAgcnYgPSBXQUlUX09CSkVD
VF8wOworICAgIH0KKworICBJbnRlcmxvY2tlZERlY3JlbWVudCAoKGxvbmcg
Kikmd2FpdGluZyk7CisKKyAgaWYgKHJ2ID09IFdBSVRfT0JKRUNUXzAgJiYg
MCA9PSAtLXBlbmRpbmcpCisgICAgLyoKKyAgICAgKiBBbGwgc2lnbmFsZWQg
dGhyZWFkcyBhcmUgcmVsZWFzZWQsCisgICAgICogbmV3IHRocmVhZHMgY2Fu
IGVudGVyIFdhaXQKKyAgICAgKi8KKyAgICA6OlJlbGVhc2VTZW1hcGhvcmUg
KHNlbUluLCAxLCBOVUxMKTsKKworICBtdHhPdXQuVW5Mb2NrICgpOworIAor
ICBtdXRleC0+TG9jayAoKTsKKyAgLS1tdXRleC0+Y29uZHdhaXRzOworCisg
IGlmIChydiA9PSBXQUlUX0NBTkNFTEVEKQorICAgIHB0aHJlYWQ6OnN0YXRp
Y19jYW5jZWxfc2VsZiAoKTsKKyAgZWxzZSBpZiAocnYgPT0gV0FJVF9USU1F
T1VUKQorICAgIHJldHVybiBFVElNRURPVVQ7CisKKyAgcmV0dXJuIDA7CiB9
CiAKIHZvaWQKIHB0aHJlYWRfY29uZDo6Zml4dXBfYWZ0ZXJfZm9yayAoKQog
ewotICBkZWJ1Z19wcmludGYgKCJjb25kICV4IGluIGZpeHVwX2FmdGVyX2Zv
cmsiLCB0aGlzKTsKLSAgaWYgKHNoYXJlZCAhPSBQVEhSRUFEX1BST0NFU1Nf
UFJJVkFURSkKLSAgICBhcGlfZmF0YWwgKCJkb2Vzbid0IHVuZGVyc3RhbmQg
UFJPQ0VTU19TSEFSRUQgY29uZGl0aW9uIHZhcmlhYmxlcyIpOwotICAvKiBG
SVhNRTogZHVwbGljYXRlIGNvZGUgaGVyZSBhbmQgaW4gdGhlIGNvbnN0cnVj
dG9yLiAqLwotICB0aGlzLT53aW4zMl9vYmpfaWQgPSA6OkNyZWF0ZUV2ZW50
ICgmc2VjX25vbmVfbmloLCBmYWxzZSwgZmFsc2UsIE5VTEwpOwotICBpZiAo
IXdpbjMyX29ial9pZCkKLSAgICBhcGlfZmF0YWwgKCJmYWlsZWQgdG8gY3Jl
YXRlIG5ldyB3aW4zMiBtdXRleCIpOwotI2lmIERFVEVDVF9CQURfQVBQUwot
ICBpZiAod2FpdGluZykKLSAgICBhcGlfZmF0YWwgKCJGb3JrZWQgKCkgd2hp
bGUgYSBjb25kaXRpb24gdmFyaWFibGUgaGFzIHdhaXRpbmcgdGhyZWFkcy5c
blJlcG9ydCB0byBjeWd3aW5AY3lnd2luLmNvbSIpOwotI2Vsc2UKLSAgd2Fp
dGluZyA9IDA7Ci0gIG11dGV4ID0gTlVMTDsKLSNlbmRpZgorICB3YWl0aW5n
ID0gcGVuZGluZyA9IDA7CisgIG10eENvbmQgPSBOVUxMOworCisgIHNlbVdh
aXQgPSA6OkNyZWF0ZVNlbWFwaG9yZSAoJnNlY19ub25lX25paCwgMCwgTE9O
R19NQVgsIE5VTEwpOworICBpZiAoIXNlbVdhaXQpCisgICAgYXBpX2ZhdGFs
ICgicHRocmVhZF9jb25kOjpmaXh1cF9hZnRlcl9mb3JrICgpIGZhaWxlZCB0
byByZWNyZWF0ZSB3aW4zMiBzZW1hcGhvcmUiKTsKKworICBzZW1JbiA9IDo6
Q3JlYXRlU2VtYXBob3JlICgmc2VjX25vbmVfbmloLCAxLCAxLCBOVUxMKTsK
KyAgaWYgKCFzZW1JbikKKyAgICBhcGlfZmF0YWwgKCJwdGhyZWFkX2NvbmQ6
OmZpeHVwX2FmdGVyX2ZvcmsgKCkgZmFpbGVkIHRvIHJlY3JlYXRlIHdpbjMy
IHNlbWFwaG9yZSIpOwogfQogCiAvKiBwdGhyZWFkX2tleSAqLwpAQCAtMTE1
Nyw2ICsxMTY5LDIwIEBAIHB0aHJlYWRfbXV0ZXg6OmlzR29vZEluaXRpYWxp
emVyT3JCYWRPYmoKICAgcmV0dXJuIHRydWU7CiB9CiAKK2Jvb2wKK3B0aHJl
YWRfbXV0ZXg6OmNhbkJlVW5sb2NrZWQgKHB0aHJlYWRfbXV0ZXhfdCBjb25z
dCAqbXV0ZXgpCit7CisgIHB0aHJlYWRfdCBzZWxmID0gcHRocmVhZDo6c2Vs
ZiAoKTsKKworICBpZiAoIWlzR29vZE9iamVjdCAobXV0ZXgpKQorICAgIHJl
dHVybiBmYWxzZTsKKyAgLyoKKyAgICogQ2hlY2sgaWYgdGhlIG11dGV4IGlz
IG93bmVkIGJ5IHRoZSBjdXJyZW50IHRocmVhZCBhbmQgY2FuIGJlIHVubG9j
a2VkCisgICAqLworICByZXR1cm4gX19wdGhyZWFkX2VxdWFsICgmKCptdXRl
eCktPm93bmVyLCAmc2VsZikgJiYKKyAgICAxID09ICgqbXV0ZXgpLT5yZWN1
cnNpb25fY291bnRlcjsKK30KKwogLyogVGhpcyBpcyB1c2VkIGZvciBtdXRl
eCBjcmVhdGlvbiBwcm90ZWN0aW9uIHdpdGhpbiBhIHNpbmdsZSBwcm9jZXNz
IG9ubHkgKi8KIG5hdGl2ZU11dGV4IE5PX0NPUFkgcHRocmVhZF9tdXRleDo6
bXV0ZXhJbml0aWFsaXphdGlvbkxvY2s7CiAKQEAgLTEzMzMsMTIgKzEzNTks
NyBAQCBwdGhyZWFkX211dGV4OjpmaXh1cF9hZnRlcl9mb3JrICgpCiAgIGlm
ICghd2luMzJfb2JqX2lkKQogICAgIGFwaV9mYXRhbCAoInB0aHJlYWRfbXV0
ZXg6OmZpeHVwX2FmdGVyX2ZvcmsgKCkgZmFpbGVkIHRvIHJlY3JlYXRlIHdp
bjMyIHNlbWFwaG9yZSBmb3IgbXV0ZXgiKTsKIAotI2lmIERFVEVDVF9CQURf
QVBQUwotICBpZiAoY29uZHdhaXRzKQotICAgIGFwaV9mYXRhbCAoIkZvcmtl
ZCAoKSB3aGlsZSBhIG11dGV4IGhhcyBjb25kaXRpb24gdmFyaWFibGVzIHdh
aXRpbmcgb24gaXQuXG5SZXBvcnQgdG8gY3lnd2luQGN5Z3dpbi5jb20iKTsK
LSNlbHNlCiAgIGNvbmR3YWl0cyA9IDA7Ci0jZW5kaWYKIH0KIAogYm9vbApA
QCAtMjE3NiwxMSArMjE5NywxMSBAQCBpbnQKIF9fcHRocmVhZF9jb25kX2Jy
b2FkY2FzdCAocHRocmVhZF9jb25kX3QgKmNvbmQpCiB7CiAgIGlmIChwdGhy
ZWFkX2NvbmQ6OmlzR29vZEluaXRpYWxpemVyIChjb25kKSkKLSAgICBwdGhy
ZWFkX2NvbmQ6OmluaXQgKGNvbmQsIE5VTEwpOworICAgIHJldHVybiAwOwog
ICBpZiAoIXB0aHJlYWRfY29uZDo6aXNHb29kT2JqZWN0IChjb25kKSkKICAg
ICByZXR1cm4gRUlOVkFMOwogCi0gICgqY29uZCktPkJyb2FkQ2FzdCAoKTsK
KyAgKCpjb25kKS0+VW5CbG9jayAodHJ1ZSk7CiAKICAgcmV0dXJuIDA7CiB9
CkBAIC0yMTg5LDcwICsyMjEwLDMwIEBAIGludAogX19wdGhyZWFkX2NvbmRf
c2lnbmFsIChwdGhyZWFkX2NvbmRfdCAqY29uZCkKIHsKICAgaWYgKHB0aHJl
YWRfY29uZDo6aXNHb29kSW5pdGlhbGl6ZXIgKGNvbmQpKQotICAgIHB0aHJl
YWRfY29uZDo6aW5pdCAoY29uZCwgTlVMTCk7CisgICAgcmV0dXJuIDA7CiAg
IGlmICghcHRocmVhZF9jb25kOjppc0dvb2RPYmplY3QgKGNvbmQpKQogICAg
IHJldHVybiBFSU5WQUw7CiAKLSAgKCpjb25kKS0+U2lnbmFsICgpOworICAo
KmNvbmQpLT5VbkJsb2NrIChmYWxzZSk7CiAKICAgcmV0dXJuIDA7CiB9CiAK
LWludAorc3RhdGljIGludAogX19wdGhyZWFkX2NvbmRfZG93YWl0IChwdGhy
ZWFkX2NvbmRfdCAqY29uZCwgcHRocmVhZF9tdXRleF90ICptdXRleCwKLQkJ
ICAgICAgIGxvbmcgd2FpdGxlbmd0aCkKKwkJICAgICAgIERXT1JEIHdhaXRs
ZW5ndGgpCiB7Ci0vLyBhbmQgeWVzIGNvbmRfYWNjZXNzIGhlcmUgaXMgc3Rp
bGwgb3BlbiB0byBhIHJhY2UuICh3ZSBpbmNyZW1lbnQsIGNvbnRleHQgc3dh
cCwKLS8vIGJyb2FkY2FzdCBvY2N1cnMgLSAgd2UgbWlzcyB0aGUgYnJvYWRj
YXN0LiB0aGUgZnVuY3Rpb25zIGFyZW4ndCBzcGxpdCBwcm9wZXJseS4KLSAg
aW50IHJ2OwotICBwdGhyZWFkX211dGV4ICoqdGhlbXV0ZXggPSBOVUxMOwot
ICBpZiAocHRocmVhZF9tdXRleDo6aXNHb29kSW5pdGlhbGl6ZXIgKG11dGV4
KSkKLSAgICBwdGhyZWFkX211dGV4Ojppbml0IChtdXRleCwgTlVMTCk7Ci0g
IHRoZW11dGV4ID0gbXV0ZXg7CisgIGlmICghcHRocmVhZF9tdXRleDo6aXNH
b29kT2JqZWN0IChtdXRleCkpCisgICAgcmV0dXJuIEVJTlZBTDsKKyAgaWYg
KCFwdGhyZWFkX211dGV4OjpjYW5CZVVubG9ja2VkIChtdXRleCkpCisgICAg
cmV0dXJuIEVQRVJNOworCiAgIGlmIChwdGhyZWFkX2NvbmQ6OmlzR29vZElu
aXRpYWxpemVyIChjb25kKSkKICAgICBwdGhyZWFkX2NvbmQ6OmluaXQgKGNv
bmQsIE5VTEwpOwotCi0gIGlmICghcHRocmVhZF9tdXRleDo6aXNHb29kT2Jq
ZWN0ICh0aGVtdXRleCkpCi0gICAgcmV0dXJuIEVJTlZBTDsKICAgaWYgKCFw
dGhyZWFkX2NvbmQ6OmlzR29vZE9iamVjdCAoY29uZCkpCiAgICAgcmV0dXJu
IEVJTlZBTDsKIAotICAvKiBpZiB0aGUgY29uZCB2YXJpYWJsZSBpcyBibG9j
a2VkLCB0aGVuIHRoZSBhYm92ZSB0aW1lciB0ZXN0IG1heWJlIHdyb25nLiAq
c2hydWcqKi8KLSAgaWYgKHB0aHJlYWRfbXV0ZXhfbG9jayAoJigqY29uZCkt
PmNvbmRfYWNjZXNzKSkKLSAgICBzeXN0ZW1fcHJpbnRmICgiRmFpbGVkIHRv
IGxvY2sgY29uZGl0aW9uIHZhcmlhYmxlIGFjY2VzcyBtdXRleCwgdGhpcyAl
cCIsICpjb25kKTsKLQotICBpZiAoKCpjb25kKS0+d2FpdGluZykKLSAgICBp
ZiAoKCpjb25kKS0+bXV0ZXggJiYgKCgqY29uZCktPm11dGV4ICE9ICgqdGhl
bXV0ZXgpKSkKLSAgICAgIHsKLQlpZiAocHRocmVhZF9tdXRleF91bmxvY2sg
KCYoKmNvbmQpLT5jb25kX2FjY2VzcykpCi0JICBzeXN0ZW1fcHJpbnRmICgi
RmFpbGVkIHRvIHVubG9jayBjb25kaXRpb24gdmFyaWFibGUgYWNjZXNzIG11
dGV4LCB0aGlzICVwIiwgKmNvbmQpOwotCXJldHVybiBFSU5WQUw7Ci0gICAg
ICB9Ci0gIEludGVybG9ja2VkSW5jcmVtZW50ICgmKCgqY29uZCktPndhaXRp
bmcpKTsKLQotICAoKmNvbmQpLT5tdXRleCA9ICgqdGhlbXV0ZXgpOwotICBJ
bnRlcmxvY2tlZEluY3JlbWVudCAoJigoKnRoZW11dGV4KS0+Y29uZHdhaXRz
KSk7Ci0gIGlmIChwdGhyZWFkX211dGV4X3VubG9jayAoJigqY29uZCktPmNv
bmRfYWNjZXNzKSkKLSAgICBzeXN0ZW1fcHJpbnRmICgiRmFpbGVkIHRvIHVu
bG9jayBjb25kaXRpb24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzICVw
IiwgKmNvbmQpOwotICAvKiBBdCB0aGlzIHBvaW50IGNhbGxzIHRvIFNpZ25h
bCB3aWxsIHByb2dyZXNzIGV2ZWJuIGlmIHdlIGFyZW4nIHlldCB3YWl0aW5n
Ci0gICAgIEhvd2V2ZXIsIHRoZSBsb29wIHRoZXJlIHNob3VsZCBhbGxvdyB1
cyB0byBnZXQgc2NoZWR1bGVkIGFuZCBjYWxsIHdhaXQsCi0gICAgIGFuZCBo
YXZlIHRoZW0gY2FsbCBQdWxzZUV2ZW50IGFnYWluIGlmIHdlIGRvbnQnIHJl
c3BvbmQuICAqLwotICBydiA9ICgqY29uZCktPlRpbWVkV2FpdCAod2FpdGxl
bmd0aCk7Ci0gIC8qIHRoaXMgbWF5IGFsbG93IGEgcmFjZSBvbiB0aGUgbXV0
ZXggYWNxdWlzaXRpb24gYW5kIHdhaXRzLgotICAgICBCdXQgZG9pbmcgdGhp
cyB3aXRoaW4gdGhlIGNvbmQgYWNjZXNzIG11dGV4IGNyZWF0ZXMgYSBkaWZm
ZXJlbnQgcmFjZSAqLwotICBJbnRlcmxvY2tlZERlY3JlbWVudCAoJigoKmNv
bmQpLT53YWl0aW5nKSk7Ci0gIC8qIFRlbGwgU2lnbmFsIHRoYXQgd2UgaGF2
ZSBiZWVuIHJlbGVhc2VkICovCi0gIEludGVybG9ja2VkRGVjcmVtZW50ICgm
KCgqY29uZCktPkV4aXRpbmdXYWl0KSk7Ci0gICgqdGhlbXV0ZXgpLT5Mb2Nr
ICgpOwotICBpZiAocHRocmVhZF9tdXRleF9sb2NrICgmKCpjb25kKS0+Y29u
ZF9hY2Nlc3MpKQotICAgIHN5c3RlbV9wcmludGYgKCJGYWlsZWQgdG8gbG9j
ayBjb25kaXRpb24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzICVwIiwg
KmNvbmQpOwotICBpZiAoKCpjb25kKS0+d2FpdGluZyA9PSAwKQotICAgICgq
Y29uZCktPm11dGV4ID0gTlVMTDsKLSAgSW50ZXJsb2NrZWREZWNyZW1lbnQg
KCYoKCp0aGVtdXRleCktPmNvbmR3YWl0cykpOwotICBpZiAocHRocmVhZF9t
dXRleF91bmxvY2sgKCYoKmNvbmQpLT5jb25kX2FjY2VzcykpCi0gICAgc3lz
dGVtX3ByaW50ZiAoIkZhaWxlZCB0byB1bmxvY2sgY29uZGl0aW9uIHZhcmlh
YmxlIGFjY2VzcyBtdXRleCwgdGhpcyAlcCIsICpjb25kKTsKLQotICByZXR1
cm4gcnY7CisgIHJldHVybiAoKmNvbmQpLT5XYWl0ICgqbXV0ZXgsIHdhaXRs
ZW5ndGgpOwogfQogCiBleHRlcm4gIkMiIGludApAQCAtMjI2MSwxMCArMjI0
MiwxMiBAQCBwdGhyZWFkX2NvbmRfdGltZWR3YWl0IChwdGhyZWFkX2NvbmRf
dCAqCiB7CiAgIGlmIChjaGVja192YWxpZF9wb2ludGVyIChhYnN0aW1lKSkK
ICAgICByZXR1cm4gRUlOVkFMOwotICBzdHJ1Y3QgdGltZWIgY3VyclN5c1Rp
bWU7CisgIHN0cnVjdCB0aW1ldmFsIHR2OworICBzdHJ1Y3QgdGltZXpvbmUg
dHo7CiAgIGxvbmcgd2FpdGxlbmd0aDsKLSAgZnRpbWUgKCZjdXJyU3lzVGlt
ZSk7Ci0gIHdhaXRsZW5ndGggPSAoYWJzdGltZS0+dHZfc2VjIC0gY3VyclN5
c1RpbWUudGltZSkgKiAxMDAwOworICBnZXR0aW1lb2ZkYXkgKCZ0diwgJnR6
KTsKKyAgd2FpdGxlbmd0aCA9IGFic3RpbWUtPnR2X3NlYyAqIDEwMDAgKyBh
YnN0aW1lLT50dl9uc2VjIC8gKDEwMDAgKiAxMDAwKTsKKyAgd2FpdGxlbmd0
aCAtPSB0di50dl9zZWMgKiAxMDAwICsgdHYudHZfdXNlYyAvIDEwMDA7CiAg
IGlmICh3YWl0bGVuZ3RoIDwgMCkKICAgICByZXR1cm4gRVRJTUVET1VUOwog
ICByZXR1cm4gX19wdGhyZWFkX2NvbmRfZG93YWl0IChjb25kLCBtdXRleCwg
d2FpdGxlbmd0aCk7CmRpZmYgLXVycCBzcmMub2xkL3dpbnN1cC9jeWd3aW4v
dGhyZWFkLmggc3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmgKLS0tIHNyYy5v
bGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuaAkyMDAzLTAxLTIwIDE1OjUzOjE4
LjAwMDAwMDAwMCArMDEwMAorKysgc3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFk
LmgJMjAwMy0wMS0yMiAxNjoyMzo0My4wMDAwMDAwMDAgKzAxMDAKQEAgLTMw
NCw2ICszMDQsNyBAQCBwdWJsaWM6CiAgIHN0YXRpYyBib29sIGlzR29vZElu
aXRpYWxpemVyIChwdGhyZWFkX211dGV4X3QgY29uc3QgKik7CiAgIHN0YXRp
YyBib29sIGlzR29vZEluaXRpYWxpemVyT3JPYmplY3QgKHB0aHJlYWRfbXV0
ZXhfdCBjb25zdCAqKTsKICAgc3RhdGljIGJvb2wgaXNHb29kSW5pdGlhbGl6
ZXJPckJhZE9iamVjdCAocHRocmVhZF9tdXRleF90IGNvbnN0ICptdXRleCk7
CisgIHN0YXRpYyBib29sIGNhbkJlVW5sb2NrZWQgKHB0aHJlYWRfbXV0ZXhf
dCBjb25zdCAqbXV0ZXgpOwogICBzdGF0aWMgdm9pZCBpbml0TXV0ZXggKCk7
CiAgIHN0YXRpYyBpbnQgaW5pdCAocHRocmVhZF9tdXRleF90ICosIGNvbnN0
IHB0aHJlYWRfbXV0ZXhhdHRyX3QgKik7CiAKQEAgLTQ1NSwxNiArNDU2LDE4
IEBAIHB1YmxpYzoKICAgc3RhdGljIGludCBpbml0IChwdGhyZWFkX2NvbmRf
dCAqLCBjb25zdCBwdGhyZWFkX2NvbmRhdHRyX3QgKik7CiAKICAgaW50IHNo
YXJlZDsKLSAgTE9ORyB3YWl0aW5nOwotICBMT05HIEV4aXRpbmdXYWl0Owot
ICBwdGhyZWFkX211dGV4ICptdXRleDsKLSAgLyogdG8gYWxsb3cgYXRvbWlj
IGJlaGF2aW91ciBmb3IgY29uZF9icm9hZGNhc3QgKi8KLSAgcHRocmVhZF9t
dXRleF90IGNvbmRfYWNjZXNzOwotICBIQU5ETEUgd2luMzJfb2JqX2lkOwor
CisgIHVuc2lnbmVkIGxvbmcgd2FpdGluZzsKKyAgdW5zaWduZWQgbG9uZyBw
ZW5kaW5nOworICBIQU5ETEUgc2VtV2FpdDsKKyAgSEFORExFIHNlbUluOwor
ICBwdGhyZWFkX211dGV4IG10eE91dDsKKyAgcHRocmVhZF9tdXRleF90IG10
eENvbmQ7CisKICAgY2xhc3MgcHRocmVhZF9jb25kICogbmV4dDsKLSAgaW50
IFRpbWVkV2FpdCAoRFdPUkQgZHdNaWxsaXNlY29uZHMpOwotICB2b2lkIEJy
b2FkQ2FzdCAoKTsKLSAgdm9pZCBTaWduYWwgKCk7CisKKyAgdm9pZCBVbkJs
b2NrIChjb25zdCBib29sIGFsbCk7CisgIGludCBXYWl0IChwdGhyZWFkX211
dGV4X3QgbXV0ZXgsIERXT1JEIGR3TWlsbGlzZWNvbmRzKTsKICAgdm9pZCBm
aXh1cF9hZnRlcl9mb3JrICgpOwogCiAgIHB0aHJlYWRfY29uZCAocHRocmVh
ZF9jb25kYXR0ciAqKTsK

--5839514-18335-1043247879=:531--
