From: "Robert Collins" <robert.collins@itdomain.com.au>
To: <cygwin-patches@cygwin.com>
Subject: win95 and pshared mutex support for pthreads
Date: Thu, 19 Apr 2001 03:38:00 -0000
Message-id: <00d001c0c8bc$d9f12400$0200a8c0@lifelesswks>
X-SW-Source: 2001-q2/msg00118.html
Content-type: multipart/mixed; boundary="----------=_1583532847-65438-48"

This is a multi-part message in MIME format...

------------=_1583532847-65438-48
Content-length: 1544

The code is a little ugly, but it still passes all my testcases.

The ABI HAS NOT CHANGED. It may have to support pshared condition
variables properly, but I wanted to get the win95 support submitted.

Rob

Thu Apr 19 20:22:00 2001  Robert Collins <rbtcollins@hotmail.com>

 * password.cc (getpwuid): Check for thread cancellation.
 (getpwuid_r): Ditto.
 (getpwname): Ditto.
 (getpwnam_r): Ditto.
 * thread.h (pthread_mutex): New constructors for pshared operation.
 (MTinterface): Associative array for pshared mutex's.
 * thread.cc (MTinterface::Init): Initailize pshared mutex array.
 (pthread_cond::BroadCast): Implementation notes.
 (pthread_cond::TimedWait): Remove use of SignalObjectAndWait on non-NT
systems.
 (pthread_mutex::pthread_mutex(unsigned short)): New function.
 (pthread_mutex::pthread_mutex (pthread_mutex_t *, pthread_mutexattr
*)):New function.
 (pthread_mutex::pthread_mutex(pthread_mutexattr *)): Fail on pshared
mutex's.
 (__pthread_mutex_getpshared): New function.
 (__pthread_join): Check for thread cancellation.
 (__pthread_cond_timedwait): Support pshared mutex's.
 (__pthread_cond_wait): Ditto.
 (__pthread_condattr_setpshared): Error on PROCESS_SHARED requests.
 (__pthread_mutex_init): Support pshared mutex's.
 (__pthread_mutex_getprioceiling): Ditto.
 (__pthread_mutex_lock): Ditto.
 (__pthread_mutex_trylock): Ditto.
 (__pthread_mutex_unlock): Ditto.
 (__pthread_mutex_destroy): Ditto.
 (__pthread_mutex_setprioceiling): Ditto.
 (__pthread_mutexattr_setpshared): Support PTHREAD_PROCESS_PSHARED
requests.



------------=_1583532847-65438-48
Content-Type: text/plain; charset=us-ascii; name="pshared.ChangeLog"
Content-Disposition: inline; filename="pshared.ChangeLog"
Content-Transfer-Encoding: base64
Content-Length: 1814

VGh1IEFwciAxOSAyMDoyMjowMCAyMDAxICBSb2JlcnQgQ29sbGlucyA8cmJ0
Y29sbGluc0Bob3RtYWlsLmNvbT4KCgkqIHBhc3N3b3JkLmNjIChnZXRwd3Vp
ZCk6IENoZWNrIGZvciB0aHJlYWQgY2FuY2VsbGF0aW9uLgoJKGdldHB3dWlk
X3IpOiBEaXR0by4KCShnZXRwd25hbWUpOiBEaXR0by4KCShnZXRwd25hbV9y
KTogRGl0dG8uCgkqIHRocmVhZC5oIChwdGhyZWFkX211dGV4KTogTmV3IGNv
bnN0cnVjdG9ycyBmb3IgcHNoYXJlZCBvcGVyYXRpb24uCgkoTVRpbnRlcmZh
Y2UpOiBBc3NvY2lhdGl2ZSBhcnJheSBmb3IgcHNoYXJlZCBtdXRleCdzLgoJ
KiB0aHJlYWQuY2MgKE1UaW50ZXJmYWNlOjpJbml0KTogSW5pdGFpbGl6ZSBw
c2hhcmVkIG11dGV4IGFycmF5LgoJKHB0aHJlYWRfY29uZDo6QnJvYWRDYXN0
KTogSW1wbGVtZW50YXRpb24gbm90ZXMuCgkocHRocmVhZF9jb25kOjpUaW1l
ZFdhaXQpOiBSZW1vdmUgdXNlIG9mIFNpZ25hbE9iamVjdEFuZFdhaXQgb24g
bm9uLU5UIHN5c3RlbXMuCgkocHRocmVhZF9tdXRleDo6cHRocmVhZF9tdXRl
eCh1bnNpZ25lZCBzaG9ydCkpOiBOZXcgZnVuY3Rpb24uCgkocHRocmVhZF9t
dXRleDo6cHRocmVhZF9tdXRleCAocHRocmVhZF9tdXRleF90ICosIHB0aHJl
YWRfbXV0ZXhhdHRyICopKTpOZXcgZnVuY3Rpb24uCgkocHRocmVhZF9tdXRl
eDo6cHRocmVhZF9tdXRleChwdGhyZWFkX211dGV4YXR0ciAqKSk6IEZhaWwg
b24gcHNoYXJlZCBtdXRleCdzLgoJKF9fcHRocmVhZF9tdXRleF9nZXRwc2hh
cmVkKTogTmV3IGZ1bmN0aW9uLgoJKF9fcHRocmVhZF9qb2luKTogQ2hlY2sg
Zm9yIHRocmVhZCBjYW5jZWxsYXRpb24uCgkoX19wdGhyZWFkX2NvbmRfdGlt
ZWR3YWl0KTogU3VwcG9ydCBwc2hhcmVkIG11dGV4J3MuCgkoX19wdGhyZWFk
X2NvbmRfd2FpdCk6IERpdHRvLgoJKF9fcHRocmVhZF9jb25kYXR0cl9zZXRw
c2hhcmVkKTogRXJyb3Igb24gUFJPQ0VTU19TSEFSRUQgcmVxdWVzdHMuCgko
X19wdGhyZWFkX211dGV4X2luaXQpOiBTdXBwb3J0IHBzaGFyZWQgbXV0ZXgn
cy4KCShfX3B0aHJlYWRfbXV0ZXhfZ2V0cHJpb2NlaWxpbmcpOiBEaXR0by4K
CShfX3B0aHJlYWRfbXV0ZXhfbG9jayk6IERpdHRvLgoJKF9fcHRocmVhZF9t
dXRleF90cnlsb2NrKTogRGl0dG8uCgkoX19wdGhyZWFkX211dGV4X3VubG9j
ayk6IERpdHRvLgoJKF9fcHRocmVhZF9tdXRleF9kZXN0cm95KTogRGl0dG8u
CgkoX19wdGhyZWFkX211dGV4X3NldHByaW9jZWlsaW5nKTogRGl0dG8uCgko
X19wdGhyZWFkX211dGV4YXR0cl9zZXRwc2hhcmVkKTogU3VwcG9ydCBQVEhS
RUFEX1BST0NFU1NfUFNIQVJFRCByZXF1ZXN0cy4gCgo=

------------=_1583532847-65438-48
Content-Type: text/x-diff; charset=us-ascii; name="pshared.patch"
Content-Disposition: inline; filename="pshared.patch"
Content-Transfer-Encoding: base64
Content-Length: 25307

SW5kZXg6IHBhc3N3ZC5jYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9wYXNzd2QuY2Msdgpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMTgKZGlmZiAtdSAtcCAtcjEuMTggcGFz
c3dkLmNjCi0tLSBwYXNzd2QuY2MJMjAwMS8wNC8xOCAyMToxMDoxMgkxLjE4
CisrKyBwYXNzd2QuY2MJMjAwMS8wNC8xOSAxMDozNjowNApAQCAtMjA1LDYg
KzIwNSw4IEBAIGdldHB3dWlkICh1aWRfdCB1aWQpCiB7CiAgIGlmIChwYXNz
d2Rfc3RhdGUgIDw9IGluaXRpYWxpemluZykKICAgICByZWFkX2V0Y19wYXNz
d2QgKCk7CisgIAorICBwdGhyZWFkX3Rlc3RjYW5jZWwoKTsKIAogICByZXR1
cm4gc2VhcmNoX2ZvciAodWlkLCAwKTsKIH0KQEAgLTIyMCw2ICsyMjIsOCBA
QCBnZXRwd3VpZF9yICh1aWRfdCB1aWQsIHN0cnVjdCBwYXNzd2QgKnB3CiAg
IGlmIChwYXNzd2Rfc3RhdGUgIDw9IGluaXRpYWxpemluZykKICAgICByZWFk
X2V0Y19wYXNzd2QgKCk7CiAKKyAgcHRocmVhZF90ZXN0Y2FuY2VsKCk7CisK
ICAgc3RydWN0IHBhc3N3ZCAqdGVtcHB3ID0gc2VhcmNoX2ZvciAodWlkLCAw
KTsKIAogICBpZiAoIXRlbXBwdykKQEAgLTI0OCw2ICsyNTIsOCBAQCBnZXRw
d25hbSAoY29uc3QgY2hhciAqbmFtZSkKIHsKICAgaWYgKHBhc3N3ZF9zdGF0
ZSAgPD0gaW5pdGlhbGl6aW5nKQogICAgIHJlYWRfZXRjX3Bhc3N3ZCAoKTsK
KyAgCisgIHB0aHJlYWRfdGVzdGNhbmNlbCgpOwogCiAgIHJldHVybiBzZWFy
Y2hfZm9yICgwLCBuYW1lKTsKIH0KQEAgLTI2Nyw2ICsyNzMsOCBAQCBnZXRw
d25hbV9yIChjb25zdCBjaGFyICpuYW0sIHN0cnVjdCBwYXNzCiAKICAgaWYg
KHBhc3N3ZF9zdGF0ZSAgPD0gaW5pdGlhbGl6aW5nKQogICAgIHJlYWRfZXRj
X3Bhc3N3ZCAoKTsKKworICBwdGhyZWFkX3Rlc3RjYW5jZWwoKTsKIAogICBz
dHJ1Y3QgcGFzc3dkICp0ZW1wcHcgPSBzZWFyY2hfZm9yICgwLCBuYW0pOwog
CkluZGV4OiB0aHJlYWQuaAo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuaCx2CnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4xNwpkaWZmIC11IC1wIC1yMS4xNyB0aHJl
YWQuaAotLS0gdGhyZWFkLmgJMjAwMS8wNC8xNCAwNzowNjowMgkxLjE3Cisr
KyB0aHJlYWQuaAkyMDAxLzA0LzE5IDEwOjM2OjA2CkBAIC0yNjMsMTIgKzI2
MywxNSBAQCBjbGFzcyBwdGhyZWFkX211dGV4OnB1YmxpYyB2ZXJpZnlhYmxl
X29iCiBwdWJsaWM6CiAgIEhBTkRMRSB3aW4zMl9vYmpfaWQ7CiAgIExPTkcg
Y29uZHdhaXRzOworICBpbnQgcHNoYXJlZDsKIAogICBpbnQgTG9jayAoKTsK
ICAgaW50IFRyeUxvY2sgKCk7CiAgIGludCBVbkxvY2sgKCk7Ci0KKyAKKyAg
ICBwdGhyZWFkX211dGV4ICh1bnNpZ25lZCBzaG9ydCk7CiAgICAgcHRocmVh
ZF9tdXRleCAocHRocmVhZF9tdXRleGF0dHIgKik7CisgICAgcHRocmVhZF9t
dXRleCAocHRocmVhZF9tdXRleF90ICosIHB0aHJlYWRfbXV0ZXhhdHRyICop
OwogICAgfnB0aHJlYWRfbXV0ZXggKCk7CiB9OwogCkBAIC0zNDQsNiArMzQ3
LDExIEBAIHB1YmxpYzoKICAgY2FsbGJhY2sgKnB0aHJlYWRfcHJlcGFyZTsK
ICAgY2FsbGJhY2sgKnB0aHJlYWRfY2hpbGQ7CiAgIGNhbGxiYWNrICpwdGhy
ZWFkX3BhcmVudDsKKworICAvKiB0aGlzIGlzIGFuIGFzc29jaWF0aXZlIGFy
cmF5IGZvciB0aGUgX2V4Y2x1c2l2ZV8gdXNlIG9mIHBzaGFyZWQgbXV0ZXgn
cworICAgKiBub3JtYWwgbXV0ZXgncyBkb24ndCBnbyBoZXJlIHRvIHJlZHVj
ZSBvdmVyaGVhZCBhbmQgcHJldmVudCBzZXJpYWxpc2F0aW9uLgorICAgKi8K
KyAgY2xhc3MgcHRocmVhZF9tdXRleCAqIHBzaGFyZWRfbXV0ZXhzWzI1Nl07
CiAKICAgdm9pZCBJbml0IChpbnQpOwogCkluZGV4OiB0aHJlYWQuY2MKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dp
bnN1cC9jeWd3aW4vdGhyZWFkLmNjLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjI0CmRpZmYgLXUgLXAgLXIxLjI0IHRocmVhZC5jYwotLS0gdGhyZWFkLmNj
CTIwMDEvMDQvMTQgMDc6MDY6MDIJMS4yNAorKysgdGhyZWFkLmNjCTIwMDEv
MDQvMTkgMTA6MzY6MDgKQEAgLTQzLDYgKzQzLDcgQEAgZGV0YWlscy4gKi8K
ICNpbmNsdWRlICJwZXJwcm9jZXNzLmgiCiAjaW5jbHVkZSAic2VjdXJpdHku
aCIKICNpbmNsdWRlIDxzZW1hcGhvcmUuaD4KKyNpbmNsdWRlIDxzdGRpby5o
PgogCiBleHRlcm4gaW50IHRocmVhZHNhZmU7CiAKQEAgLTI5NiwxMSArMjk3
LDE3IEBAIE1UaW50ZXJmYWNlOjpJbml0IChpbnQgZm9ya2VkKQogICBpZiAo
Zm9ya2VkKQogICAgIHJldHVybjsKIAorICAvKiBzaG0gYXJlYXMgYSBpbmhl
cml0ZWQgd2hlbiBmb3JraW5nICovCisgIHNobV9oZWFkID0gTlVMTDsKKyAg
LyogcG9zc2libGUgdGhlIGF0Zm9yayBsaXN0cyBzaG91bGQgYmUgaW5pdGVk
IGhlcmUgYXMgd2VsbCAqLwogCiAgIG1haW50aHJlYWQud2luMzJfb2JqX2lk
ID0gbXlzZWxmLT5oUHJvY2VzczsKICAgbWFpbnRocmVhZC5zZXRUaHJlYWRJ
ZHRvQ3VycmVudCAoKTsKICAgLyogc3RvcmUgdGhlIG1haW4gdGhyZWFkJ3Mg
c2VsZiBwb2ludGVyICovCiAgIFRsc1NldFZhbHVlICh0aHJlYWRfc2VsZl9k
d1Rsc0luZGV4LCAmbWFpbnRocmVhZCk7CisgIAorICBmb3IgKGludCBpID0w
O2k8MjU2O2krKylwc2hhcmVkX211dGV4c1tpXT1OVUxMOworCiAjaWYgMAog
ICBpdGVtLT5mdW5jdGlvbiA9IE5VTEw7CiAKQEAgLTQwMSw2ICs0MDgsOCBA
QCBwdGhyZWFkX2NvbmQ6On5wdGhyZWFkX2NvbmQgKCkKIHZvaWQKIHB0aHJl
YWRfY29uZDo6QnJvYWRDYXN0ICgpCiB7CisgIC8vIFRoaXMgcG90ZW50aWFs
bHkgaGFzIGFuIHVuZmFpcm5lc3MgYnVnLiBXZSBzaG91bGQKKyAgLy8gY29u
c2lkZXIgcHJldmVudGluZyB0aGUgd2FrZXVwcyBmcm9tIHJlc3VtaW5nIHVu
dGlsIHdlIGZpbmlzaCBzaWduYWxsaW5nLgogICBpZiAoIXZlcmlmeWFibGVf
b2JqZWN0X2lzdmFsaWQgKG11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkK
ICAgICByZXR1cm47CiAgIFB1bHNlRXZlbnQgKHdpbjMyX29ial9pZCk7CkBA
IC00MjAsOCArNDI5LDE2IEBAIHB0aHJlYWRfY29uZDo6U2lnbmFsICgpCiBp
bnQKIHB0aHJlYWRfY29uZDo6VGltZWRXYWl0IChEV09SRCBkd01pbGxpc2Vj
b25kcykKIHsKLSAgRFdPUkQgcnYgPQotICAgIFNpZ25hbE9iamVjdEFuZFdh
aXQgKG11dGV4LT53aW4zMl9vYmpfaWQsIHdpbjMyX29ial9pZCwgZHdNaWxs
aXNlY29uZHMsCisgIERXT1JEIHJ2OworICBpZiAob3NfYmVpbmdfcnVuICE9
IHdpbk5UKQorICAgIHsKKyAgICAgIC8vIEZJWE1FOiByYWNlIGNvbmRpdGlv
biAocG90ZW50aWFsbHkgZHJvcCBldmVudHMKKyAgICAgIC8vIFBvc3NpYmxl
IHNvbHV0aW9uIChzaW5nbGUgcHJvY2VzcyBvbmx5KSAtIHBsYWNlIHRoaXMg
aW4gYSBjcml0aWNhbCBzZWN0aW9uLgorICAgICAgUmVsZWFzZU11dGV4KG11
dGV4LT53aW4zMl9vYmpfaWQpOworICAgICAgcnYgPSBXYWl0Rm9yU2luZ2xl
T2JqZWN0KHdpbjMyX29ial9pZCwgZHdNaWxsaXNlY29uZHMpOworICAgIH0K
KyAgZWxzZQorICAgIHJ2ID0gU2lnbmFsT2JqZWN0QW5kV2FpdCAobXV0ZXgt
PndpbjMyX29ial9pZCwgd2luMzJfb2JqX2lkLCBkd01pbGxpc2Vjb25kcywK
IAkJCSBmYWxzZSk7CiAgIHN3aXRjaCAocnYpCiAgICAgewpAQCAtNDUwLDEx
ICs0NjcsNiBAQCBwdGhyZWFkX2tleTo6cHRocmVhZF9rZXkgKHZvaWQgKCpk
ZXN0cnVjCiAKIHB0aHJlYWRfa2V5Ojp+cHRocmVhZF9rZXkgKCkKIHsKLS8q
IEZJWE1FOiBOZXcgZmVhdHVyZSBjb21wbGV0ZW5lc3MuCi0gKiBicmFja2V0
ZWQgY29kZSBpcyB0byBjYWxsZWQgd2hlbiB0aGUgdGhyZWFkIGV4aXN0cywg
bm90IHdoZW4gZGVsZXRlIGlzIGNhbGxlZAotICogaWYgKGRlc3RydWN0b3Ig
JiYgVGxzR2V0VmFsdWUoZHdUbHNJbmRleCkpCi0gKiAgIGRlc3RydWN0b3Ig
KFRsc0dldFZhbHVlKGR3VGxzSW5kZXgpKTsKLSAqLwogICBpZiAocHRocmVh
ZF9rZXlfZGVzdHJ1Y3RvciAqIGRlc3QgPSBNVF9JTlRFUkZBQ0UtPmRlc3Ry
dWN0b3JzLlJlbW92ZSAodGhpcykpCiAgICAgZGVsZXRlIGRlc3Q7CiAgIFRs
c0ZyZWUgKGR3VGxzSW5kZXgpOwpAQCAtNDc1LDE4ICs0ODcsMTI2IEBAIHB0
aHJlYWRfa2V5OjpnZXQgKCkKICAgcmV0dXJuIFRsc0dldFZhbHVlIChkd1Rs
c0luZGV4KTsKIH0KIAorI2RlZmluZSBTWVNfQkFTRSAodW5zaWduZWQgY2hh
cikgMHhDMAorLy8gTm90ZTogdGhlIG9yZGVyIGlzIGltcG9ydGFudC4gVGhp
cyBpcyBhbiBvdmVybG9hZGVkIHB0aHJlYWRfbXV0ZXhfdCBmcm9tIAorLy8g
dXNlcmxhbmQKK3R5cGVkZWYgc3RydWN0IF9wc2hhcmVkX211dGV4IHsKKyB1
bnNpZ25lZCBjaGFyIGlkOworIHVuc2lnbmVkIGNoYXIgcmVzZXJ2ZWQ7Cisg
dW5zaWduZWQgY2hhciByZXNlcnZlZDI7CisgdW5zaWduZWQgY2hhciBmbGFn
czsKK30gcHNoYXJlZF9tdXRleDsKKworLyogcHNoYXJlZCBtdXRleHM6Cisg
KiB0aGUgbXV0ZXhfdCAoc2l6ZSA0KSBpcyBub3QgdXNlZCBhcyBhIHZlcmlm
eWFibGUgb2JqZWN0IGJlY2F1c2Ugd2UgY2Fubm90CisgKiBndWFyYW50ZWUg
dGhlIHNhbWUgYWRkcmVzcyBzcGFjZSBmb3IgYWxsIHByb2Nlc3Nlcy4KKyAq
IHdlIHVzZSB0aGUgZm9sbG93aW5nOgorICogaGlnaCBiaXQgc2V0IChuZXZl
ciBhIHZhbGlkIGFkZHJlc3MpLgorICogc2Vjb25kIGJ5dGUgaXMgcmVzZXJ2
ZWQgZm9yIHRoZSBwcmlvcml0eS4KKyAqIHRoaXJkIGJ5dGUgaXMgcmVzZXJ2
ZWQKKyAqIGZvdXJ0aCBieXRlIGlzIHRoZSBtdXRleCBpZC4gKG1heCAyNTUg
Y3lnd2luIG11dGV4cyBzeXN0ZW0gd2lkZSkuCisgKiBjcmVhdGluZyBtdXRl
eCdzIGRvZXMgZ2V0IHNsb3dlciBhbmQgc2xvd2VyLCBidXQgYXMgY3JlYXRp
b24gaXMgYSBvbmUgdGltZQorICogam9iLCBpdCBzaG91bGQgbmV2ZXIgYmVj
b21lIGFuIGlzc3VlCisgKgorICogQW5kIGlmIHlvdSdyZSBsb29raW5nIGF0
IHRoaXMgYW5kIHRoaW5raW5nLCB3aHkgbm90IGFuIGFycmF5IGluIGN5Z3dp
biBmb3IgYWxsIG11dGV4cywKKyAqIC0geW91IGluY3VyIGEgcGVuYWx0eSBv
biBfZXZlcnlfIG11dGV4IGNhbGwgYW5kIHlvdSBoYXZlIHRvc2VyaWFsaXNl
IHRoZW0gYWxsLgorICogLi4uIEJhZCBrYXJtYS4KKyAqCisgKiBvcHRpb24g
Mj8gcHV0IGV2ZXJ5dGhpbmcgaW4gdXNlcnNwYWNlIGFuZCB1cGRhdGUgdGhl
IEFCST8KKyAqIC0gYmFkIGthcm1hIGFzIHdlbGwgLSB0aGUgSEFORExFLCB3
aGlsZSBpZGVudGljYWwgYWNyb3NzIHByb2Nlc3MncywKKyAqIElzbid0IGR1
cGxpY2F0ZWQsIGl0J3MgcmVvcGVuZWQuCisgKi8KKworcHRocmVhZF9tdXRl
eDo6cHRocmVhZF9tdXRleCAodW5zaWduZWQgc2hvcnQgaWQpOnZlcmlmeWFi
bGVfb2JqZWN0IChQVEhSRUFEX01VVEVYX01BR0lDKQoreworICAvL0ZJWE1F
OiBzZXQgYW4gYXBwcm9wcmlhdGUgc2VjdXJpdHkgbWFzayAtIHByb2JhYmx5
IGV2ZXJ5b25lLgorICBpZiAoTVRfSU5URVJGQUNFLT5wc2hhcmVkX211dGV4
c1tpZF0pCisgICAgcmV0dXJuOworICBjaGFyIHN0cmluZ2J1ZlsyOV07Cisg
IHNucHJpbnRmKHN0cmluZ2J1ZiwgMjksICJDWUdXSU5NVVRFWDB4JTB4Iiwg
aWQgJiAweDAwMGYpOworICBzeXN0ZW1fcHJpbnRmKCJuYW1lIG9mIG11dGV4
IHRvIHRyYW5zcGFyZW50bHkgb3BlbiAlc1xuIixzdHJpbmdidWYpOworICB0
aGlzLT53aW4zMl9vYmpfaWQgPTo6Q3JlYXRlTXV0ZXggKCZzZWNfbm9uZV9u
aWgsIGZhbHNlLCBzdHJpbmdidWYpOworICBpZiAod2luMzJfb2JqX2lkPT0w
IHx8ICh3aW4zMl9vYmpfaWQgJiYgR2V0TGFzdEVycm9yKCkgIT0gRVJST1Jf
QUxSRUFEWV9FWElTVFMpKQorICAgIHsKKyAgICAgIC8vIHRoZSBtdXRleCBo
YXMgYmVlbiBkZWxldGVkIG9yIHdlIGNvdWxkbid0IGdldCBhY2Nlc3MuIAor
CS8vIHRoZSBlcnJvcl9hbHJlYWR5X2V4aXN0cyB0ZXN0IGlzIGJlY2F1c2Ug
d2UgYXJlIG9ubHkgb3BlbmluZyBhbgorCS8vIGV4aXN0aW50IG11dGV4IGhl
cmUKKyAgICAgIHN5c3RlbV9wcmludGYoImNvdWxkbid0IGdldCBwc2hhcmVk
IG11dGV4ICV4LCAlZFxuIix3aW4zMl9vYmpfaWQsIEdldExhc3RFcnJvcigp
KTsKKyAgICAgIENsb3NlSGFuZGxlKHdpbjMyX29ial9pZCk7CisgICAgICBt
YWdpYz0wOworICAgICAgd2luMzJfb2JqX2lkPU5VTEw7CisgICAgICByZXR1
cm47CisgICAgfQorICBwc2hhcmVkID0gUFRIUkVBRF9QUk9DRVNTX1NIQVJF
RDsKKworICBNVF9JTlRFUkZBQ0UtPnBzaGFyZWRfbXV0ZXhzW2lkXT10aGlz
OworfQorCitwdGhyZWFkX211dGV4OjpwdGhyZWFkX211dGV4IChwdGhyZWFk
X211dGV4X3QgKm11dGV4LCBwdGhyZWFkX211dGV4YXR0ciAqIGF0dHIpOnZl
cmlmeWFibGVfb2JqZWN0IChQVEhSRUFEX01VVEVYX01BR0lDKQoreworICAv
KiBhdHRyIGNoZWNrZWQgaW4gdGhlIEMgY2FsbCAqLworICBpZiAoYXR0ciAm
JiBhdHRyLT5wc2hhcmVkPT1QVEhSRUFEX1BST0NFU1NfU0hBUkVEKQorICAg
IHsKKyAgICAgIC8vRklYTUU6IHNldCBhbiBhcHByb3ByaWF0ZSBzZWN1cml0
eSBtYXNrIC0gcHJvYmFibHkgZXZlcnlvbmUuCisgICAgICAvLyBUaGlzIGRv
ZXMgb3BlbiBhIEQuTy5TLiAtIHRoZSBuYW1lIGlzIGd1ZXNzYWJsZSAoaWYg
eW91IGFyZSB3aWxsaW5nIHRvIHJ1bgorICAgICAgLy8gdGhydSBhbGwgcG9z
c2libGUgYWRkcmVzcyB2YWx1ZXMgOl0KKyAgICAgIGNoYXIgc3RyaW5nYnVm
WzI5XTsKKyAgICAgIHVuc2lnbmVkIHNob3J0IGlkPTE7CisgICAgICB3aGls
ZSAoaWQgPCAyNTYpCisgICAgICAgIHsKKyAgICAgICAgICBzbnByaW50Zihz
dHJpbmdidWYsIDI5LCAiQ1lHV0lOTVVURVgweCUweCIsIGlkICYgMHgwMDBm
KTsKKyAgICAgICAgICBzeXN0ZW1fcHJpbnRmKCJuYW1lIG9mIG11dGV4IHRv
IGNyZWF0ZSAlc1xuIixzdHJpbmdidWYpOworICAgICAgICAgIHRoaXMtPndp
bjMyX29ial9pZCA9OjpDcmVhdGVNdXRleCAoJnNlY19ub25lX25paCwgZmFs
c2UsIHN0cmluZ2J1Zik7CisgICAgICAgICAgaWYgKHRoaXMtPndpbjMyX29i
al9pZCAmJiBHZXRMYXN0RXJyb3IoKSAhPSBFUlJPUl9BTFJFQURZX0VYSVNU
UykKKyAgICAgICAgICAgIHsKKyAgICAgICAgICAgICAgTVRfSU5URVJGQUNF
LT5wc2hhcmVkX211dGV4c1tpZF09dGhpczsKKwkgICAgICBwc2hhcmVkX211
dGV4ICpwbXV0ZXg9KHBzaGFyZWRfbXV0ZXggKikobXV0ZXgpOworCSAgICAg
IHBtdXRleC0+aWQ9aWQ7CisgICAgICAgICAgICAgIHBtdXRleC0+ZmxhZ3M9
U1lTX0JBU0U7CisJICAgICAgcHNoYXJlZD1QVEhSRUFEX1BST0NFU1NfU0hB
UkVEOworCSAgICAgIGNvbmR3YWl0cyA9IDA7CisJICAgICAgcmV0dXJuOwor
CSAgICB9CisJICBpZCsrOworCSAgQ2xvc2VIYW5kbGUod2luMzJfb2JqX2lk
KTsKKyAgICAgICAgfQorICAgICAgbWFnaWM9MDsKKyAgICAgIHdpbjMyX29i
al9pZD1OVUxMOworICAgIH0KKyAgZWxzZQorICAgIHsKKyAgICAgIHRoaXMt
PndpbjMyX29ial9pZCA9OjpDcmVhdGVNdXRleCAoJnNlY19ub25lX25paCwg
ZmFsc2UsIE5VTEwpOworCisgICAgICBpZiAoIXdpbjMyX29ial9pZCkKKyAg
ICAgICAgbWFnaWMgPSAwOworICAgICAgY29uZHdhaXRzID0gMDsKKyAgICAg
IHBzaGFyZWQgPSBQVEhSRUFEX1BST0NFU1NfUFJJVkFURTsKKyAgICB9Cit9
CisKIHB0aHJlYWRfbXV0ZXg6OnB0aHJlYWRfbXV0ZXggKHB0aHJlYWRfbXV0
ZXhhdHRyICogYXR0cik6dmVyaWZ5YWJsZV9vYmplY3QgKFBUSFJFQURfTVVU
RVhfTUFHSUMpCiB7CisgIC8qIGF0dHIgY2hlY2tlZCBpbiB0aGUgQyBjYWxs
ICovCisgIGlmIChhdHRyICYmIGF0dHItPnBzaGFyZWQ9PVBUSFJFQURfUFJP
Q0VTU19TSEFSRUQpCisgICAgeworICAgICAgLyogZm9yIHBzaGFyZWQgbXV0
ZXgncyB3ZSBuZWVkIHRoZSBtdXRleCBhZGRyZXNzICovCisgICAgICBtYWdp
YyA9IDA7CisgICAgICByZXR1cm47CisgICAgfQorCiAgIHRoaXMtPndpbjMy
X29ial9pZCA9OjpDcmVhdGVNdXRleCAoJnNlY19ub25lX25paCwgZmFsc2Us
IE5VTEwpOwotICBpZiAoIXRoaXMtPndpbjMyX29ial9pZCkKKyAgICAKKyAg
aWYgKCF3aW4zMl9vYmpfaWQpCiAgICAgbWFnaWMgPSAwOwogICBjb25kd2Fp
dHMgPSAwOworICBwc2hhcmVkID0gUFRIUkVBRF9QUk9DRVNTX1BSSVZBVEU7
CiB9CiAKIHB0aHJlYWRfbXV0ZXg6On5wdGhyZWFkX211dGV4ICgpCiB7CiAg
IGlmICh3aW4zMl9vYmpfaWQpCiAgICAgQ2xvc2VIYW5kbGUgKHdpbjMyX29i
al9pZCk7CisgIHdpbjMyX29ial9pZD1OVUxMOwogfQogCiBpbnQKQEAgLTUw
Nyw2ICs2MjcsMjYgQEAgcHRocmVhZF9tdXRleDo6VW5Mb2NrICgpCiAgIHJl
dHVybiBSZWxlYXNlTXV0ZXggKHdpbjMyX29ial9pZCk7CiB9CiAKK3B0aHJl
YWRfbXV0ZXggKioKK19fcHRocmVhZF9tdXRleF9nZXRwc2hhcmVkKHB0aHJl
YWRfbXV0ZXhfdCAqbXV0ZXgpCit7CisgIGlmICgoKChwc2hhcmVkX211dGV4
ICopKG11dGV4KSktPmZsYWdzICYgU1lTX0JBU0UpICE9IFNZU19CQVNFICkK
KyAgICByZXR1cm4gKHB0aHJlYWRfbXV0ZXggKiopbXV0ZXg7CisgIHBzaGFy
ZWRfbXV0ZXggKnBtdXRleD0ocHNoYXJlZF9tdXRleCAqKShtdXRleCk7Cisg
IGlmICgoTVRfSU5URVJGQUNFLT5wc2hhcmVkX211dGV4c1twbXV0ZXgtPmlk
XSkgIT0gTlVMTCApCisgICAgcmV0dXJuICYoTVRfSU5URVJGQUNFLT5wc2hh
cmVkX211dGV4c1twbXV0ZXgtPmlkXSk7CisgIC8qIGF0dGVtcHQgdG8gZ2V0
IHRoZSBleGlzdGluZyBtdXRleCAqLworICBwdGhyZWFkX211dGV4ICogbmV3
bXV0ZXg7CisgIG5ld211dGV4ID0gbmV3IHB0aHJlYWRfbXV0ZXggKHBtdXRl
eC0+aWQpOworICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKG5l
d211dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkKKyAgeworICAgIGRlbGV0
ZSAobmV3bXV0ZXgpOworICAgIE1UX0lOVEVSRkFDRS0+cHNoYXJlZF9tdXRl
eHNbcG11dGV4LT5pZF09TlVMTDsKKyAgICByZXR1cm4gJihNVF9JTlRFUkZB
Q0UtPnBzaGFyZWRfbXV0ZXhzWzBdKTsKKyAgfSAgICAKKyAgcmV0dXJuICYo
TVRfSU5URVJGQUNFLT5wc2hhcmVkX211dGV4c1twbXV0ZXgtPmlkXSk7Cit9
CisKIHB0aHJlYWRfbXV0ZXhhdHRyOjpwdGhyZWFkX211dGV4YXR0ciAoKTp2
ZXJpZnlhYmxlX29iamVjdCAoUFRIUkVBRF9NVVRFWEFUVFJfTUFHSUMpLAog
cHNoYXJlZCAoUFRIUkVBRF9QUk9DRVNTX1BSSVZBVEUpLCBtdXRleHR5cGUg
KFBUSFJFQURfTVVURVhfREVGQVVMVCkKIHsKQEAgLTczMCwxMCArODcwLDEw
IEBAIF9fcHRocmVhZF9jYW5jZWwgKHB0aHJlYWRfdCB0aHJlYWQpCiAgIHdl
IHJldHVybiBFU1JDSCB1bnRpbCBhbGwgdGhlIHJlcXVpcmVkIGZ1bmN0aW9u
cyBjYWxsIHRlc3RjYW5jZWwoKTsKICAgdGhpcyB3aWxsIGdpdmUgYXBwbGlj
YXRpb25zIHByZWRpY3RhYmxlIGJlaGF2aW91ci4KIAotICB0aGUgcmVxdWly
ZWQgZnVuY3Rpb24gbGlzdCBpczoKKyAgdGhlIHJlcXVpcmVkIGZ1bmN0aW9u
IGxpc3QgaXM6ICogaW5kaWNhdGVzIGRvbmUsIFggaW5kaWNhdGVzIG5vdCBw
cmVzZW50IGluIGN5Z3dpbi4KIGFpb19zdXNwZW5kKCkKLWNsb3NlKCkKLWNy
ZWF0KCkKKypjbG9zZSgpCisqY3JlYXQoKQogZmNudGwoKQogZnN5bmMoKQog
Z2V0bXNnKCkKQEAgLTc1MSw3ICs4OTEsNyBAQCBwb2xsKCkKIHByZWFkKCkK
IHB0aHJlYWRfY29uZF90aW1lZHdhaXQoKQogcHRocmVhZF9jb25kX3dhaXQo
KQotcHRocmVhZF9qb2luKCkKKypwdGhyZWFkX2pvaW4oKQogcHRocmVhZF90
ZXN0Y2FuY2VsKCkKIHB1dG1zZygpCiBwdXRwbXNnKCkKQEAgLTc2NSwxMCAr
OTA1LDEwIEBAIHNpZ3N1c3BlbmQoKQogc2lndGltZWR3YWl0KCkKIHNpZ3dh
aXQoKQogc2lnd2FpdGluZm8oKQotc2xlZXAoKQorKnNsZWVwKCkKIHN5c3Rl
bSgpCiB0Y2RyYWluKCkKLXVzbGVlcCgpCisqdXNsZWVwKCkKIHdhaXQoKQog
d2FpdDMoKQogd2FpdGlkKCkKQEAgLTgzNCwxMCArOTc0LDEwIEBAIGdldGdy
bmFtX3IoKQogZ2V0bG9naW4oKQogZ2V0bG9naW5fcigpCiBnZXRwd2VudCgp
Ci1nZXRwd25hbSgpCi1nZXRwd25hbV9yKCkKLWdldHB3dWlkKCkKLWdldHB3
dWlkX3IoKQorKiBnZXRwd25hbSgpCisqIGdldHB3bmFtX3IoKQorKiBnZXRw
d3VpZCgpCisqIGdldHB3dWlkX3IoKSAKIGdldHMoKQogZ2V0dXR4ZW50KCkK
IGdldHV0eGlkKCkKQEAgLTEyMjcsNiArMTM2Nyw3IEBAIF9fcHRocmVhZF9l
eGl0ICh2b2lkICp2YWx1ZV9wdHIpCiBpbnQKIF9fcHRocmVhZF9qb2luIChw
dGhyZWFkX3QgKiB0aHJlYWQsIHZvaWQgKipyZXR1cm5fdmFsKQogeworICAv
KiBGSVhNRTogd2FpdCBvbiB0aGUgdGhyZWFkIGNhbmNlbGxhdGlvbiBldmVu
dCBhcyB3ZWxsIC0gd2UgYXJlIGEgY2FuY2VsbGF0aW9uIHBvaW50Ki8KICAg
aWYgKCF2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkICgqdGhyZWFkLCBQVEhS
RUFEX01BR0lDKSkKICAgICByZXR1cm4gRVNSQ0g7CiAKQEAgLTEyNDIsOCAr
MTM4MywxMCBAQCBfX3B0aHJlYWRfam9pbiAocHRocmVhZF90ICogdGhyZWFk
LCB2b2lkCiAgICAgICBXYWl0Rm9yU2luZ2xlT2JqZWN0ICgoKnRocmVhZCkt
PndpbjMyX29ial9pZCwgSU5GSU5JVEUpOwogICAgICAgaWYgKHJldHVybl92
YWwpCiAJKnJldHVybl92YWwgPSAoKnRocmVhZCktPnJldHVybl9wdHI7Ci0g
ICAgfQkJCQkvKiBFbmQgaWYgKi8KKyAgICB9CS8qIEVuZCBpZiAqLwogCisg
IHB0aHJlYWRfdGVzdGNhbmNlbCgpOworCiAgIHJldHVybiAwOwogfQogCkBA
IC0xNDY2LDYgKzE2MDksOCBAQCBfX3B0aHJlYWRfY29uZF9zaWduYWwgKHB0
aHJlYWRfY29uZF90ICogCiAgIHJldHVybiAwOwogfQogCisvLyBGSVhNRTog
cHNoYXJlZCBtdXRleHMgaGF2ZSB0aGUgY29uZCBjb3VudCBpbiB0aGUgc2hh
cmVkIG1lbW9yeSBhcmVhLgorLy8gV2UgbmVlZCB0byBhY2NvbW9kYXRlIHRo
YXQuCiBpbnQKIF9fcHRocmVhZF9jb25kX3RpbWVkd2FpdCAocHRocmVhZF9j
b25kX3QgKiBjb25kLCBwdGhyZWFkX211dGV4X3QgKiBtdXRleCwKIAkJCSAg
Y29uc3Qgc3RydWN0IHRpbWVzcGVjICphYnN0aW1lKQpAQCAtMTQ3MywyNSAr
MTYxOCwzMCBAQCBfX3B0aHJlYWRfY29uZF90aW1lZHdhaXQgKHB0aHJlYWRf
Y29uZF90CiAgIGludCBydjsKICAgaWYgKCFhYnN0aW1lKQogICAgIHJldHVy
biBFSU5WQUw7CisgIHB0aHJlYWRfbXV0ZXggKip0aGVtdXRleD1OVUxMOwog
ICBpZiAoKm11dGV4ID09IFBUSFJFQURfTVVURVhfSU5JVElBTElaRVIpCiAg
ICAgX19wdGhyZWFkX211dGV4X2luaXQgKG11dGV4LCBOVUxMKTsKLSAgaWYg
KCF2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkICgqbXV0ZXgsIFBUSFJFQURf
TVVURVhfTUFHSUMpKQorICBpZiAoKCAoKHBzaGFyZWRfbXV0ZXggKikobXV0
ZXgpKS0+ZmxhZ3MgJiBTWVNfQkFTRSA9PSBTWVNfQkFTRSApKQorICAgIC8v
IGEgcHNoYXJlZCBtdXRleAorICAgIHRoZW11dGV4ID0gX19wdGhyZWFkX211
dGV4X2dldHBzaGFyZWQobXV0ZXgpOworCisgIGlmICghdmVyaWZ5YWJsZV9v
YmplY3RfaXN2YWxpZCAoKnRoZW11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lD
KSkKICAgICByZXR1cm4gRUlOVkFMOwogICBpZiAoIXZlcmlmeWFibGVfb2Jq
ZWN0X2lzdmFsaWQgKCpjb25kLCBQVEhSRUFEX0NPTkRfTUFHSUMpKQogICAg
IHJldHVybiBFSU5WQUw7CiAKICAgaWYgKCgqY29uZCktPndhaXRpbmcpCi0g
ICAgaWYgKCgqY29uZCktPm11dGV4ICYmICgoKmNvbmQpLT5tdXRleCAhPSAo
Km11dGV4KSkpCisgICAgaWYgKCgqY29uZCktPm11dGV4ICYmICgoKmNvbmQp
LT5tdXRleCAhPSAoKnRoZW11dGV4KSkpCiAgICAgICByZXR1cm4gRUlOVkFM
OwogICBJbnRlcmxvY2tlZEluY3JlbWVudCAoJigoKmNvbmQpLT53YWl0aW5n
KSk7CiAKLSAgKCpjb25kKS0+bXV0ZXggPSAoKm11dGV4KTsKLSAgSW50ZXJs
b2NrZWRJbmNyZW1lbnQgKCYoKCptdXRleCktPmNvbmR3YWl0cykpOworICAo
KmNvbmQpLT5tdXRleCA9ICgqdGhlbXV0ZXgpOworICBJbnRlcmxvY2tlZElu
Y3JlbWVudCAoJigoKnRoZW11dGV4KS0+Y29uZHdhaXRzKSk7CiAgIHJ2ID0g
KCpjb25kKS0+VGltZWRXYWl0IChhYnN0aW1lLT50dl9zZWMgKiAxMDAwKTsK
ICAgKCpjb25kKS0+bXV0ZXgtPkxvY2sgKCk7CiAgIGlmIChJbnRlcmxvY2tl
ZERlY3JlbWVudCAoJigoKmNvbmQpLT53YWl0aW5nKSkgPT0gMCkKICAgICAo
KmNvbmQpLT5tdXRleCA9IE5VTEw7Ci0gIEludGVybG9ja2VkRGVjcmVtZW50
ICgmKCgqbXV0ZXgpLT5jb25kd2FpdHMpKTsKKyAgSW50ZXJsb2NrZWREZWNy
ZW1lbnQgKCYoKCp0aGVtdXRleCktPmNvbmR3YWl0cykpOwogCiAgIHJldHVy
biBydjsKIH0KQEAgLTE1MDAsMjUgKzE2NTAsMjkgQEAgaW50CiBfX3B0aHJl
YWRfY29uZF93YWl0IChwdGhyZWFkX2NvbmRfdCAqIGNvbmQsIHB0aHJlYWRf
bXV0ZXhfdCAqIG11dGV4KQogewogICBpbnQgcnY7CisgIHB0aHJlYWRfbXV0
ZXhfdCAqdGhlbXV0ZXg9bXV0ZXg7CiAgIGlmICgqbXV0ZXggPT0gUFRIUkVB
RF9NVVRFWF9JTklUSUFMSVpFUikKICAgICBfX3B0aHJlYWRfbXV0ZXhfaW5p
dCAobXV0ZXgsIE5VTEwpOwotICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lz
dmFsaWQgKCptdXRleCwgUFRIUkVBRF9NVVRFWF9NQUdJQykpCisgIGlmICgo
ICgocHNoYXJlZF9tdXRleCAqKShtdXRleCkpLT5mbGFncyAmIFNZU19CQVNF
ID09IFNZU19CQVNFICkpCisgICAgLy8gYSBwc2hhcmVkIG11dGV4CisgICAg
dGhlbXV0ZXggPSBfX3B0aHJlYWRfbXV0ZXhfZ2V0cHNoYXJlZChtdXRleCk7
CisgIGlmICghdmVyaWZ5YWJsZV9vYmplY3RfaXN2YWxpZCAoKnRoZW11dGV4
LCBQVEhSRUFEX01VVEVYX01BR0lDKSkKICAgICByZXR1cm4gRUlOVkFMOwog
ICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCpjb25kLCBQVEhS
RUFEX0NPTkRfTUFHSUMpKQogICAgIHJldHVybiBFSU5WQUw7CiAKICAgaWYg
KCgqY29uZCktPndhaXRpbmcpCi0gICAgaWYgKCgqY29uZCktPm11dGV4ICYm
ICgoKmNvbmQpLT5tdXRleCAhPSAoKm11dGV4KSkpCisgICAgaWYgKCgqY29u
ZCktPm11dGV4ICYmICgoKmNvbmQpLT5tdXRleCAhPSAoKnRoZW11dGV4KSkp
CiAgICAgICByZXR1cm4gRUlOVkFMOwogICBJbnRlcmxvY2tlZEluY3JlbWVu
dCAoJigoKmNvbmQpLT53YWl0aW5nKSk7CiAKLSAgKCpjb25kKS0+bXV0ZXgg
PSAoKm11dGV4KTsKLSAgSW50ZXJsb2NrZWRJbmNyZW1lbnQgKCYoKCptdXRl
eCktPmNvbmR3YWl0cykpOworICAoKmNvbmQpLT5tdXRleCA9ICgqdGhlbXV0
ZXgpOworICBJbnRlcmxvY2tlZEluY3JlbWVudCAoJigoKnRoZW11dGV4KS0+
Y29uZHdhaXRzKSk7CiAgIHJ2ID0gKCpjb25kKS0+VGltZWRXYWl0IChJTkZJ
TklURSk7CiAgICgqY29uZCktPm11dGV4LT5Mb2NrICgpOwogICBpZiAoSW50
ZXJsb2NrZWREZWNyZW1lbnQgKCYoKCpjb25kKS0+d2FpdGluZykpID09IDAp
CiAgICAgKCpjb25kKS0+bXV0ZXggPSBOVUxMOwotICBJbnRlcmxvY2tlZERl
Y3JlbWVudCAoJigoKm11dGV4KS0+Y29uZHdhaXRzKSk7CisgIEludGVybG9j
a2VkRGVjcmVtZW50ICgmKCgqdGhlbXV0ZXgpLT5jb25kd2FpdHMpKTsKIAog
ICByZXR1cm4gcnY7CiB9CkBAIC0xNTUyLDYgKzE3MDYsOSBAQCBfX3B0aHJl
YWRfY29uZGF0dHJfc2V0cHNoYXJlZCAocHRocmVhZF9jCiAgICAgcmV0dXJu
IEVJTlZBTDsKICAgaWYgKChwc2hhcmVkIDwgMCkgfHwgKHBzaGFyZWQgPiAx
KSkKICAgICByZXR1cm4gRUlOVkFMOworICAvKiBzaGFyZWQgY29uZCB2YXJz
IG5vdCBjdXJyZW50bHkgc3VwcG9ydGVkICovCisgIGlmIChwc2hhcmVkICE9
IFBUSFJFQURfUFJPQ0VTU19QUklWQVRFKQorICAgIHJldHVybiBFSU5WQUw7
CiAgICgqYXR0ciktPnNoYXJlZCA9IHBzaGFyZWQ7CiAgIHJldHVybiAwOwog
fQpAQCAtMTYzMSwxMiArMTc4OCwyOCBAQCBpbnQKIF9fcHRocmVhZF9tdXRl
eF9pbml0IChwdGhyZWFkX211dGV4X3QgKiBtdXRleCwKIAkJICAgICAgY29u
c3QgcHRocmVhZF9tdXRleGF0dHJfdCAqIGF0dHIpCiB7CisgIGlmICgoICgo
cHNoYXJlZF9tdXRleCAqKShtdXRleCkpLT5mbGFncyAmIFNZU19CQVNFID09
IFNZU19CQVNFICkpCisgICAgLy8gYSBwc2hhcmVkIG11dGV4CisgICAgcmV0
dXJuIEVCVVNZOwogICBpZiAoYXR0ciAmJiAhdmVyaWZ5YWJsZV9vYmplY3Rf
aXN2YWxpZCAoKmF0dHIsIFBUSFJFQURfTVVURVhBVFRSX01BR0lDKSkKICAg
ICByZXR1cm4gRUlOVkFMOwogCiAgIGlmICh2ZXJpZnlhYmxlX29iamVjdF9p
c3ZhbGlkICgqbXV0ZXgsIFBUSFJFQURfTVVURVhfTUFHSUMpKQogICAgIHJl
dHVybiBFQlVTWTsKIAorICBpZiAoYXR0ciAmJiAoKmF0dHIpLT5wc2hhcmVk
ID09IFBUSFJFQURfUFJPQ0VTU19TSEFSRUQpCisgICAgeworICAgICAgcHRo
cmVhZF9tdXRleF90IHRocm93YXdheSA9IG5ldyBwdGhyZWFkX211dGV4ICht
dXRleCwgKCphdHRyKSk7CisgICAgICBtdXRleCA9IF9fcHRocmVhZF9tdXRl
eF9nZXRwc2hhcmVkKChwdGhyZWFkX211dGV4X3QgKiltdXRleCk7CisJCisg
ICAgICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCptdXRleCwg
UFRIUkVBRF9NVVRFWF9NQUdJQykpCisgICAgICAgIHsKKyAgICAgICAgICBk
ZWxldGUgdGhyb3dhd2F5OworICAgICAgICAgICptdXRleCA9IE5VTEw7Cisg
ICAgICAgICAgcmV0dXJuIEVBR0FJTjsKKyAgICAgICAgfQorICAgICAgcmV0
dXJuIDA7CisgICAgfQogICAqbXV0ZXggPSBuZXcgcHRocmVhZF9tdXRleCAo
YXR0ciA/ICgqYXR0cikgOiBOVUxMKTsKICAgaWYgKCF2ZXJpZnlhYmxlX29i
amVjdF9pc3ZhbGlkICgqbXV0ZXgsIFBUSFJFQURfTVVURVhfTUFHSUMpKQog
ICAgIHsKQEAgLTE2NTEsOSArMTgyNCwxMyBAQCBpbnQKIF9fcHRocmVhZF9t
dXRleF9nZXRwcmlvY2VpbGluZyAoY29uc3QgcHRocmVhZF9tdXRleF90ICog
bXV0ZXgsCiAJCQkJaW50ICpwcmlvY2VpbGluZykKIHsKKyAgcHRocmVhZF9t
dXRleF90ICp0aGVtdXRleD0ocHRocmVhZF9tdXRleF90ICopbXV0ZXg7CiAg
IGlmICgqbXV0ZXggPT0gUFRIUkVBRF9NVVRFWF9JTklUSUFMSVpFUikKICAg
ICBfX3B0aHJlYWRfbXV0ZXhfaW5pdCAoKHB0aHJlYWRfbXV0ZXhfdCAqKSBt
dXRleCwgTlVMTCk7Ci0gIGlmICghdmVyaWZ5YWJsZV9vYmplY3RfaXN2YWxp
ZCAoKm11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkKKyAgaWYgKCggKChw
c2hhcmVkX211dGV4ICopKG11dGV4KSktPmZsYWdzICYgU1lTX0JBU0UgPT0g
U1lTX0JBU0UgKSkKKyAgICAvLyBhIHBzaGFyZWQgbXV0ZXgKKyAgICB0aGVt
dXRleCA9IF9fcHRocmVhZF9tdXRleF9nZXRwc2hhcmVkKChwdGhyZWFkX211
dGV4X3QgKiltdXRleCk7CisgIGlmICghdmVyaWZ5YWJsZV9vYmplY3RfaXN2
YWxpZCAoKnRoZW11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkKICAgICBy
ZXR1cm4gRUlOVkFMOwogICAvKiBXZSBkb24ndCBkZWZpbmUgX1BPU0lYX1RI
UkVBRF9QUklPX1BST1RFQ1QgYmVjYXVzZSB3ZSBkbyd0IGN1cnJlbnRseSBz
dXBwb3J0CiAgICAqIG11dGV4IHByaW9yaXRpZXMuCkBAIC0xNjY5LDIyICsx
ODQ2LDMwIEBAIF9fcHRocmVhZF9tdXRleF9nZXRwcmlvY2VpbGluZyAoY29u
c3QgcHQKIGludAogX19wdGhyZWFkX211dGV4X2xvY2sgKHB0aHJlYWRfbXV0
ZXhfdCAqIG11dGV4KQogeworICBwdGhyZWFkX211dGV4X3QgKnRoZW11dGV4
PW11dGV4OwogICBpZiAoKm11dGV4ID09IFBUSFJFQURfTVVURVhfSU5JVElB
TElaRVIpCiAgICAgX19wdGhyZWFkX211dGV4X2luaXQgKG11dGV4LCBOVUxM
KTsKLSAgaWYgKCF2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkICgqbXV0ZXgs
IFBUSFJFQURfTVVURVhfTUFHSUMpKQorICBpZiAoKCAoKHBzaGFyZWRfbXV0
ZXggKikobXV0ZXgpKS0+ZmxhZ3MgJiBTWVNfQkFTRSkgPT0gU1lTX0JBU0Ug
KQorICAgIC8vIGEgcHNoYXJlZCBtdXRleAorICAgIHRoZW11dGV4ID0gX19w
dGhyZWFkX211dGV4X2dldHBzaGFyZWQobXV0ZXgpOworICBpZiAoIXZlcmlm
eWFibGVfb2JqZWN0X2lzdmFsaWQgKCp0aGVtdXRleCwgUFRIUkVBRF9NVVRF
WF9NQUdJQykpCiAgICAgcmV0dXJuIEVJTlZBTDsKLSAgKCptdXRleCktPkxv
Y2sgKCk7CisgICgqdGhlbXV0ZXgpLT5Mb2NrICgpOwogICByZXR1cm4gMDsK
IH0KIAogaW50CiBfX3B0aHJlYWRfbXV0ZXhfdHJ5bG9jayAocHRocmVhZF9t
dXRleF90ICogbXV0ZXgpCiB7CisgIHB0aHJlYWRfbXV0ZXhfdCAqdGhlbXV0
ZXg9bXV0ZXg7CiAgIGlmICgqbXV0ZXggPT0gUFRIUkVBRF9NVVRFWF9JTklU
SUFMSVpFUikKICAgICBfX3B0aHJlYWRfbXV0ZXhfaW5pdCAobXV0ZXgsIE5V
TEwpOwotICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCptdXRl
eCwgUFRIUkVBRF9NVVRFWF9NQUdJQykpCisgIGlmICgoICgocHNoYXJlZF9t
dXRleCAqKShtdXRleCkpLT5mbGFncyAmIFNZU19CQVNFKSA9PSBTWVNfQkFT
RSApCisgICAgLy8gYSBwc2hhcmVkIG11dGV4CisgICAgdGhlbXV0ZXggPSBf
X3B0aHJlYWRfbXV0ZXhfZ2V0cHNoYXJlZChtdXRleCk7CisgIGlmICghdmVy
aWZ5YWJsZV9vYmplY3RfaXN2YWxpZCAoKnRoZW11dGV4LCBQVEhSRUFEX01V
VEVYX01BR0lDKSkKICAgICByZXR1cm4gRUlOVkFMOwotICBpZiAoKCptdXRl
eCktPlRyeUxvY2sgKCkgPT0gV0FJVF9USU1FT1VUKQorICBpZiAoKCp0aGVt
dXRleCktPlRyeUxvY2sgKCkgPT0gV0FJVF9USU1FT1VUKQogICAgIHJldHVy
biBFQlVTWTsKICAgcmV0dXJuIDA7CiB9CkBAIC0xNjk0LDYgKzE4NzksOSBA
QCBfX3B0aHJlYWRfbXV0ZXhfdW5sb2NrIChwdGhyZWFkX211dGV4X3QgCiB7
CiAgIGlmICgqbXV0ZXggPT0gUFRIUkVBRF9NVVRFWF9JTklUSUFMSVpFUikK
ICAgICBfX3B0aHJlYWRfbXV0ZXhfaW5pdCAobXV0ZXgsIE5VTEwpOworICBp
ZiAoKCAoKHBzaGFyZWRfbXV0ZXggKikobXV0ZXgpKS0+ZmxhZ3MgJiBTWVNf
QkFTRSkgPT0gU1lTX0JBU0UgKQorICAgIC8vIGEgcHNoYXJlZCBtdXRleAor
ICAgIG11dGV4ID0gX19wdGhyZWFkX211dGV4X2dldHBzaGFyZWQobXV0ZXgp
OwogICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCptdXRleCwg
UFRIUkVBRF9NVVRFWF9NQUdJQykpCiAgICAgcmV0dXJuIEVJTlZBTDsKICAg
KCptdXRleCktPlVuTG9jayAoKTsKQEAgLTE3MDUsNiArMTg5Myw5IEBAIF9f
cHRocmVhZF9tdXRleF9kZXN0cm95IChwdGhyZWFkX211dGV4X3QKIHsKICAg
aWYgKCptdXRleCA9PSBQVEhSRUFEX01VVEVYX0lOSVRJQUxJWkVSKQogICAg
IHJldHVybiAwOworICBpZiAoKCAoKHBzaGFyZWRfbXV0ZXggKikobXV0ZXgp
KS0+ZmxhZ3MgJiBTWVNfQkFTRSkgPT0gU1lTX0JBU0UgKQorICAgIC8vIGEg
cHNoYXJlZCBtdXRleAorICAgIG11dGV4ID0gX19wdGhyZWFkX211dGV4X2dl
dHBzaGFyZWQobXV0ZXgpOwogICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lz
dmFsaWQgKCptdXRleCwgUFRIUkVBRF9NVVRFWF9NQUdJQykpCiAgICAgcmV0
dXJuIEVJTlZBTDsKIApAQCAtMTcyMSw5ICsxOTEyLDEzIEBAIGludAogX19w
dGhyZWFkX211dGV4X3NldHByaW9jZWlsaW5nIChwdGhyZWFkX211dGV4X3Qg
KiBtdXRleCwgaW50IHByaW9jZWlsaW5nLAogCQkJCWludCAqb2xkX2NlaWxp
bmcpCiB7CisgIHB0aHJlYWRfbXV0ZXhfdCAqdGhlbXV0ZXg9bXV0ZXg7CiAg
IGlmICgqbXV0ZXggPT0gUFRIUkVBRF9NVVRFWF9JTklUSUFMSVpFUikKICAg
ICBfX3B0aHJlYWRfbXV0ZXhfaW5pdCAobXV0ZXgsIE5VTEwpOwotICBpZiAo
IXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCptdXRleCwgUFRIUkVBRF9N
VVRFWF9NQUdJQykpCisgIGlmICgoICgocHNoYXJlZF9tdXRleCAqKShtdXRl
eCkpLT5mbGFncyAmIFNZU19CQVNFID09IFNZU19CQVNFICkpCisgICAgLy8g
YSBwc2hhcmVkIG11dGV4CisgICAgdGhlbXV0ZXggPSBfX3B0aHJlYWRfbXV0
ZXhfZ2V0cHNoYXJlZChtdXRleCk7CisgIGlmICghdmVyaWZ5YWJsZV9vYmpl
Y3RfaXN2YWxpZCAoKnRoZW11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkK
ICAgICByZXR1cm4gRUlOVkFMOwogICByZXR1cm4gRU5PU1lTOwogfQpAQCAt
MTgzMCw3ICsyMDI1LDcgQEAgX19wdGhyZWFkX211dGV4YXR0cl9zZXRwc2hh
cmVkIChwdGhyZWFkXwogICAvKiB3ZSBkb24ndCB1c2UgcHNoYXJlZCBmb3Ig
YW55dGhpbmcgYXMgeWV0LiBXZSBuZWVkIHRvIHRlc3QgUFJPQ0VTU19TSEFS
RUQgCiAgICAqIGZ1bmN0aW9uYWxpdHkgCiAgICAqLwotICBpZiAocHNoYXJl
ZCAhPSBQVEhSRUFEX1BST0NFU1NfUFJJVkFURSkKKyAgaWYgKHBzaGFyZWQg
IT0gUFRIUkVBRF9QUk9DRVNTX1BSSVZBVEUgJiYgcHNoYXJlZCAhPSBQVEhS
RUFEX1BST0NFU1NfU0hBUkVEKQogICAgIHJldHVybiBFSU5WQUw7CiAgICgq
YXR0ciktPnBzaGFyZWQgPSBwc2hhcmVkOwogICByZXR1cm4gMDsK

------------=_1583532847-65438-48--
