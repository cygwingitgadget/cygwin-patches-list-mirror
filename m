Return-Path: <cygwin-patches-return-2828-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 14265 invoked by alias); 15 Aug 2002 20:00:40 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 14132 invoked from network); 15 Aug 2002 20:00:38 -0000
Date: Thu, 15 Aug 2002 13:00:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] pthread_fork 
Message-ID: <Pine.WNT.4.44.0208151941420.-376009@thomas.kefrig-pfaff.de>
X-X-Sender: thomas@gw.kefrig-pfaff.de
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="537340-27937-1029433613=:-376009"
Content-ID: <Pine.WNT.4.44.0208151947550.-376009@thomas.kefrig-pfaff.de>
X-AntiVirus: scanned for viruses by NGI Next Generation Internet (http://www.ngi.de/)
X-SW-Source: 2002-q3/txt/msg00275.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--537340-27937-1029433613=:-376009
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-ID: <Pine.WNT.4.44.0208151947191.-376009@thomas.kefrig-pfaff.de>
Content-length: 2293


This patch will fix the pthread key related problems with fork (key value
is restored after fork) and some minor fork related fixes.

Changelog:

2002-08-15  Thomas Pfaff  <tpfaff@gmx.net>

	* fork.cc (fork_child): fixup_after_fork call changed.
	(fork_parent): Added call to MTinterface->fixup_before_fork to
	save TLS values.
	(fork): Added critical section, fixup_before_fork will use a
	local key buffer that is not thread safe.
	* init.cc (dll_entry): Run pthread_key destructors on thread
	detach or process detach.
	Changed call to store reents.
	* thread.cc: pthread_key_destructor and
	pthread_key_destructor_list class has been removed.
	(_reent_clib): Modified call to get reent value.
	(_reent_winsup): Ditto.
	(MTinterface::Init): Rewritten.
	(MTinterface::init_pthread): New Method.
	(MTinterface::fixup_before_fork): Ditto.
	(MTinterface::fixup_after_fork): Restore key values.
	Initialize thread instance for main thread.
	(MTinterface::run_key_dtors): New method, replaces IterateNull.
	(pthread::self): Allocate a pthread instance if not already done.
	This will give a thread a valid thread self pointer if it was
	created by ServiceMain or CreateThread.
	(pthread::destructor): New method.
	(pthread::exit): IterateNull is now done on thread detach,
	the cleanup in the key destructor function.
	(pthread_key::pthread_key): Is now a list.
	(pthread_key::set): Return error code.
	(pthread_key::get): Protect Win32 LastError.
	(pthread_key::fixup_before_fork): Save actual value in buffer.
	(pthread_key::fixup_after_fork): Restore key value.
	(pthread::thread_init_wrapper): Modified due to key handling
	changes.
	(__pthread_setspecific): Return error if failed.
	* thread.h (class pthread_key): New members fork_buf and
	destructor.
	New methods fixup_before_fork and fixup_after_fork.
	(class pthread_key_destructor): Removed.
	(class pthread_key_destructor_list): Ditto.
	(pthread::destructor): New method.
	(MTinterface::keys): New member.
	(MTinterface::reent_key): Ditto.
	(MTinterface::thread_self_key): Ditto.
	(MTinterface::fork_lock): Ditto.
	(MTinterface::init_pthread): New method.
	(MTinterface::fixup_before_fork): Ditto.
	(MTinterface::run_key_dtors): Ditto.
	(MTinterface::init_crit_section): Ditto.
	Moved MT_INTERFACE define from thread.cc to thread.h.

--537340-27937-1029433613=:-376009
Content-Type: TEXT/PLAIN; NAME="pthread_fork.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0208151946530.-376009@thomas.kefrig-pfaff.de>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME="pthread_fork.patch"
Content-length: 24868

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9mb3JrLmNjIHNyYy93
aW5zdXAvY3lnd2luL2ZvcmsuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dp
bi9mb3JrLmNjCVdlZCBBdWcgMTQgMTQ6MjA6MjQgMjAwMgorKysgc3JjL3dp
bnN1cC9jeWd3aW4vZm9yay5jYwlXZWQgQXVnICA3IDE3OjE0OjU0IDIwMDIK
QEAgLTMxMSw3ICszMTEsNyBAQCBmb3JrX2NoaWxkIChIQU5ETEUmIGhQYXJl
bnQsIGRsbCAqJmZpcnN0CiAgICAgaWYgKCgqdCktPmNsZWFyX29uX2Zvcmsg
KCkpCiAgICAgICAoKnQpLT5zZXQgKCk7CiAKLSAgdXNlcl9kYXRhLT50aHJl
YWRpbnRlcmZhY2UtPmZpeHVwX2FmdGVyX2ZvcmsgKCk7CisgIE1UX0lOVEVS
RkFDRS0+Zml4dXBfYWZ0ZXJfZm9yayAoKTsKIAogICAvKiBJbml0aWFsaXpl
IHNpZ25hbC9wcm9jZXNzIGhhbmRsaW5nICovCiAgIHNpZ3Byb2NfaW5pdCAo
KTsKQEAgLTM1Niw2ICszNTYsOCBAQCBmb3JrX3BhcmVudCAoSEFORExFJiBo
UGFyZW50LCBkbGwgKiZmaXJzCiAgIC8qIGNhbGwgdGhlIHB0aHJlYWRfYXRm
b3JrIHByZXBhcmUgZnVuY3Rpb25zICovCiAgIF9fcHRocmVhZF9hdGZvcmtw
cmVwYXJlICgpOwogCisgIE1UX0lOVEVSRkFDRS0+Zml4dXBfYmVmb3JlX2Zv
cmsgKCk7CisKICAgc3VicHJvY19pbml0ICgpOwogCiAgIGludCBjX2ZsYWdz
ID0gR2V0UHJpb3JpdHlDbGFzcyAoaE1haW5Qcm9jKSAvKnwKQEAgLTY1Miwx
MSArNjU0LDE1IEBAIGZvcmsgKCkKICAgY2hpbGRfaW5mb19mb3JrIGNoOwog
CiAgIGludCByZXMgPSBzZXRqbXAgKGNoLmptcCk7Ci0KICAgaWYgKHJlcykK
ICAgICByZXMgPSBmb3JrX2NoaWxkIChncm91cGVkLmhQYXJlbnQsIGdyb3Vw
ZWQuZmlyc3RfZGxsLCBncm91cGVkLmxvYWRfZGxscyk7CiAgIGVsc2UKLSAg
ICByZXMgPSBmb3JrX3BhcmVudCAoZ3JvdXBlZC5oUGFyZW50LCBncm91cGVk
LmZpcnN0X2RsbCwgZ3JvdXBlZC5sb2FkX2RsbHMsIGVzcCwgY2gpOworICAg
IHsKKyAgICAgIC8qIFByb3RlY3QgcHRocmVhZF9rZXlzIGxvY2FsIGJ1ZiBm
cm9tIGJlaW5nIG92ZXJ3cml0dGVuIGJ5IHNpbXVsdGFub3VzIGZvcmtzICov
CisgICAgICBFbnRlckNyaXRpY2FsU2VjdGlvbiAoJk1UX0lOVEVSRkFDRS0+
Zm9ya19sb2NrKTsKKyAgICAgIHJlcyA9IGZvcmtfcGFyZW50IChncm91cGVk
LmhQYXJlbnQsIGdyb3VwZWQuZmlyc3RfZGxsLCBncm91cGVkLmxvYWRfZGxs
cywgZXNwLCBjaCk7CisgICAgICBMZWF2ZUNyaXRpY2FsU2VjdGlvbiAoJk1U
X0lOVEVSRkFDRS0+Zm9ya19sb2NrKTsKKyAgICB9CiAKICAgTUFMTE9DX0NI
RUNLOwogICBzeXNjYWxsX3ByaW50ZiAoIiVkID0gZm9yaygpIiwgcmVzKTsK
ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbml0LmNjIHNyYy93
aW5zdXAvY3lnd2luL2luaXQuY2MKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dp
bi9pbml0LmNjCVdlZCBBdWcgMTQgMTQ6MjA6MjQgMjAwMgorKysgc3JjL3dp
bnN1cC9jeWd3aW4vaW5pdC5jYwlXZWQgQXVnIDE0IDE0OjIzOjMwIDIwMDIK
QEAgLTE4LDYgKzE4LDkgQEAgaW50IE5PX0NPUFkgZHluYW1pY2FsbHlfbG9h
ZGVkOwogZXh0ZXJuICJDIiBpbnQKIFdJTkFQSSBkbGxfZW50cnkgKEhBTkRM
RSBoLCBEV09SRCByZWFzb24sIHZvaWQgKnN0YXRpY19sb2FkKQogeworICBp
ZiAocmVhc29uID09IERMTF9USFJFQURfREVUQUNIIHx8IHJlYXNvbiA9PSBE
TExfUFJPQ0VTU19ERVRBQ0gpCisgICAgTVRfSU5URVJGQUNFLT5ydW5fa2V5
X2R0b3JzICgpOworCiAgIHN3aXRjaCAocmVhc29uKQogICAgIHsKICAgICBj
YXNlIERMTF9QUk9DRVNTX0FUVEFDSDoKQEAgLTI1LDEyICsyOCw4IEBAIFdJ
TkFQSSBkbGxfZW50cnkgKEhBTkRMRSBoLCBEV09SRCByZWFzb24KICAgICAg
IGR5bmFtaWNhbGx5X2xvYWRlZCA9IChzdGF0aWNfbG9hZCA9PSBOVUxMKTsK
ICAgICAgIGJyZWFrOwogICAgIGNhc2UgRExMX1RIUkVBRF9BVFRBQ0g6Ci0g
ICAgICBpZiAodXNlcl9kYXRhLT50aHJlYWRpbnRlcmZhY2UpCi0JewotCSAg
aWYgKCFUbHNTZXRWYWx1ZSh1c2VyX2RhdGEtPnRocmVhZGludGVyZmFjZS0+
cmVlbnRfaW5kZXgsCi0JCSAgICAmdXNlcl9kYXRhLT50aHJlYWRpbnRlcmZh
Y2UtPnJlZW50cykpCi0JICAgIGFwaV9mYXRhbCgiU2lnIHByb2MgTVQgaW5p
dCBmYWlsZWRcbiIpOwotCX0KKyAgICAgIGlmIChNVF9JTlRFUkZBQ0UtPnJl
ZW50X2tleS5zZXQgKCZNVF9JTlRFUkZBQ0UtPnJlZW50cykpCisgICAgICAg
IGFwaV9mYXRhbCgiU2lnIHByb2MgTVQgaW5pdCBmYWlsZWRcbiIpOwogICAg
ICAgYnJlYWs7CiAgICAgY2FzZSBETExfUFJPQ0VTU19ERVRBQ0g6CiAgICAg
ICBicmVhazsKZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJl
YWQuY2Mgc3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCi0tLSBzcmMub2xk
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCVdlZCBBdWcgMTQgMTQ6MjA6MjQg
MjAwMgorKysgc3JjL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmNjCVdlZCBBdWcg
MTQgMTQ6MjA6MzkgMjAwMgpAQCAtNDYsMTIxICs0NiwyOCBAQCBkZXRhaWxz
LiAqLwogCiBleHRlcm4gaW50IHRocmVhZHNhZmU7CiAKLS8qcHRocmVhZF9r
ZXlfZGVzdHJ1Y3Rvcl9saXN0IGNsYXNzOiB0by1iZSB0aHJlYWRzYWZlIHNp
bmdsZSBsaW5rZWQgbGlzdAotICpGSVhNRTogUHV0IG1lIGluIGEgZGVkaWNh
dGVkIGZpbGUsIG9yIGEgbGVhc3QgYSB0b29scyBhcmVhICEKLSAqLwotCi1w
dGhyZWFkX2tleV9kZXN0cnVjdG9yICoKLXB0aHJlYWRfa2V5X2Rlc3RydWN0
b3I6Okluc2VydEFmdGVyIChwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpub2Rl
KQotewotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICp0ZW1wID0gbmV4dDsK
LSAgbmV4dCA9IG5vZGU7Ci0gIHJldHVybiB0ZW1wOwotfQotCi1wdGhyZWFk
X2tleV9kZXN0cnVjdG9yICoKLXB0aHJlYWRfa2V5X2Rlc3RydWN0b3I6OlVu
bGlua05leHQgKCkKLXsKLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqdGVt
cCA9IG5leHQ7Ci0gIGlmIChuZXh0KQotICAgIG5leHQgPSBuZXh0LT5OZXh0
ICgpOwotICByZXR1cm4gdGVtcDsKLX0KLQotcHRocmVhZF9rZXlfZGVzdHJ1
Y3RvciAqCi1wdGhyZWFkX2tleV9kZXN0cnVjdG9yOjpOZXh0ICgpCi17Ci0g
IHJldHVybiBuZXh0OwotfQotCi12b2lkCi1wdGhyZWFkX2tleV9kZXN0cnVj
dG9yX2xpc3Q6Okluc2VydCAocHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqbm9k
ZSkKLXsKLSAgaWYgKCFub2RlKQotICAgIHJldHVybjsKLSAgaGVhZCA9IG5v
ZGUtPkluc2VydEFmdGVyIChoZWFkKTsKLSAgaWYgKCFoZWFkKQotICAgIGhl
YWQgPSBub2RlOwkJLypmaXJzdCBub2RlIHNwZWNpYWwgY2FzZSAqLwotfQot
Ci0gIC8qcmVtb3ZlIGEgZ2l2ZW4gZGF0YWl0ZW0sIHdoZXJldmVyIGluIHRo
ZSBsaXN0IGl0IGlzICovCi1wdGhyZWFkX2tleV9kZXN0cnVjdG9yICoKLXB0
aHJlYWRfa2V5X2Rlc3RydWN0b3JfbGlzdDo6UmVtb3ZlIChwdGhyZWFkX2tl
eSAqa2V5KQotewotICBpZiAoIWtleSkKLSAgICByZXR1cm4gTlVMTDsKLSAg
aWYgKCFoZWFkKQotICAgIHJldHVybiBOVUxMOwotICBpZiAoa2V5ID09IGhl
YWQtPmtleSkKLSAgICByZXR1cm4gUG9wICgpOwotICBwdGhyZWFkX2tleV9k
ZXN0cnVjdG9yICp0ZW1wID0gaGVhZDsKLSAgd2hpbGUgKHRlbXAgJiYgdGVt
cC0+TmV4dCAoKSAmJiAhKGtleSA9PSB0ZW1wLT5OZXh0ICgpLT5rZXkpKQot
ICAgIHsKLSAgICAgIHRlbXAgPSB0ZW1wLT5OZXh0ICgpOwotICAgIH0KLSAg
aWYgKHRlbXApCi0gICAgcmV0dXJuIHRlbXAtPlVubGlua05leHQgKCk7Ci0g
IHJldHVybiBOVUxMOwotfQotCi0gIC8qZ2V0IHRoZSBmaXJzdCBpdGVtIGFu
ZCByZW1vdmUgYXQgdGhlIHNhbWUgdGltZSAqLwotcHRocmVhZF9rZXlfZGVz
dHJ1Y3RvciAqCi1wdGhyZWFkX2tleV9kZXN0cnVjdG9yX2xpc3Q6OlBvcCAo
KQotewotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICp0ZW1wID0gaGVhZDsK
LSAgaGVhZCA9IGhlYWQtPk5leHQgKCk7Ci0gIHJldHVybiB0ZW1wOwotfQot
Ci1wdGhyZWFkX2tleV9kZXN0cnVjdG9yOjoKLXB0aHJlYWRfa2V5X2Rlc3Ry
dWN0b3IgKHZvaWQgKCp0aGVkZXN0cnVjdG9yKSAodm9pZCAqKSwgcHRocmVh
ZF9rZXkgKmtleSkKLXsKLSAgZGVzdHJ1Y3RvciA9IHRoZWRlc3RydWN0b3I7
Ci0gIG5leHQgPSBOVUxMOwotICB0aGlzLT5rZXkgPSBrZXk7Ci19Ci0KLXZv
aWQKLXB0aHJlYWRfa2V5X2Rlc3RydWN0b3JfbGlzdDo6SXRlcmF0ZU51bGwg
KCkKLXsKLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqdGVtcCA9IGhlYWQ7
Ci0gIHdoaWxlICh0ZW1wKQotICAgIHsKLSAgICAgIHRlbXAtPmRlc3RydWN0
b3IgKCh0ZW1wLT5rZXkpLT5nZXQgKCkpOwotICAgICAgdGVtcCA9IHRlbXAt
Pk5leHQgKCk7Ci0gICAgfQotfQotCi0KLSNkZWZpbmUgTVRfSU5URVJGQUNF
IHVzZXJfZGF0YS0+dGhyZWFkaW50ZXJmYWNlCiAKIHN0cnVjdCBfcmVlbnQg
KgogX3JlZW50X2NsaWIgKCkKIHsKLSAgaW50IHRtcCA9IEdldExhc3RFcnJv
ciAoKTsKICAgc3RydWN0IF9fcmVlbnRfdCAqX3IgPQotICAgIChzdHJ1Y3Qg
X19yZWVudF90ICopIFRsc0dldFZhbHVlIChNVF9JTlRFUkZBQ0UtPnJlZW50
X2luZGV4KTsKLQorICAgIChzdHJ1Y3QgX19yZWVudF90ICopIE1UX0lOVEVS
RkFDRS0+cmVlbnRfa2V5LmdldCAoKTsKICNpZmRlZiBfQ1lHX1RIUkVBRF9G
QUlMU0FGRQogICBpZiAoX3IgPT0gMCkKICAgICBzeXN0ZW1fcHJpbnRmICgi
bG9jYWwgdGhyZWFkIHN0b3JhZ2Ugbm90IGluaXRlZCIpOwogI2VuZGlmCi0K
LSAgU2V0TGFzdEVycm9yICh0bXApOwogICByZXR1cm4gX3ItPl9jbGliOwog
fQogCiBzdHJ1Y3QgX3dpbnN1cF90ICoKIF9yZWVudF93aW5zdXAgKCkKIHsK
LSAgaW50IHRtcCA9IEdldExhc3RFcnJvciAoKTsKLSAgc3RydWN0IF9fcmVl
bnRfdCAqX3I7Ci0gIF9yID0gKHN0cnVjdCBfX3JlZW50X3QgKikgVGxzR2V0
VmFsdWUgKE1UX0lOVEVSRkFDRS0+cmVlbnRfaW5kZXgpOworICBzdHJ1Y3Qg
X19yZWVudF90ICpfciA9CisgICAgKHN0cnVjdCBfX3JlZW50X3QgKikgTVRf
SU5URVJGQUNFLT5yZWVudF9rZXkuZ2V0ICgpOwogI2lmZGVmIF9DWUdfVEhS
RUFEX0ZBSUxTQUZFCiAgIGlmIChfciA9PSAwKQogICAgIHN5c3RlbV9wcmlu
dGYgKCJsb2NhbCB0aHJlYWQgc3RvcmFnZSBub3QgaW5pdGVkIik7CiAjZW5k
aWYKLSAgU2V0TGFzdEVycm9yICh0bXApOwogICByZXR1cm4gX3ItPl93aW5z
dXA7CiB9CiAKQEAgLTI2NSw3ICsxNzIsNiBAQCBNVGludGVyZmFjZTo6SW5p
dCAoaW50IGZvcmtlZCkKICAgc2VtYWxpc3QuaW5kZXggPSAwOwogI2VuZGlm
CiAKLSAgcmVlbnRfaW5kZXggPSBUbHNBbGxvYyAoKTsKICAgcmVlbnRzLl9j
bGliID0gX2ltcHVyZV9wdHI7CiAgIHJlZW50cy5fd2luc3VwID0gJndpbnN1
cF9yZWVudDsKIApAQCAtMjc3LDM2ICsxODMsMTggQEAgTVRpbnRlcmZhY2U6
OkluaXQgKGludCBmb3JrZWQpCiAgIHdpbnN1cF9yZWVudC5fcHJvY2Vzc19m
YWNpbGl0eSA9IDA7CiAjZW5kaWYKIAotICBUbHNTZXRWYWx1ZSAocmVlbnRf
aW5kZXgsICZyZWVudHMpOwotICAvLyB0aGUgc3RhdGljIHJlZW50X2RhdGEg
d2lsbCBiZSB1c2VkIGluIHRoZSBtYWluIHRocmVhZAotCi0KLSAgaWYgKCFp
bmRleGFsbG9jYXRlZCkKKyAgaWYgKCFmb3JrZWQpCiAgICAgewotICAgICAg
aW5kZXhhbGxvY2F0ZWQgPSAoLTEpOwotICAgICAgdGhyZWFkX3NlbGZfZHdU
bHNJbmRleCA9IFRsc0FsbG9jICgpOwotICAgICAgaWYgKHRocmVhZF9zZWxm
X2R3VGxzSW5kZXggPT0gVExTX09VVF9PRl9JTkRFWEVTKQotCXN5c3RlbV9w
cmludGYKLQkgICgibG9jYWwgc3RvcmFnZSBmb3IgdGhyZWFkIGNvdWxkbid0
IGJlIHNldFxuVGhpcyBtZWFucyB0aGF0IHdlIGFyZSBub3QgdGhyZWFkIHNh
ZmUhIik7Ci0gICAgfQotCi0gIGNvbmN1cnJlbmN5ID0gMDsKLSAgdGhyZWFk
Y291bnQgPSAxOyAvKjEgY3VycmVudCB0aHJlYWQgd2hlbiBJbml0IG9jY3Vy
cy4qLwotCi0gIG1haW50aHJlYWQud2luMzJfb2JqX2lkID0gbXlzZWxmLT5o
UHJvY2VzczsKLSAgbWFpbnRocmVhZC5zZXRUaHJlYWRJZHRvQ3VycmVudCAo
KTsKLSAgLypzdG9yZSB0aGUgbWFpbiB0aHJlYWQncyBzZWxmIHBvaW50ZXIg
Ki8KLSAgVGxzU2V0VmFsdWUgKHRocmVhZF9zZWxmX2R3VGxzSW5kZXgsICZt
YWludGhyZWFkKTsKKyAgICAgIGluaXRfY3JpdF9zZWN0aW9uICgmZm9ya19s
b2NrKTsKIAotICBpZiAoZm9ya2VkKQotICAgIHJldHVybjsKLQotICBtdXRl
eHMgPSBOVUxMOwotICBjb25kcyAgPSBOVUxMOwotICBzZW1hcGhvcmVzID0g
TlVMTDsKKyAgICAgIGluaXRfcHRocmVhZCAoJm1haW50aHJlYWQpOworICAg
ICAgLypzdG9yZSB0aGUgbWFpbiB0aHJlYWQncyByZWVudHMgYW5kIHNlbGYg
cG9pbnRlciAqLworICAgICAgcmVlbnRfa2V5LnNldCAoJnJlZW50cyk7Cisg
ICAgICB0aHJlYWRfc2VsZl9rZXkuc2V0ICgmbWFpbnRocmVhZCk7CisgICAg
fQorICAvKiBlbHNlOiBwdGhyZWFkIGluaXRpYWxpemF0aW9uIGlzIGRvbmUg
aW4gZml4dXBfYWZ0ZXJfZm9yayAqLwogCiAgIC8qcG9zc2libGUgdGhlIGF0
Zm9yayBsaXN0cyBzaG91bGQgYmUgaW5pdGVkIGhlcmUgYXMgd2VsbCAqLwot
CiAjaWYgMAogICBpdGVtLT5mdW5jdGlvbiA9IE5VTEw7CiAKQEAgLTMxNiwx
MCArMjA0LDUyIEBAIE1UaW50ZXJmYWNlOjpJbml0IChpbnQgZm9ya2VkKQog
I2VuZGlmCiB9CiAKK3ZvaWQKK01UaW50ZXJmYWNlOjppbml0X3B0aHJlYWQg
KHB0aHJlYWQgKnRocmVhZCkKK3sKKyAgaWYgKCFEdXBsaWNhdGVIYW5kbGUg
KEdldEN1cnJlbnRQcm9jZXNzICgpLCBHZXRDdXJyZW50VGhyZWFkICgpLAor
ICAgICAgICAgICAgICAgICAgICAgICAgR2V0Q3VycmVudFByb2Nlc3MgKCks
ICZ0aHJlYWQtPndpbjMyX29ial9pZCwKKyAgICAgICAgICAgICAgICAgICAg
ICAgIDAsIEZBTFNFLCBEVVBMSUNBVEVfU0FNRV9BQ0NFU1MpKQorCisgICAg
eworICAgICAgc3lzdGVtX3ByaW50ZiAoIkZhaWxlZCB0byBkdXBsaWNhdGUg
aGFuZGxlIGZvciBtYWludGhyZWFkIik7CisgICAgICB0aHJlYWQtPndpbjMy
X29ial9pZCA9IE5VTEw7CisgICAgfQorICB0aHJlYWQtPnNldFRocmVhZElk
dG9DdXJyZW50ICgpOworICB0aHJlYWQtPmNhbmNlbF9ldmVudCA9IDo6Q3Jl
YXRlRXZlbnQgKE5VTEwsVFJVRSxGQUxTRSxOVUxMKTsKKyAgaWYgKCF0aHJl
YWQtPmNhbmNlbF9ldmVudCkKKyAgICB7CisgICAgICBzeXN0ZW1fcHJpbnRm
ICgiY291bGRuJ3QgY3JlYXRlIGNhbmNlbCBldmVudCBmb3IgbWFpbnRocmVh
ZCwgTGFzdEVycm9yICVFIik7CisgICAgfQorICB0aHJlYWQtPmF0dHIuam9p
bmFibGUgPSBQVEhSRUFEX0NSRUFURV9KT0lOQUJMRTsKKyAgdGhyZWFkLT5q
b2luZXIgPSBOVUxMOworfQorCit2b2lkCitNVGludGVyZmFjZTo6Zml4dXBf
YmVmb3JlX2ZvcmsgKHZvaWQpCit7CisgIHB0aHJlYWRfa2V5ICprZXkgPSBr
ZXlzOworICBkZWJ1Z19wcmludGYgKCJrZXlzIGlzICV4IixrZXlzKTsKKyAg
d2hpbGUgKGtleSkKKyAgICB7CisgICAgICBrZXktPmZpeHVwX2JlZm9yZV9m
b3JrICgpOworICAgICAga2V5ID0ga2V5LT5uZXh0OworICAgIH0KK30KKwog
LyogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgZnJvbSBhIHNpbmdsZSB0aHJl
YWRlZCBwcm9jZXNzICovCiB2b2lkCiBNVGludGVyZmFjZTo6Zml4dXBfYWZ0
ZXJfZm9yayAodm9pZCkKIHsKKyAgdGhyZWFkY291bnQgPSAxOworCisgIHB0
aHJlYWRfa2V5ICprZXkgPSBrZXlzOworICBkZWJ1Z19wcmludGYgKCJrZXlz
IGlzICV4IixrZXlzKTsKKyAgd2hpbGUgKGtleSkKKyAgICB7CisgICAgICBr
ZXktPmZpeHVwX2FmdGVyX2ZvcmsgKCk7CisgICAgICBrZXkgPSBrZXktPm5l
eHQ7CisgICAgfQogICBwdGhyZWFkX211dGV4ICptdXRleCA9IG11dGV4czsK
ICAgZGVidWdfcHJpbnRmICgibXV0ZXhzIGlzICV4IixtdXRleHMpOwogICB3
aGlsZSAobXV0ZXgpCkBAIC0zNDEsNiArMjcxLDQxIEBAIE1UaW50ZXJmYWNl
OjpmaXh1cF9hZnRlcl9mb3JrICh2b2lkKQogICAgICAgc2VtLT5maXh1cF9h
ZnRlcl9mb3JrICgpOwogICAgICAgc2VtID0gc2VtLT5uZXh0OwogICAgIH0K
KworICBpbml0X2NyaXRfc2VjdGlvbiAoJmZvcmtfbG9jayk7CisKKyAgcHRo
cmVhZCAqdGhyZWFkID0gcHRocmVhZDo6c2VsZihmYWxzZSk7CisgIGlmICgh
dGhyZWFkKQorICAgIHsKKyAgICAgIGluaXRfcHRocmVhZCAoJm1haW50aHJl
YWQpOworICAgICAgLypzdG9yZSB0aGUgbWFpbiB0aHJlYWQncyByZWVudHMg
YW5kIHNlbGYgcG9pbnRlciAqLworICAgICAgcmVlbnRfa2V5LnNldCAoJnJl
ZW50cyk7CisgICAgICB0aHJlYWRfc2VsZl9rZXkuc2V0ICgmbWFpbnRocmVh
ZCk7CisgICAgfQorICBlbHNlCisgICAgaW5pdF9wdGhyZWFkICh0aHJlYWQp
OworfQorCisvKiBJdCBpcyBhc3N1bWVkIHRoYXQgYSBrZXkgd2lsbCBub3Qg
YmUgZGVsZXRlZCB3aGlsZSBpdCdzIGRlc3RydWN0b3JzCisgICBhcmUgcnVu
LCBvdGhlcndpc2UgYSBsb2NrIG11c3QgYmUgYWRkZWQgdG8gYXZvaWQgcmFj
ZSBjb25kaXRpb24gKi8KK3ZvaWQKK01UaW50ZXJmYWNlOjpydW5fa2V5X2R0
b3JzICh2b2lkKQoreworICBwdGhyZWFkX2tleSAqa2V5ID0ga2V5czsKKyAg
ZGVidWdfcHJpbnRmICgia2V5cyBpcyAleCIsa2V5cyk7CisgIHdoaWxlIChr
ZXkpCisgICAgeworICAgICAgaWYgKGtleS0+ZGVzdHJ1Y3RvcikKKyAgICAg
ICAgeworICAgICAgICAgIHZvaWQgKnZhbHVlID0ga2V5LT5nZXQgKCk7Cisg
ICAgICAgICAgaWYgKHZhbHVlKQorICAgICAgICAgICAgeworICAgICAgICAg
ICAgICBrZXktPmRlc3RydWN0b3IgKHZhbHVlKTsKKyAgICAgICAgICAgICAg
a2V5LT5zZXQgKE5VTEwpOworICAgICAgICAgICAgfQorICAgICAgICB9Cisg
ICAgICBrZXkgPSBrZXktPm5leHQ7CisgICAgfQogfQogCiAvKiBwdGhyZWFk
IGNhbGxzICovCkBAIC0zNDgsOSArMzEzLDQwIEBAIE1UaW50ZXJmYWNlOjpm
aXh1cF9hZnRlcl9mb3JrICh2b2lkKQogLyogc3RhdGljIG1ldGhvZHMgKi8K
IAogcHRocmVhZCAqCi1wdGhyZWFkOjpzZWxmICgpCitwdGhyZWFkOjpzZWxm
IChjb25zdCBib29sIGF1dG9faW5pdCkKK3sKKyAgcHRocmVhZCAqdGhyZWFk
ID0gKHB0aHJlYWQgKikgTVRfSU5URVJGQUNFLT50aHJlYWRfc2VsZl9rZXku
Z2V0ICgpOworICBpZiAoIXRocmVhZCAmJiBhdXRvX2luaXQpCisgICAgewor
ICAgICAgLyogdGhyZWFkIHdhcyBub3QgY3JlYXRlZCBieSBwdGhyZWFkX2Ny
ZWF0ZSBub3IgaXQgaXMgdGhlIG1haW50aHJlYWQKKyAgICAgICAgIFRyeSB0
byBhbGxvY2F0ZSBhIHN0cnVjdHVyZSBmb3IgaXQuCisgICAgICAgICBUaGlz
IHRocmVhZCB3aWxsIGJlIG1hcmtlZCBkZXRhY2hlZCAqLworICAgICAgdGhy
ZWFkID0gbmV3IHB0aHJlYWQgKCk7CisgICAgICBpZiAodGhyZWFkKQorICAg
ICAgICB7CisgICAgICAgICAgaWYgKHZlcmlmeWFibGVfb2JqZWN0X2lzdmFs
aWQgKCZ0aHJlYWQsIFBUSFJFQURfTUFHSUMpICE9IFZBTElEX09CSkVDVCkK
KyAgICAgICAgICAgIHsKKyAgICAgICAgICAgICAgZGVsZXRlIHRocmVhZDsK
KyAgICAgICAgICAgICAgcmV0dXJuIE5VTEw7CisgICAgICAgICAgICB9CisK
KyAgICAgICAgICBNVF9JTlRFUkZBQ0UtPmluaXRfcHRocmVhZCAodGhyZWFk
KTsKKyAgICAgICAgICB0aHJlYWQtPmF0dHIuam9pbmFibGUgPSBQVEhSRUFE
X0NSRUFURV9ERVRBQ0hFRDsKKyAgICAgICAgICB0aHJlYWQtPmpvaW5lciA9
IHRocmVhZDsKKyAgICAgICAgICBNVF9JTlRFUkZBQ0UtPnRocmVhZF9zZWxm
X2tleS5zZXQgKHRocmVhZCk7CisgICAgICAgIH0KKyAgICB9CisKKyAgcmV0
dXJuIHRocmVhZDsKK30KKwordm9pZAorcHRocmVhZDo6ZGVzdHJ1Y3RvciAo
dm9pZCAqdmFsdWUpCiB7Ci0gIHJldHVybiAocHRocmVhZCAqKSBUbHNHZXRW
YWx1ZSAoTVRfSU5URVJGQUNFLT50aHJlYWRfc2VsZl9kd1Rsc0luZGV4KTsK
KyAgcHRocmVhZCAqdGhyZWFkID0gKHB0aHJlYWQgKikgdmFsdWU7CisgIC8q
IGNsZWFudXAgdGhyZWFkIGlmIHRocmVhZCBpcyBkZXRhY2hlZCBhbmQgbm90
IGpvaW5lZCAqLworICBpZiAodGhyZWFkICYmIF9fcHRocmVhZF9lcXVhbCgm
dGhyZWFkLT5qb2luZXIsICZ0aHJlYWQpKQorICAgIGRlbGV0ZSB0aHJlYWQ7
CiB9CiAKIC8qIG1lbWJlciBtZXRob2RzICovCkBAIC00MDAsNyArMzk2LDcg
QEAgcHRocmVhZDo6Y3JlYXRlICh2b2lkICooKmZ1bmMpICh2b2lkICopLAog
ICBjYW5jZWxfZXZlbnQgPSA6OkNyZWF0ZUV2ZW50IChOVUxMLFRSVUUsRkFM
U0UsTlVMTCk7CiAgIGlmICghY2FuY2VsX2V2ZW50KQogICAgIHsKLSAgICAg
IHN5c3RlbV9wcmludGYgKCJjb3VsZG4ndCBjcmVhdGUgY2FuY2VsIGV2ZW50
LCB0aGlzICVwIExhc3RFcnJvciAlZCIsIHRoaXMsIEdldExhc3RFcnJvciAo
KSApOworICAgICAgc3lzdGVtX3ByaW50ZiAoImNvdWxkbid0IGNyZWF0ZSBj
YW5jZWwgZXZlbnQsIHRoaXMgJXAgTGFzdEVycm9yICVFIiwgdGhpcyk7CiAg
ICAgICAvKndlIG5lZWQgdGhlIGV2ZW50IGZvciBjb3JyZWN0IGJlaGF2aW91
ciAqLwogICAgICAgbWFnaWMgPSAwOwogICAgICAgcmV0dXJuOwpAQCAtNDM2
LDE3ICs0MzIsMTMgQEAgcHRocmVhZDo6ZXhpdCAodm9pZCAqdmFsdWVfcHRy
KQogICAvLyBydW4gY2xlYW51cCBoYW5kbGVycwogICBwb3BfYWxsX2NsZWFu
dXBfaGFuZGxlcnMgKCk7CiAKLSAgTVRfSU5URVJGQUNFLT5kZXN0cnVjdG9y
cy5JdGVyYXRlTnVsbCAoKTsKLQogICBtdXRleC5Mb2NrICgpOwotICAvLyBj
bGVhbnVwIGlmIHRocmVhZCBpcyBpbiBkZXRhY2hlZCBzdGF0ZSBhbmQgbm90
IGpvaW5lZAotICBpZiggX19wdGhyZWFkX2VxdWFsKCZqb2luZXIsICZ0aHJl
YWQgKSApCi0gICAgZGVsZXRlIHRoaXM7Ci0gIGVsc2UKKyAgaWYgKCFfX3B0
aHJlYWRfZXF1YWwoJmpvaW5lciwgJnRocmVhZCkpCiAgICAgeyAgCiAgICAg
ICByZXR1cm5fcHRyID0gdmFsdWVfcHRyOwogICAgICAgbXV0ZXguVW5Mb2Nr
ICgpOwogICAgIH0KKyAgLy8gZWxzZTogY2xlYW51cCBpcyBub3cgZG9uZSBp
biBrZXkgZGVzdHJ1Y3RvciBmdW5jdGlvbgogCiAgIGlmIChJbnRlcmxvY2tl
ZERlY3JlbWVudCAoJk1UX0lOVEVSRkFDRS0+dGhyZWFkY291bnQpID09IDAp
CiAgICAgOjpleGl0ICgwKTsKQEAgLTk2NCwzOCArOTU2LDcwIEBAIHB0aHJl
YWRfY29uZDo6Zml4dXBfYWZ0ZXJfZm9yayAoKQogfQogCiAKLXB0aHJlYWRf
a2V5OjpwdGhyZWFkX2tleSAodm9pZCAoKmRlc3RydWN0b3IpICh2b2lkICop
KTp2ZXJpZnlhYmxlX29iamVjdCAoUFRIUkVBRF9LRVlfTUFHSUMpCitwdGhy
ZWFkX2tleTo6cHRocmVhZF9rZXkgKHZvaWQgKCp0aGVkZXN0cnVjdG9yKSAo
dm9pZCAqKSkgOgorICB2ZXJpZnlhYmxlX29iamVjdCAoUFRIUkVBRF9LRVlf
TUFHSUMpLAorICBkZXN0cnVjdG9yKHRoZWRlc3RydWN0b3IpCiB7CiAgIGR3
VGxzSW5kZXggPSBUbHNBbGxvYyAoKTsKICAgaWYgKGR3VGxzSW5kZXggPT0g
VExTX09VVF9PRl9JTkRFWEVTKQogICAgIG1hZ2ljID0gMDsKLSAgZWxzZSBp
ZiAoZGVzdHJ1Y3RvcikKLSAgICB7Ci0gICAgICBNVF9JTlRFUkZBQ0UtPmRl
c3RydWN0b3JzLgotCUluc2VydCAobmV3IHB0aHJlYWRfa2V5X2Rlc3RydWN0
b3IgKGRlc3RydWN0b3IsIHRoaXMpKTsKLSAgICB9CisgIC8qIHRocmVhZHNh
ZmUgYWRkaXRpb24gaXMgZWFzeSAqLworICBuZXh0ID0gKHB0aHJlYWRfa2V5
ICopIEludGVybG9ja2VkRXhjaGFuZ2VQb2ludGVyICgmTVRfSU5URVJGQUNF
LT5rZXlzLCB0aGlzKTsKIH0KIAogcHRocmVhZF9rZXk6On5wdGhyZWFkX2tl
eSAoKQogewotICBpZiAocHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqZGVzdCA9
IE1UX0lOVEVSRkFDRS0+ZGVzdHJ1Y3RvcnMuUmVtb3ZlICh0aGlzKSkKLSAg
ICBkZWxldGUgZGVzdDsKICAgVGxzRnJlZSAoZHdUbHNJbmRleCk7CisgIC8q
IEknbSBub3QgMTAwJSBzdXJlIHRoZSBuZXh0IGJpdCBpcyB0aHJlYWRzYWZl
LiBJIHRoaW5rIGl0IGlzLi4uICovCisgIGlmIChNVF9JTlRFUkZBQ0UtPmtl
eXMgPT0gdGhpcykKKyAgICBJbnRlcmxvY2tlZEV4Y2hhbmdlUG9pbnRlciAo
Jk1UX0lOVEVSRkFDRS0+a2V5cywgdGhpcy0+bmV4dCk7CisgIGVsc2UKKyAg
ICB7CisgICAgICBwdGhyZWFkX2tleSAqdGVtcGtleSA9IE1UX0lOVEVSRkFD
RS0+a2V5czsKKyAgICAgIHdoaWxlICh0ZW1wa2V5LT5uZXh0ICYmIHRlbXBr
ZXktPm5leHQgIT0gdGhpcykKKyAgICAgICAgdGVtcGtleSA9IHRlbXBrZXkt
Pm5leHQ7CisgICAgICAvKiBidXQgdGhlcmUgbWF5IGJlIGEgcmFjZSBiZXR3
ZWVuIHRoZSBsb29wIGFib3ZlIGFuZCB0aGlzIHN0YXRlbWVudCAqLworICAg
ICAgSW50ZXJsb2NrZWRFeGNoYW5nZVBvaW50ZXIgKCZ0ZW1wa2V5LT5uZXh0
LCB0aGlzLT5uZXh0KTsKKyAgICB9CiB9CiAKIGludAogcHRocmVhZF9rZXk6
OnNldCAoY29uc3Qgdm9pZCAqdmFsdWUpCiB7Ci0gIC8qdGhlIE9TIGZ1bmN0
aW9uIGRvZXNuJ3QgcGVyZm9ybSBlcnJvciBjaGVja2luZyAqLwotICBUbHNT
ZXRWYWx1ZSAoZHdUbHNJbmRleCwgKHZvaWQgKikgdmFsdWUpOworICBpZiAo
IVRsc1NldFZhbHVlIChkd1Rsc0luZGV4LCAodm9pZCAqKSB2YWx1ZSkpCisg
ICAgcmV0dXJuIEVJTlZBTDsKICAgcmV0dXJuIDA7CiB9CiAKIHZvaWQgKgog
cHRocmVhZF9rZXk6OmdldCAoKQogewotICBzZXRfZXJybm8gKDApOwotICBy
ZXR1cm4gVGxzR2V0VmFsdWUgKGR3VGxzSW5kZXgpOworICB2b2lkICpyZXN1
bHQ7CisgIGludCBsYXN0X2Vycm9yID0gR2V0TGFzdEVycm9yICgpOworCisg
IGlmIChkd1Rsc0luZGV4ID09IFRMU19PVVRfT0ZfSU5ERVhFUykKKyAgICBy
ZXN1bHQgPSBOVUxMOworICBlbHNlCisgICAgcmVzdWx0ID0gVGxzR2V0VmFs
dWUgKGR3VGxzSW5kZXgpOworCisgIFNldExhc3RFcnJvciAobGFzdF9lcnJv
cik7CisKKyAgcmV0dXJuIHJlc3VsdDsKK30KKwordm9pZAorcHRocmVhZF9r
ZXk6OmZpeHVwX2JlZm9yZV9mb3JrICgpCit7CisgIGZvcmtfYnVmID0gZ2V0
ICgpOworfQorCit2b2lkCitwdGhyZWFkX2tleTo6Zml4dXBfYWZ0ZXJfZm9y
ayAoKQoreworICBkd1Rsc0luZGV4ID0gVGxzQWxsb2MgKCk7CisgIGlmIChk
d1Rsc0luZGV4ID09IFRMU19PVVRfT0ZfSU5ERVhFUykKKyAgICBhcGlfZmF0
YWwgKCJwdGhyZWFkX2tleTo6Zml4dXBfYWZ0ZXJfZm9yayAoKSBmYWlsZWQg
dG8gcmVhbGxvY2F0ZSBUbHMgc3RvcmFnZSIpOworICBzZXQgKGZvcmtfYnVm
KTsKIH0KIAogLypwc2hhcmVkIG11dGV4czoKQEAgLTEyNzQsMTcgKzEyOTgs
MTUgQEAgcHRocmVhZDo6dGhyZWFkX2luaXRfd3JhcHBlciAodm9pZCAqX2Fy
ZwogCiAgIGxvY2FsX3dpbnN1cC5fcHJvY2Vzc19sb2dtYXNrID0gTE9HX1VQ
VE8gKExPR19ERUJVRyk7CiAKLSAgLypUaGlzIGlzIG5vdCBjaGVja2VkIGJ5
IHRoZSBPUyAhISAqLwotICBpZiAoIVRsc1NldFZhbHVlIChNVF9JTlRFUkZB
Q0UtPnJlZW50X2luZGV4LCAmbG9jYWxfcmVlbnQpKQorICBpZiAoTVRfSU5U
RVJGQUNFLT5yZWVudF9rZXkuc2V0ICgmbG9jYWxfcmVlbnQpKQorICAgIHN5
c3RlbV9wcmludGYgKCJsb2NhbCBzdG9yYWdlIGZvciB0aHJlYWQgY291bGRu
J3QgYmUgc2V0Iik7CisgIGlmIChNVF9JTlRFUkZBQ0UtPnRocmVhZF9zZWxm
X2tleS5zZXQgKHRocmVhZCkpCiAgICAgc3lzdGVtX3ByaW50ZiAoImxvY2Fs
IHN0b3JhZ2UgZm9yIHRocmVhZCBjb3VsZG4ndCBiZSBzZXQiKTsKLQotICAv
KnRoZSBPUyBkb2Vzbid0IGNoZWNrIHRoaXMgZm9yIDw9IDY0IFRscyBlbnRy
aWVzIChwcmUgd2luMmspICovCi0gIFRsc1NldFZhbHVlIChNVF9JTlRFUkZB
Q0UtPnRocmVhZF9zZWxmX2R3VGxzSW5kZXgsIHRocmVhZCk7CiAKICAgdGhy
ZWFkLT5tdXRleC5Mb2NrICgpOwogICAvLyBpZiB0aHJlYWQgaXMgZGV0YWNo
ZWQgZm9yY2UgY2xlYW51cCBvbiBleGl0CiAgIGlmICh0aHJlYWQtPmF0dHIu
am9pbmFibGUgPT0gUFRIUkVBRF9DUkVBVEVfREVUQUNIRUQgJiYgdGhyZWFk
LT5qb2luZXIgPT0gTlVMTCkKLSAgICB0aHJlYWQtPmpvaW5lciA9IHB0aHJl
YWQ6OnNlbGYgKCk7CisgICAgdGhyZWFkLT5qb2luZXIgPSB0aHJlYWQ7CiAg
IHRocmVhZC0+bXV0ZXguVW5Mb2NrICgpOwogCiAjaWZkZWYgX0NZR19USFJF
QURfRkFJTFNBRkUKQEAgLTE4MzEsOCArMTg1Myw3IEBAIF9fcHRocmVhZF9z
ZXRzcGVjaWZpYyAocHRocmVhZF9rZXlfdCBrZXkKIHsKICAgaWYgKHZlcmlm
eWFibGVfb2JqZWN0X2lzdmFsaWQgKCZrZXksIFBUSFJFQURfS0VZX01BR0lD
KSAhPSBWQUxJRF9PQkpFQ1QpCiAgICAgcmV0dXJuIEVJTlZBTDsKLSAgKGtl
eSktPnNldCAodmFsdWUpOwotICByZXR1cm4gMDsKKyAgcmV0dXJuIChrZXkp
LT5zZXQgKHZhbHVlKTsKIH0KIAogdm9pZCAqCmRpZmYgLXVycCBzcmMub2xk
L3dpbnN1cC9jeWd3aW4vdGhyZWFkLmggc3JjL3dpbnN1cC9jeWd3aW4vdGhy
ZWFkLmgKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuaAlXZWQg
QXVnIDE0IDE0OjIwOjI0IDIwMDIKKysrIHNyYy93aW5zdXAvY3lnd2luL3Ro
cmVhZC5oCVdlZCBBdWcgMTQgMTQ6MjA6MzkgMjAwMgpAQCAtMTc4LDQzICsx
NzgsMjAgQEAgY2xhc3MgcHRocmVhZF9rZXk6cHVibGljIHZlcmlmeWFibGVf
b2JqZQogcHVibGljOgogCiAgIERXT1JEIGR3VGxzSW5kZXg7CisgIHZvaWQg
KmZvcmtfYnVmOworICB2b2lkICgqZGVzdHJ1Y3RvcikgKHZvaWQgKik7Cisg
IGNsYXNzIHB0aHJlYWRfa2V5ICpuZXh0OworCiAgIGludCBzZXQgKGNvbnN0
IHZvaWQgKik7CiAgIHZvaWQgKmdldCAoKTsKIAotICAgIHB0aHJlYWRfa2V5
ICh2b2lkICgqKSh2b2lkICopKTsKLSAgIH5wdGhyZWFkX2tleSAoKTsKLX07
Ci0KLS8qIEZJWE1FOiB0ZXN0IHVzaW5nIG11bHRpcGxlIGluaGVyaXRhbmNl
IGFuZCBtZXJnaW5nIGtleV9kZXN0cnVjdG9yIGludG8gcHRocmVhZF9rZXkK
LSAqIGZvciBlZmZpY2llbmN5ICovCi1jbGFzcyBwdGhyZWFkX2tleV9kZXN0
cnVjdG9yCi17Ci1wdWJsaWM6Ci0gIHZvaWQgKCpkZXN0cnVjdG9yKSAodm9p
ZCAqKTsKLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqSW5zZXJ0QWZ0ZXIg
KHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKiBub2RlKTsKLSAgcHRocmVhZF9r
ZXlfZGVzdHJ1Y3RvciAqVW5saW5rTmV4dCAoKTsKLSAgcHRocmVhZF9rZXlf
ZGVzdHJ1Y3RvciAqTmV4dCAoKTsKLQotICAgIHB0aHJlYWRfa2V5X2Rlc3Ry
dWN0b3IgKHZvaWQgKCp0aGVkZXN0cnVjdG9yKSAodm9pZCAqKSwgcHRocmVh
ZF9rZXkgKiBrZXkpOwotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpuZXh0
OwotICBwdGhyZWFkX2tleSAqa2V5OwotfTsKKyAgdm9pZCBmaXh1cF9iZWZv
cmVfZm9yayAoKTsKKyAgdm9pZCBmaXh1cF9hZnRlcl9mb3JrICgpOwogCi1j
bGFzcyBwdGhyZWFkX2tleV9kZXN0cnVjdG9yX2xpc3QKLXsKLXB1YmxpYzoK
LSAgdm9pZCBJbnNlcnQgKHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKiBub2Rl
KTsKLS8qIHJlbW92ZSBhIGdpdmVuIGRhdGFpdGVtLCB3aGVyZXZlciBpbiB0
aGUgbGlzdCBpdCBpcyAqLwotICBwdGhyZWFkX2tleV9kZXN0cnVjdG9yICpS
ZW1vdmUgKHB0aHJlYWRfa2V5X2Rlc3RydWN0b3IgKiBpdGVtKTsKLS8qIGdl
dCB0aGUgZmlyc3QgaXRlbSBhbmQgcmVtb3ZlIGF0IHRoZSBzYW1lIHRpbWUg
Ki8KLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3RvciAqUG9wICgpOwotICBwdGhy
ZWFkX2tleV9kZXN0cnVjdG9yICpSZW1vdmUgKHB0aHJlYWRfa2V5ICoga2V5
KTsKLSAgdm9pZCBJdGVyYXRlTnVsbCAoKTsKLXByaXZhdGU6Ci0gICAgcHRo
cmVhZF9rZXlfZGVzdHJ1Y3RvciAqIGhlYWQ7CisgIHB0aHJlYWRfa2V5ICh2
b2lkICgqKSh2b2lkICopKTsKKyAgfnB0aHJlYWRfa2V5ICgpOwogfTsKIAot
CiBjbGFzcyBwdGhyZWFkX2F0dHI6cHVibGljIHZlcmlmeWFibGVfb2JqZWN0
CiB7CiBwdWJsaWM6CkBAIC0zMDQsNyArMjgxLDEwIEBAIHB1YmxpYzoKICAg
IHZvaWQgcHVzaF9jbGVhbnVwX2hhbmRsZXIgKF9fcHRocmVhZF9jbGVhbnVw
X2hhbmRsZXIgKmhhbmRsZXIpOwogICAgdm9pZCBwb3BfY2xlYW51cF9oYW5k
bGVyIChpbnQgY29uc3QgZXhlY3V0ZSk7CiAKLSAgIHN0YXRpYyBwdGhyZWFk
KiBzZWxmICgpOworICAgc3RhdGljIHB0aHJlYWQqIHNlbGYgKGNvbnN0IGJv
b2wgYXV0b19pbml0ID0gdHJ1ZSk7CisKKyAgIHN0YXRpYyB2b2lkIGRlc3Ry
dWN0b3IgKHZvaWQgKnZhbHVlKTsKKwogICAgc3RhdGljIHZvaWQgKnRocmVh
ZF9pbml0X3dyYXBwZXIgKHZvaWQgKik7CiAKIHByaXZhdGU6CkBAIC0zODIs
MzcgKzM2Miw0OSBAQCBjbGFzcyBNVGludGVyZmFjZQogewogcHVibGljOgog
ICAvLyBHZW5lcmFsCi0gIERXT1JEIHJlZW50X2luZGV4OwotICBEV09SRCB0
aHJlYWRfc2VsZl9kd1Rsc0luZGV4OwotICAvKiB3ZSBtYXkgZ2V0IDAgZm9y
IHRoZSBUbHMgaW5kZXguLiBncnJyICovCi0gIGludCBpbmRleGFsbG9jYXRl
ZDsKICAgaW50IGNvbmN1cnJlbmN5OwogICBsb25nIGludCB0aHJlYWRjb3Vu
dDsKIAogICAvLyBVc2VkIGZvciBtYWluIHRocmVhZCBkYXRhLCBhbmQgc2ln
cHJvYyB0aHJlYWQKICAgc3RydWN0IF9fcmVlbnRfdCByZWVudHM7CiAgIHN0
cnVjdCBfd2luc3VwX3Qgd2luc3VwX3JlZW50OwotICBwdGhyZWFkIG1haW50
aHJlYWQ7CiAKLSAgcHRocmVhZF9rZXlfZGVzdHJ1Y3Rvcl9saXN0IGRlc3Ry
dWN0b3JzOwogICBjYWxsYmFjayAqcHRocmVhZF9wcmVwYXJlOwogICBjYWxs
YmFjayAqcHRocmVhZF9jaGlsZDsKICAgY2FsbGJhY2sgKnB0aHJlYWRfcGFy
ZW50OwogCi0gIC8vIGxpc3Qgb2YgbXV0ZXgncy4gVVNFIFRIUkVBRFNBRkUg
SU5TRVJUUyBBTkQgREVMRVRFUy4KKyAgY2xhc3MgcHRocmVhZF9rZXkgICAq
IGtleXM7CiAgIGNsYXNzIHB0aHJlYWRfbXV0ZXggKiBtdXRleHM7CiAgIGNs
YXNzIHB0aHJlYWRfY29uZCAgKiBjb25kczsKICAgY2xhc3Mgc2VtYXBob3Jl
ICAgICAqIHNlbWFwaG9yZXM7CiAKKyAgcHRocmVhZCBtYWludGhyZWFkOwor
CisgIHB0aHJlYWRfa2V5IHJlZW50X2tleTsKKyAgcHRocmVhZF9rZXkgdGhy
ZWFkX3NlbGZfa2V5OworCisgIENSSVRJQ0FMX1NFQ1RJT04gZm9ya19sb2Nr
OworCiAgIHZvaWQgSW5pdCAoaW50KTsKKyAgc3RhdGljIHZvaWQgaW5pdF9w
dGhyZWFkIChwdGhyZWFkICp0aHJlYWQpOworICB2b2lkIGZpeHVwX2JlZm9y
ZV9mb3JrICh2b2lkKTsKICAgdm9pZCBmaXh1cF9hZnRlcl9mb3JrICh2b2lk
KTsKIAotICBNVGludGVyZmFjZSAoKTpyZWVudF9pbmRleCAoMCksIGluZGV4
YWxsb2NhdGVkICgwKSwgdGhyZWFkY291bnQgKDEpCi0gICAgewotICAgICAg
cHRocmVhZF9wcmVwYXJlID0gTlVMTDsKLSAgICAgIHB0aHJlYWRfY2hpbGQg
ICA9IE5VTEw7Ci0gICAgICBwdGhyZWFkX3BhcmVudCAgPSBOVUxMOwotICAg
IH0KKyAgdm9pZCBydW5fa2V5X2R0b3JzICh2b2lkKTsKKworICBzdGF0aWMg
dm9pZCBpbml0X2NyaXRfc2VjdGlvbiAoTFBDUklUSUNBTF9TRUNUSU9OIGNy
aXRfc2VjdGlvbikKKyAgeworICAgIC8qIFRoaXMgaXMgcmVxdWlyZWQgZm9y
IGEgY2xlYW4gcmVpbml0aWFsaXphdGlvbiBhZnRlciBmb3JrICovCisgICAg
bWVtc2V0IChjcml0X3NlY3Rpb24sIDAsIHNpemVvZigqY3JpdF9zZWN0aW9u
KSk7CisgICAgSW5pdGlhbGl6ZUNyaXRpY2FsU2VjdGlvbiAoY3JpdF9zZWN0
aW9uKTsKKyAgfQorCisgIE1UaW50ZXJmYWNlICgpOiBjb25jdXJyZW5jeSAo
MCksIHRocmVhZGNvdW50ICgxKSwKKyAgICAgICAgICAgICAgICAgIHB0aHJl
YWRfcHJlcGFyZSAoTlVMTCksIHB0aHJlYWRfY2hpbGQgKE5VTEwpLCBwdGhy
ZWFkX3BhcmVudCAoTlVMTCksCisgICAgICAgICAgICAgICAgICBrZXlzIChO
VUxMKSwgbXV0ZXhzIChOVUxMKSwgY29uZHMgKE5VTEwpLCBzZW1hcGhvcmVz
IChOVUxMKSwKKyAgICAgICAgICAgICAgICAgIG1haW50aHJlYWQgKCksIHJl
ZW50X2tleSAoTlVMTCksIHRocmVhZF9zZWxmX2tleSAocHRocmVhZDo6ZGVz
dHJ1Y3RvcikKKyAgeworICB9CiB9OwogCiB2b2lkIF9fcHRocmVhZF9hdGZv
cmtwcmVwYXJlKHZvaWQpOwpAQCAtNTI3LDYgKzUxOSw4IEBAIGludCBfX3Nl
bV93YWl0IChzZW1fdCAqIHNlbSk7CiBpbnQgX19zZW1fdHJ5d2FpdCAoc2Vt
X3QgKiBzZW0pOwogaW50IF9fc2VtX3Bvc3QgKHNlbV90ICogc2VtKTsKIH07
CisKKyNkZWZpbmUgTVRfSU5URVJGQUNFIHVzZXJfZGF0YS0+dGhyZWFkaW50
ZXJmYWNlCiAKICNlbmRpZiAvLyBNVF9TQUZFCiAK

--537340-27937-1029433613=:-376009--
