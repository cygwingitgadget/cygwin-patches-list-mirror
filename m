Return-Path: <cygwin-patches-return-7459-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 14320 invoked by alias); 31 Jul 2011 09:17:03 -0000
Received: (qmail 14304 invoked by uid 22791); 31 Jul 2011 09:16:59 -0000
X-SWARE-Spam-Status: No, hits=1.1 required=5.0	tests=AWL,BAYES_50,DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW,SARE_OBFU_PROFILE,TW_CX,TW_DC,TW_DW,T_FRT_PROFILE1,T_FRT_PROFILE2,T_TO_NO_BRKTS_FREEMAIL
X-Spam-Check-By: sourceware.org
Received: from mail-pz0-f52.google.com (HELO mail-pz0-f52.google.com) (209.85.210.52)    by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Sun, 31 Jul 2011 09:16:39 +0000
Received: by pzd13 with SMTP id 13so9728045pzd.11        for <cygwin-patches@cygwin.com>; Sun, 31 Jul 2011 02:16:38 -0700 (PDT)
Received: by 10.143.20.5 with SMTP id x5mr2052378wfi.41.1312103797693;        Sun, 31 Jul 2011 02:16:37 -0700 (PDT)
Received: from [192.168.1.2] ([183.106.96.61])        by mx.google.com with ESMTPS id s6sm2350942wff.3.2011.07.31.02.16.33        (version=SSLv3 cipher=OTHER);        Sun, 31 Jul 2011 02:16:36 -0700 (PDT)
Message-ID: <4E351D88.7000806@gmail.com>
Date: Sun, 31 Jul 2011 09:17:00 -0000
From: jojelino <jojelino@gmail.com>
User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:7.0a2) Gecko/20110730 Thunderbird/7.0a2
MIME-Version: 1.0
To: cygwin-patches@cygwin.com
Subject: Re: [PATCH] you can use this patch to profile cygwin
References: <4E329C56.8090605@gmail.com> <20110730210453.GB31551@ednor.casa.cgf.cx> <20110731082623.GA23964@calimero.vinschen.de>
In-Reply-To: <20110731082623.GA23964@calimero.vinschen.de>
Content-Type: multipart/mixed; boundary="------------070101060201060309040908"
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
X-SW-Source: 2011-q3/txt/msg00035.txt.bz2

This is a multi-part message in MIME format.
--------------070101060201060309040908
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-length: 2169

On 2011-07-31 PM 5:26, Corinna Vinschen wrote:
> Erm, I tested on 32 bit.  The slowdown occured on all platforms, not
> only 64 bit.  64 bit is still only half as fast in the date loop for
> reason or reasons unknown.
>
>
> Corinna
>
  I used this code to profile every source compiled with -pg 
-finstrument-functions.
It had no documentation. because it existed solely for the purpose to 
breakdown  the cause of slow start.
Existing profiling code has ability to profile single-thread.so it had 
rare useful when the target is cygwin.(it spawns thread.) so i tried 
gaving them to consider threaded environment.
And modified profiling code uses instrument function to profile every 
function enter/exit. eventually, it resulted in terrible performance 
(2.42x slowdown at least)
when the profiling worker is forced to terminated( 
ExitProcess,abort,exit.. ) it notifies worker thread and joins the thread.
Also, i modified initial startup a little bit.

and here is instruction.
# apply patch
for i in thread_profile_stuff.diff thread_profile_core.diff; do patch 
-p0 <$i;done;
# pass configure parameter to build cygwin if you didn't configured it.
# make sure that cygwin is configured and can be built. from now i 
copy-paste some bunch of code.
# in i686-pc-cygwin/winsup/cygwin/Makefile, you should add CFLAGS '-pg 
-finstrument-functions' , to make new profiling code effective.
and comment out ifneq "${filter -O%,$(CFLAGS)}" "" too. it would make 
profiling code functional ( in cases you need to profile cygheap thread 
etc...)
#and use following snippet code to build new cygwin1.dll
s='';for i in boundbuffer pthread instrument kernel32 malloc_wrapper 
pseudo-reloc libstdcxx_wrapper cxx gcrt1 gmon profil mcount; do rm $i.o; 
s="${s} ${i}.o";done;  make CFLAGS='-march=-O2 -g -mfpmath=sse 
-Wno-error=unused-but-set-variable' $s -j 4;make;
#there would be no -pg -finstrument-functions in CFLAGS.
#what this does is, keep some source code from to be profiled.
and done. you got new-cygwin1.dll. rename it and try to discover what is 
the problem. because it gave gmon out like gmon.%pid.%tid.out when 
exited. you would use gprof to see report.
Regards.

--------------070101060201060309040908
Content-Type: text/plain;
 name="thread_profile_core.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="thread_profile_core.diff"
Content-length: 25555

PyAuY3Byb2plY3QKPyAucHJvamVjdAo/IGJjCj8gYmZkCj8gYm9vdHN0cmFw
Cj8gYnVpbGQKPyBjb25mMTczMgo/IGNvbmYxNzMyLmZpbGUKPyBjb25maWcu
Y2FjaGUKPyBjb25maWcubG9nCj8gY3R5cGVfLmkKPyBlcmZldGNoCj8gZmFz
dGZldGNoCj8gaTY4Ni1wYy1jeWd3aW4KPyBvdXRkaWZmCj8gb3V0ZGlmZi1v
bmx5cHJvZmlsZQo/IG91dGRpZmYtcGF0Y2gKPyBvdXRkaWZmLXByb2ZpbGUK
PyBwZXJsLmV4ZS5zdGFja2R1bXAKPyBwcm9maWxlLXNlbGYKPyBzZXJkZXAu
dG1wCj8gdGVzdAo/IHdpbmNhcC5oLmRpZmYudHh0Cj8gd2luc3VwLmRpZmYK
PyBldGMvTWFrZWZpbGUKPyBldGMvY29uZjE2ODRzdWJzLmF3awo/IGV0Yy9j
b25mMTY4NHN1YnMuc2gKPyBldGMvY29uZmlnLmNhY2hlCj8gZXRjL2NvbmZp
Zy5sb2cKPyBldGMvY29uZmlnLnN0YXR1cwo/IGV0Yy9jb25maWd1cmUuaW5m
bwo/IGV0Yy9zdGFuZGFyZHMuaW5mbwo/IHdpbnN1cC9jeWd3aW4vYm91bmRi
dWZmZXIuYwo/IHdpbnN1cC9jeWd3aW4vYm91bmRidWZmZXIuaAo/IHdpbnN1
cC9jeWd3aW4vY29uZmlnLmxvZwo/IHdpbnN1cC9jeWd3aW4vY3BwY2hlY2su
ZXhlLnN0YWNrZHVtcAo/IHdpbnN1cC9jeWd3aW4vZ2NydDEuYwo/IHdpbnN1
cC9jeWd3aW4vaW5zdHJ1bWVudC5jCj8gd2luc3VwL2N5Z3dpbi9pbnN0cnVt
ZW50LmgKPyB3aW5zdXAvY3lnd2luL3NpZ2ZlX2Jhc2UuY2MKSW5kZXg6IHdp
bnN1cC9jeWd3aW4vZGNydDAuY2MKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpS
Q1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZGNydDAuY2Ms
dgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDA0CmRpZmYgLXUgLXIxLjQwNCBk
Y3J0MC5jYwotLS0gd2luc3VwL2N5Z3dpbi9kY3J0MC5jYwk0IEp1bCAyMDEx
IDE1OjI1OjM2IC0wMDAwCTEuNDA0CisrKyB3aW5zdXAvY3lnd2luL2RjcnQw
LmNjCTI4IEp1bCAyMDExIDAxOjQ5OjU4IC0wMDAwCkBAIC0zNyw3ICszNyw3
IEBACiAjaW5jbHVkZSAiY3lneGRyLmgiCiAjaW5jbHVkZSAiZmVudi5oIgog
I2luY2x1ZGUgIm50ZGxsLmgiCi0KKyNpbmNsdWRlICJwcm9maWwuaCIKICNk
ZWZpbmUgTUFYX0FUX0ZJTEVfTEVWRUwgMTAKIAogI2RlZmluZSBQUkVNQUlO
X0xFTiAoc2l6ZW9mICh1c2VyX2RhdGEtPnByZW1haW4pIC8gc2l6ZW9mICh1
c2VyX2RhdGEtPnByZW1haW5bMF0pKQpAQCAtNjQ4LDE0ICs2NDgsMTcgQEAK
ICAgd2luZG93c19zeXN0ZW1fZGlyZWN0b3J5W3dpbmRvd3Nfc3lzdGVtX2Rp
cmVjdG9yeV9sZW5ndGgrK10gPSBMJ1xcJzsKICAgd2luZG93c19zeXN0ZW1f
ZGlyZWN0b3J5W3dpbmRvd3Nfc3lzdGVtX2RpcmVjdG9yeV9sZW5ndGhdID0g
TCdcMCc7CiB9Ci0KK2V4dGVybiAiQyIgeworICB2b2lkIF9tb25zdGFydHVw
MiAodm9pZCk7CisgIHZvaWQgX21jbGVhbnVwICh2b2lkKTsKK30KIHZvaWQg
X19zdGRjYWxsCiBkbGxfY3J0MF8wICgpCiB7CiAgIGluaXRfd2luZG93c19z
eXN0ZW1fZGlyZWN0b3J5ICgpOwogICBpbml0X2dsb2JhbF9zZWN1cml0eSAo
KTsKKyAgX21vbnN0YXJ0dXAyKCk7CiAgIGluaXRpYWxfZW52ICgpOwotCiAg
IFNldEVycm9yTW9kZSAoU0VNX0ZBSUxDUklUSUNBTEVSUk9SUyB8IFNFTV9O
T0dQRkFVTFRFUlJPUkJPWCk7CiAKICAgbG9ja19wcm9jZXNzOjppbml0ICgp
OwpAQCAtNjc3LDcgKzY4MCw2IEBACiAgIGRldmljZTo6aW5pdCAoKTsKICAg
ZG9fZ2xvYmFsX2N0b3JzICgmX19DVE9SX0xJU1RfXywgMSk7CiAgIGN5Z3Ro
cmVhZDo6aW5pdCAoKTsKLQogICBjaGlsZF9wcm9jX2luZm8gPSBnZXRfY3ln
d2luX3N0YXJ0dXBfaW5mbyAoKTsKICAgaWYgKCFjaGlsZF9wcm9jX2luZm8p
CiAgICAgbWVtb3J5X2luaXQgKHRydWUpOwpAQCAtNjk1LDYgKzY5Nyw3IEBA
CiAJICAgIGJyZWFrOwogCX0KICAgICB9CisgIGF0ZXhpdCAoJl9tY2xlYW51
cCk7CiAKICAgdXNlcl9kYXRhLT50aHJlYWRpbnRlcmZhY2UtPkluaXQgKCk7
CiAKQEAgLTcyMyw3ICs3MjYsNyBAQAogZGxsX2NydDBfMSAodm9pZCAqKQog
ewogICBleHRlcm4gdm9pZCBpbml0aWFsX3NldGxvY2FsZSAoKTsKLQorICBz
YW5pdHlfY2hlY2tfcHJvZmlsZV90aHJlYWQoKTsKICAgaWYgKHdpbmNhcC5o
YXNfYnVnZ3lfdGhyZWFkX3N0YXJ0dXAgKCkgfHwgZHluYW1pY2FsbHlfbG9h
ZGVkKQogICAgIHNpZ3Byb2NfaW5pdCAoKTsKICAgY2hlY2tfc2FuaXR5X2Fu
ZF9zeW5jICh1c2VyX2RhdGEpOwpJbmRleDogd2luc3VwL2N5Z3dpbi9leGNl
cHRpb25zLmNjCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL3NyYy93aW5zdXAvY3lnd2luL2V4Y2VwdGlvbnMuY2MsdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMzU5CmRpZmYgLXUgLXIxLjM1OSBleGNlcHRp
b25zLmNjCi0tLSB3aW5zdXAvY3lnd2luL2V4Y2VwdGlvbnMuY2MJMTMgSnVs
IDIwMTEgMTc6NTM6MjEgLTAwMDAJMS4zNTkKKysrIHdpbnN1cC9jeWd3aW4v
ZXhjZXB0aW9ucy5jYwkyOCBKdWwgMjAxMSAwMTo0OTo1OSAtMDAwMApAQCAt
Mzc1LDcgKzM3NSw3IEBACiAgICAgICByZXR1cm4gMDsKICAgICB9CiAKLSAg
X19zbWFsbF9zcHJpbnRmIChzdHJjaHIgKGRlYnVnZ2VyX2NvbW1hbmQsICdc
MCcpLCAiICV1IiwgR2V0Q3VycmVudFByb2Nlc3NJZCAoKSk7CisgIF9fc21h
bGxfc3ByaW50ZiAoZGVidWdnZXJfY29tbWFuZCwgImdkYiAtLXBpZD0ldSIs
IEdldEN1cnJlbnRQcm9jZXNzSWQgKCkpOwogCiAgIExPTkcgcHJpbyA9IEdl
dFRocmVhZFByaW9yaXR5IChHZXRDdXJyZW50VGhyZWFkICgpKTsKICAgU2V0
VGhyZWFkUHJpb3JpdHkgKEdldEN1cnJlbnRUaHJlYWQgKCksIFRIUkVBRF9Q
UklPUklUWV9ISUdIRVNUKTsKQEAgLTkyNCw3ICs5MjQsNyBAQAogICAgIHJl
dHVybiB0cnVlOwogICByZXR1cm4gZmFsc2U7CiB9Ci0KK2V4dGVybiAiQyIg
dm9pZCBwcm9maWxlX3RocmVhZF9vZmYoKTsKIC8qIEtleWJvYXJkIGludGVy
cnVwdCBoYW5kbGVyLiAgKi8KIHN0YXRpYyBCT09MIFdJTkFQSQogY3RybF9j
X2hhbmRsZXIgKERXT1JEIHR5cGUpCkBAIC05MzcsNiArOTM3LDcgQEAKICAg
ICAgIGlmIChteXNlbGYtPmN5Z3N0YXJ0ZWQpCS8qIFdhcyB0aGlzIHByb2Nl
c3MgY3JlYXRlZCBieSBhIGN5Z3dpbiBwcm9jZXNzPyAqLwogCXJldHVybiBU
UlVFOwkJLyogWWVzLiAgTGV0IHRoZSBwYXJlbnQgZXZlbnR1YWxseSBoYW5k
bGUgQ1RSTC1DIGlzc3Vlcy4gKi8KICAgICAgIGRlYnVnX3ByaW50ZiAoImV4
aXRpbmcgd2l0aCBzdGF0dXMgJXAiLCBTVEFUVVNfQ09OVFJPTF9DX0VYSVQp
OworICAgICAgcHJvZmlsZV90aHJlYWRfb2ZmKCk7CiAgICAgICBFeGl0UHJv
Y2VzcyAoU1RBVFVTX0NPTlRST0xfQ19FWElUKTsKICAgICB9CiAKSW5kZXg6
IHdpbnN1cC9jeWd3aW4vZXh0ZXJuYWwuY2MKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZXh0
ZXJuYWwuY2MsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTIzCmRpZmYgLXUg
LXIxLjEyMyBleHRlcm5hbC5jYwotLS0gd2luc3VwL2N5Z3dpbi9leHRlcm5h
bC5jYwkxIEp1biAyMDExIDAxOjIwOjI3IC0wMDAwCTEuMTIzCisrKyB3aW5z
dXAvY3lnd2luL2V4dGVybmFsLmNjCTI4IEp1bCAyMDExIDAxOjQ5OjU5IC0w
MDAwCkBAIC0xNjEsNyArMTYxLDcgQEAKICAgICB9CiAgIGZyZWUgKGVudmJs
b2NrKTsKIH0KLQorZXh0ZXJuICJDIiB2b2lkIHByb2ZpbGVfdGhyZWFkX29m
ZigpOwogLyoKICAqIEN5Z3dpbi1zcGVjaWZpYyB3cmFwcGVyIGZvciB3aW4z
MiBFeGl0UHJvY2VzcyBhbmQgVGVybWluYXRlUHJvY2Vzcy4KICAqIEl0IGVu
c3VyZXMgdGhhdCB0aGUgY29ycmVjdCBleGl0IGNvZGUsIGRlcml2ZWQgZnJv
bSB0aGUgc3BlY2lmaWVkCkBAIC0xODAsNiArMTgwLDcgQEAKIHN0YXRpYyB2
b2lkCiBleGl0X3Byb2Nlc3MgKFVJTlQgc3RhdHVzLCBib29sIHVzZVRlcm1p
bmF0ZVByb2Nlc3MpCiB7CisgIHByb2ZpbGVfdGhyZWFkX29mZigpOwogICBw
aWRfdCBwaWQgPSBnZXRwaWQgKCk7CiAgIGV4dGVybmFsX3BpbmZvICogZXAg
PSBmaWxsb3V0X3BpbmZvIChwaWQsIDEpOwogICBEV09SRCBkd3BpZCA9IGVw
ID8gZXAtPmR3UHJvY2Vzc0lkIDogcGlkOwpJbmRleDogd2luc3VwL2N5Z3dp
bi9nbW9uLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2
cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZ21vbi5jLHYKcmV0cmlldmluZyBy
ZXZpc2lvbiAxLjcKZGlmZiAtdSAtcjEuNyBnbW9uLmMKLS0tIHdpbnN1cC9j
eWd3aW4vZ21vbi5jCTMwIEF1ZyAyMDEwIDAxOjU3OjM2IC0wMDAwCTEuNwor
Kysgd2luc3VwL2N5Z3dpbi9nbW9uLmMJMjggSnVsIDIwMTEgMDE6NDk6NTkg
LTAwMDAKQEAgLTM0LDExICszNCwxMiBAQAogI2lmICFkZWZpbmVkKGxpbnQp
ICYmIGRlZmluZWQoTElCQ19TQ0NTKQogc3RhdGljIGNoYXIgcmNzaWRbXSA9
ICIkT3BlbkJTRDogZ21vbi5jLHYgMS44IDE5OTcvMDcvMjMgMjE6MTE6Mjcg
a3N0YWlsZXkgRXhwICQiOwogI2VuZGlmCi0KKyNpbmNsdWRlICJ3aW5zdXAu
aCIKICNpbmNsdWRlICJ3aW5sZWFuLmgiCiAjaW5jbHVkZSA8ZmNudGwuaD4K
ICNpbmNsdWRlIDxzdGRpby5oPgogI2luY2x1ZGUgPHVuaXN0ZC5oPgorI2lu
Y2x1ZGUgPHN0cmluZy5oPgogI2luY2x1ZGUgPGdtb24uaD4KICNpbmNsdWRl
IDxzdGRsaWIuaD4KIApAQCAtNDcsOSArNDgsOSBAQAogLyogWFhYIG5lZWRl
ZD8gKi8KIC8vZXh0ZXJuIGNoYXIgKm1pbmJyayBfX2FzbSAoIm1pbmJyayIp
OwogCi1zdHJ1Y3QgZ21vbnBhcmFtIF9nbW9ucGFyYW0gPSB7IEdNT05fUFJP
Rl9PRkYgfTsKK3N0cnVjdCBnbW9ucGFyYW0gTk9fQ09QWV9JTklUIF9nbW9u
cGFyYW0gPSB7IEdNT05fUFJPRl9PRkYgfTsKIAotc3RhdGljIGludAlzX3Nj
YWxlOworaW50CU5PX0NPUFlfSU5JVCBzX3NjYWxlOwogLyogc2VlIHByb2Zp
bCgyKSB3aGVyZSB0aGlzIGlzIGRlc2NyaWJlIChpbmNvcnJlY3RseSkgKi8K
ICNkZWZpbmUJCVNDQUxFXzFfVE9fMQkweDEwMDAwTAogCkBAIC02MCw3ICs2
MSw3IEBACiBzdGF0aWMgdm9pZCAqCiBmYWtlX3NicmsoaW50IHNpemUpCiB7
Ci0gICAgdm9pZCAqcnYgPSBtYWxsb2Moc2l6ZSk7CisgICAgdm9pZCAqcnYg
PSBMb2NhbEFsbG9jKDB4NDAsc2l6ZSk7CiAgICAgaWYgKHJ2KQogICAgICAg
cmV0dXJuIHJ2OwogICAgIGVsc2UKQEAgLTkzLDcgKzk0LDcgQEAKIAkJcC0+
dG9saW1pdCA9IE1BWEFSQ1M7CiAJcC0+dG9zc2l6ZSA9IHAtPnRvbGltaXQg
KiBzaXplb2Yoc3RydWN0IHRvc3RydWN0KTsKIAotCWNwID0gZmFrZV9zYnJr
KHAtPmtjb3VudHNpemUgKyBwLT5mcm9tc3NpemUgKyBwLT50b3NzaXplKTsK
KwljcCA9IGZha2Vfc2Jyayg1KnAtPmtjb3VudHNpemUgKyBwLT5mcm9tc3Np
emUgKyBwLT50b3NzaXplKTsKIAlpZiAoY3AgPT0gKGNoYXIgKiktMSkgewog
CQlFUlIoIm1vbnN0YXJ0dXA6IG91dCBvZiBtZW1vcnlcbiIpOwogCQlyZXR1
cm47CkBAIC0xMDUsNiArMTA2LDggQEAKIAljcCArPSBwLT50b3NzaXplOwog
CXAtPmtjb3VudCA9ICh1X3Nob3J0ICopY3A7CiAJY3AgKz0gcC0+a2NvdW50
c2l6ZTsKKwlwLT5jb21tX2tjb3VudD0odV9pbnQ2NF90KiljcDsKKwljcCAr
PSA0KnAtPmtjb3VudHNpemU7CiAJcC0+ZnJvbXMgPSAodV9zaG9ydCAqKWNw
OwogCiAJLyogWFhYIG1pbmJyayBuZWVkZWQ/ICovCkBAIC0xMzYsNiArMTM5
LDcgQEAKIHZvaWQKIF9tY2xlYW51cCgpCiB7CisgICAgICAgIHVuc2lnbmVk
IGk7CiAJaW50IGZkOwogCWludCBoejsKIAlpbnQgZnJvbWluZGV4OwpAQCAt
MjA0LDggKzIwOCwxMiBAQAogCX0KICNlbHNlCiAJewotCSAgY2hhciBnbW9u
X291dFtdID0gImdtb24ub3V0IjsKLQkgIHByb2ZmaWxlID0gZ21vbl9vdXQ7
CisJICBjaGFyIGdtb25fb3V0WzEwMjRdOworCQljaGFyIHByb2NfbW9kdWxl
bmFtZVsxMDI0XTsKKwkJR2V0TW9kdWxlRmlsZU5hbWVBKDAsIHByb2NfbW9k
dWxlbmFtZSwgMTAyNCk7CisJCXNwcmludGYoZ21vbl9vdXQsICJnbW9uLiVz
LiVkLm91dCIsIHN0cnJjaHIocHJvY19tb2R1bGVuYW1lLCdcXCcpKzEsCisJ
CQkJKGludCkgR2V0Q3VycmVudFByb2Nlc3NJZCgpKTsKKwkJcHJvZmZpbGUg
PSBnbW9uX291dDsKIAl9CiAjZW5kaWYKIApAQCAtMjMwLDYgKzIzOCwxNCBA
QAogCWhkci0+bmNudCA9IHAtPmtjb3VudHNpemUgKyBzaXplb2YoZ21vbmhk
cik7CiAJaGRyLT52ZXJzaW9uID0gR01PTlZFUlNJT047CiAJaGRyLT5wcm9m
cmF0ZSA9IGh6OworCWZvciAoaT0wO2k8cC0+a2NvdW50c2l6ZS8yO2krKykK
KwkgIHsKKwkgICAgaWYgKHAtPmNvbW1fa2NvdW50W2ldPHByb2YucGVyZmZy
ZXEpIGNvbnRpbnVlOworCSAgICBlbHNlCisJICAgICAgeworCSAgICAgICAg
cC0+a2NvdW50W2ldPXAtPmNvbW1fa2NvdW50W2ldL3Byb2YucGVyZmZyZXE7
CisJICAgICAgfQorCSAgfQogCXdyaXRlKGZkLCAoY2hhciAqKWhkciwgc2l6
ZW9mICpoZHIpOwogCXdyaXRlKGZkLCBwLT5rY291bnQsIHAtPmtjb3VudHNp
emUpOwogCWVuZGZyb20gPSBwLT5mcm9tc3NpemUgLyBzaXplb2YoKnAtPmZy
b21zKTsKSW5kZXg6IHdpbnN1cC9jeWd3aW4vZ21vbi5oCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93aW5zdXAvY3ln
d2luL2dtb24uaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yCmRpZmYgLXUg
LXIxLjIgZ21vbi5oCi0tLSB3aW5zdXAvY3lnd2luL2dtb24uaAkyNCBKdW4g
MjAwMSAyMjoyNjo1MSAtMDAwMAkxLjIKKysrIHdpbnN1cC9jeWd3aW4vZ21v
bi5oCTI4IEp1bCAyMDExIDAxOjQ5OjU5IC0wMDAwCkBAIC0xMzQsNiArMTM0
LDcgQEAKIHN0cnVjdCBnbW9ucGFyYW0gewogCWludAkJc3RhdGU7CiAJdV9z
aG9ydAkJKmtjb3VudDsKKwl1X2ludDY0X3QgICAgICAgKmNvbW1fa2NvdW50
OwogCXVfbG9uZwkJa2NvdW50c2l6ZTsKIAl1X3Nob3J0CQkqZnJvbXM7CiAJ
dV9sb25nCQlmcm9tc3NpemU7CkluZGV4OiB3aW5zdXAvY3lnd2luL2luaXQu
Y2MKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMv
c3JjL3dpbnN1cC9jeWd3aW4vaW5pdC5jYyx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS44MwpkaWZmIC11IC1yMS44MyBpbml0LmNjCi0tLSB3aW5zdXAvY3ln
d2luL2luaXQuY2MJMjUgTWF5IDIwMTEgMTE6MzM6MjkgLTAwMDAJMS44Mwor
Kysgd2luc3VwL2N5Z3dpbi9pbml0LmNjCTI4IEp1bCAyMDExIDAxOjQ5OjU5
IC0wMDAwCkBAIC0xMyw2ICsxMyw4IEBACiAjaW5jbHVkZSAiY3lndGxzLmgi
CiAjaW5jbHVkZSAibnRkbGwuaCIKICNpbmNsdWRlICJzaGFyZWRfaW5mby5o
IgorI2luY2x1ZGUgInByb2ZpbC5oIgorI2luY2x1ZGUgImluc3RydW1lbnQu
aCIKIAogc3RhdGljIERXT1JEIF9teV9vbGRmdW5jOwogCkBAIC0yOSw3ICsz
MSw4IEBACiAgIGFzbSB2b2xhdGlsZSAoImFuZGwgJC0xNiwlJWVzcCIgOjo6
ICIlZXNwIik7CiAgIF9jeWd0bHM6OmNhbGwgKChEV09SRCAoKikgICh2b2lk
ICosIHZvaWQgKikpIFRsc0dldFZhbHVlIChfbXlfb2xkZnVuYyksIGFyZyk7
CiB9Ci0KK2V4dGVybiAiQyIgRFdPUkQgX19zdGRjYWxsCisgICAgICB3b3Jr
ZXJfY29uc3VtZXIodm9pZCogYXJnKTsKIC8qIElmIHBvc3NpYmxlLCByZWRp
cmVjdCB0aGUgdGhyZWFkIGVudHJ5IHBvaW50IHRvIGEgY3lnd2luIHJvdXRp
bmUgd2hpY2gKICAgIGFkZHMgdGxzIHN0dWZmIHRvIHRoZSBzdGFjay4gKi8K
IHN0YXRpYyB2b2lkCkBAIC02Myw3ICs2Niw3IEBACiAJfQogICAgIH0KIH0K
LQorZXh0ZXJuICJDIiB2b2lkIHByb2ZpbGVfdGhyZWFkX29mZigpOwogaW5s
aW5lIHN0YXRpYyB2b2lkCiByZXNwYXduX3dvdzY0X3Byb2Nlc3MgKCkKIHsK
QEAgLTEwNiw2ICsxMDksNyBAQAogCWFwaV9mYXRhbCAoIldhaXRpbmcgZm9y
IHByb2Nlc3MgJWQgZmFpbGVkLCAlRSIsIHBpLmR3UHJvY2Vzc0lkKTsKICAg
ICAgIEdldEV4aXRDb2RlUHJvY2VzcyAocGkuaFByb2Nlc3MsICZyZXQpOwog
ICAgICAgQ2xvc2VIYW5kbGUgKHBpLmhQcm9jZXNzKTsKKyAgICAgIHByb2Zp
bGVfdGhyZWFkX29mZigpOwogICAgICAgRXhpdFByb2Nlc3MgKHJldCk7CiAg
ICAgfQogfQpAQCAtMTE2LDEwICsxMjAsMTEgQEAKIGRsbF9lbnRyeSAoSEFO
RExFIGgsIERXT1JEIHJlYXNvbiwgdm9pZCAqc3RhdGljX2xvYWQpCiB7CiAg
IEJPT0wgd293NjRfdGVzdF9zdGFja19tYXJrZXI7Ci0KICAgc3dpdGNoIChy
ZWFzb24pCiAgICAgewogICAgIGNhc2UgRExMX1BST0NFU1NfQVRUQUNIOgor
ICAgICAgX19jeWdfcHJvZmlsZV9mdW5jX2N0b3IoKTsKKyAgICAgIF9fY3ln
X3Byb2ZpbGVfdGxzX2N0b3IoKTsKICAgICAgIHdpbmNhcC5pbml0ICgpOwog
ICAgICAgaW5pdF9jb25zb2xlX2hhbmRsZXIgKGZhbHNlKTsKIApAQCAtMTQz
LDggKzE0OCwxMSBAQAogICAgIGNhc2UgRExMX1BST0NFU1NfREVUQUNIOgog
ICAgICAgaWYgKGR5bmFtaWNhbGx5X2xvYWRlZCkKIAlzaGFyZWRfZGVzdHJv
eSAoKTsKKyAgICAgIF9fY3lnX3Byb2ZpbGVfdGxzX2R0b3IoKTsKKyAgICAg
IF9fY3lnX3Byb2ZpbGVfZnVuY19kdG9yKCk7CiAgICAgICBicmVhazsKICAg
ICBjYXNlIERMTF9USFJFQURfQVRUQUNIOgorICAgICAgX19jeWdfcHJvZmls
ZV90bHNfY3RvcigpOwogICAgICAgaWYgKGRsbF9maW5pc2hlZF9sb2FkaW5n
KQogCW11bmdlX3RocmVhZGZ1bmMgKCk7CiAgICAgICBicmVhazsKQEAgLTE1
Myw2ICsxNjEsOCBAQAogCSAgJiYgKFBWT0lEKSAmX215X3RscyA+IChQVk9J
RCkgJndvdzY0X3Rlc3Rfc3RhY2tfbWFya2VyCiAJICAmJiBfbXlfdGxzLmlz
aW5pdGlhbGl6ZWQgKCkpCiAJX215X3Rscy5yZW1vdmUgKDApOworICAgIF9f
Y3lnX3Byb2ZpbGVfdGxzX2R0b3IoKTsKKwogICAgICAgLyogV2luZG93cyAy
MDAwIGhhcyBhIGJ1ZyBpbiBOdFRlcm1pbmF0ZVRocmVhZC4gIEluc3RlYWQg
b2YgcmVsZWFzaW5nCiAJIHRoZSBzdGFjayBhdCB0ZWItPkRlYWxsb2NhdGlv
blN0YWNrIGl0IHVzZXMgdGhlIHZhbHVlIG9mCiAJIHRlYi0+VGliLlN0YWNr
TGltaXQgdG8gZXZhbHVhdGUgdGhlIHN0YWNrIGFkZHJlc3MuICBTbyB3ZSBq
dXN0IGNsYWltCkluZGV4OiB3aW5zdXAvY3lnd2luL3BpbmZvLmNjCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93aW5z
dXAvY3lnd2luL3BpbmZvLmNjLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjI3
NwpkaWZmIC11IC1yMS4yNzcgcGluZm8uY2MKLS0tIHdpbnN1cC9jeWd3aW4v
cGluZm8uY2MJMTYgSnVuIDIwMTEgMjM6MDA6MDAgLTAwMDAJMS4yNzcKKysr
IHdpbnN1cC9jeWd3aW4vcGluZm8uY2MJMjggSnVsIDIwMTEgMDE6NTA6MDAg
LTAwMDAKQEAgLTI5LDcgKzI5LDcgQEAKICNpbmNsdWRlICJjeWd0bHMuaCIK
ICNpbmNsdWRlICJ0bHNfcGJ1Zi5oIgogI2luY2x1ZGUgImNoaWxkX2luZm8u
aCIKLQorI2luY2x1ZGUgInByb2ZpbC5oIgogY2xhc3MgcGluZm9fYmFzaWM6
IHB1YmxpYyBfcGluZm8KIHsKIHB1YmxpYzoKQEAgLTE3MCw3ICsxNzAsNyBA
QAogICBzaWdwcm9jX3ByaW50ZiAoInBpZCAlZCwgZXhpdCB2YWx1ZSAtIG9s
ZCAlcCwgd2luZG93cyAlcCwgY3lnd2luICVwIiwKIAkJICBzZWxmLT5waWQs
IG9leGl0Y29kZSwgeCwgc2VsZi0+ZXhpdGNvZGUpOwogfQotCitleHRlcm4g
IkMiIHZvaWQgcHJvZmlsZV90aHJlYWRfb2ZmKCk7CiB2b2lkCiBwaW5mbzo6
ZXhpdCAoRFdPUkQgbikKIHsKQEAgLTIwNCw2ICsyMDQsNyBAQAogICBpZiAo
IXNlbGYtPmN5Z3N0YXJ0ZWQpCiAgICAgZXhpdGNvZGUgPSAoKGV4aXRjb2Rl
ICYgMHhmZikgPDwgOCkgfCAoKGV4aXRjb2RlID4+IDgpICYgMHhmZik7CiAg
IHNpZ3Byb2NfcHJpbnRmICgiQ2FsbGluZyBFeGl0UHJvY2VzcyBuICVwLCBl
eGl0Y29kZSAlcCIsIG4sIGV4aXRjb2RlKTsKKyAgcHJvZmlsZV90aHJlYWRf
b2ZmKCk7CiAgIEV4aXRQcm9jZXNzIChleGl0Y29kZSk7CiB9CiAjIHVuZGVm
IHNlbGYKSW5kZXg6IHdpbnN1cC9jeWd3aW4vcHJvZmlsLmMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9j
eWd3aW4vcHJvZmlsLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOApkaWZm
IC11IC1yMS44IHByb2ZpbC5jCi0tLSB3aW5zdXAvY3lnd2luL3Byb2ZpbC5j
CTMwIEF1ZyAyMDEwIDAxOjU3OjM2IC0wMDAwCTEuOAorKysgd2luc3VwL2N5
Z3dpbi9wcm9maWwuYwkyOCBKdWwgMjAxMSAwMTo1MDowMCAtMDAwMApAQCAt
NywxNyArNywxNiBAQAogICAgVGhpcyBzb2Z0d2FyZSBpcyBhIGNvcHlyaWdo
dGVkIHdvcmsgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZQogICAg
Q3lnd2luIGxpY2Vuc2UuICBQbGVhc2UgY29uc3VsdCB0aGUgZmlsZSAiQ1lH
V0lOX0xJQ0VOU0UiIGZvcgogICAgZGV0YWlscy4gKi8KLQorI2luY2x1ZGUg
IndpbnN1cC5oIgogI2luY2x1ZGUgIndpbmxlYW4uaCIKICNpbmNsdWRlIDxz
eXMvdHlwZXMuaD4KICNpbmNsdWRlIDxlcnJuby5oPgotCisjaW5jbHVkZSAi
Z21vbi5oIgogI2luY2x1ZGUgPHByb2ZpbC5oPgotCiAjZGVmaW5lIFNMRUVQ
VElNRSAoMTAwMCAvIFBST0ZfSFopCi0KK2V4dGVybiBTRUNVUklUWV9BVFRS
SUJVVEVTIHNlY19ub25lX25paDsKIC8qIGdsb2JhbCBwcm9maW5mbyBmb3Ig
cHJvZmlsKCkgY2FsbCAqLwotc3RhdGljIHN0cnVjdCBwcm9maW5mbyBwcm9m
Oworc3RydWN0IHByb2ZpbmZvIE5PX0NPUFkgcHJvZjsKIAogLyogR2V0IHRo
ZSBwYyBmb3IgdGhyZWFkIFRIUiAqLwogCkBAIC04MCwxNiArNzksMzUgQEAK
IAogLyogU3RvcCBwcm9maWxpbmcgdG8gdGhlIHByb2ZpbGluZyBidWZmZXIg
cG9pbnRlZCB0byBieSBQLiAqLwogCi1zdGF0aWMgaW50CitpbnQKIHByb2Zp
bGVfb2ZmIChzdHJ1Y3QgcHJvZmluZm8gKnApCiB7CiAgIGlmIChwLT5wcm9m
dGhyKQogICAgIHsKLSAgICAgIFRlcm1pbmF0ZVRocmVhZCAocC0+cHJvZnRo
ciwgMCk7CisgICAgICBpZiAocHJvZi5xdWV1ZS53b3JrZXJfZW5hYmxlZCkK
KyAgICAgICAgeworICAgIAkgIGV4dGVybiB2b2lkIHByb2ZpbGVfdGhyZWFk
X29mZigpO3Byb2ZpbGVfdGhyZWFkX29mZigpOworICAgIAkgIGJvdW5kYnVm
ZmVyX2R0b3IoJnAtPnF1ZXVlKTsKKyAgICAgICAgICB3aGlsZShib3VuZGJ1
ZmZlcl9lbXB0eSgmcC0+cXVldWUpKQorICAgICAgICAgICAgIHsKKyAgICAg
ICAgICAgICAgICBtZXNzYWdlIG1zZzsKKyAgICAgICAgICAgICAgICBib3Vu
ZGJ1ZmZlcl9kZXF1ZXVlX25vbG9jaygmcC0+cXVldWUsICZtc2cpOworICAg
ICAgICAgICAgICAgIHVuc2lnbmVkIGlkeCA9IFBST0ZJRFggKCh1bnNpZ25l
ZCltc2cucHYsIHAtPmxvd3BjLCBwLT5zY2FsZSk7CisgICAgICAgICAgICAg
ICAgaWYgKCFtc2cudWxsdmFsKSBjb250aW51ZTsKKyAgICAgICAgICAgICAg
ICBfZ21vbnBhcmFtLmNvbW1fa2NvdW50W2lkeF0gKz0gbXNnLnVsbHZhbDsK
KworICAgICAgICAgICAgIH0KKyAgICAgICAgfQogICAgICAgQ2xvc2VIYW5k
bGUgKHAtPnByb2Z0aHIpOworICAgICAgQ2xvc2VIYW5kbGUocHJvZi5vcGVy
YXRpb25hbCk7CisgICAgICBwLT5wcm9mdGhyPTA7CisKICAgICB9CisgLy8g
ZWxzZSBhc3NlcnRpb24oIXByb2YucXVldWUud29ya2VyX2VuYWJsZWQpCisj
aWYgMAogICBpZiAocC0+dGFyZ3RocikKICAgICBDbG9zZUhhbmRsZSAocC0+
dGFyZ3Rocik7CisjZW5kaWYKICAgcmV0dXJuIDA7CiB9CiAKQEAgLTk4LDgg
KzExNiw3IEBACiBzdGF0aWMgaW50CiBwcm9maWxlX29uIChzdHJ1Y3QgcHJv
ZmluZm8gKnApCiB7Ci0gIERXT1JEIHRocmlkOwotCisjaWYgMAogICAvKiBn
ZXQgaGFuZGxlIGZvciB0aGlzIHRocmVhZCAqLwogICBpZiAoIUR1cGxpY2F0
ZUhhbmRsZSAoR2V0Q3VycmVudFByb2Nlc3MgKCksIEdldEN1cnJlbnRUaHJl
YWQgKCksCiAJCQlHZXRDdXJyZW50UHJvY2VzcyAoKSwgJnAtPnRhcmd0aHIs
IDAsIEZBTFNFLApAQCAtMTA4LDEyICsxMjUsMjEgQEAKICAgICAgIGVycm5v
ID0gRVNSQ0g7CiAgICAgICByZXR1cm4gLTE7CiAgICAgfQotCi0gIHAtPnBy
b2Z0aHIgPSBDcmVhdGVUaHJlYWQgKDAsIDAsIHByb2Z0aHJfZnVuYywgKHZv
aWQgKikgcCwgMCwgJnRocmlkKTsKKyNlbmRpZgorICBRdWVyeVBlcmZvcm1h
bmNlRnJlcXVlbmN5KChQTEFSR0VfSU5URUdFUikmcHJvZi5wZXJmZnJlcSk7
CisgIHByb2YucGVyZmZyZXEvPVBST0ZfSFo7CisgIGJvdW5kYnVmZmVyX2lu
aXRpYWwoJnByb2YucXVldWUpOworICAvL2JvdW5kYnVmZmVyX2N0b3IoJnBy
b2YucXVldWUpOworICBwcm9mLm9wZXJhdGlvbmFsPUNyZWF0ZVNlbWFwaG9y
ZUEoJnNlY19ub25lX25paCwwLDEsMCk7CisgIGV4dGVybiB2b2lkIHdmKGlu
dCk7CisgIC8vd2YoODApOworICBwLT5wcm9mdGhyID0gQ3JlYXRlVGhyZWFk
ICgmc2VjX25vbmVfbmloLCAwLCB3b3JrZXJfY29uc3VtZXIsICh2b2lkICop
IHAsIDAsIDApOwogICBpZiAoIXAtPnByb2Z0aHIpCiAgICAgeworI2lmIDAK
ICAgICAgIENsb3NlSGFuZGxlIChwLT50YXJndGhyKTsKICAgICAgIHAtPnRh
cmd0aHIgPSAwOworI2VuZGlmCiAgICAgICBlcnJubyA9IEVBR0FJTjsKICAg
ICAgIHJldHVybiAtMTsKICAgICB9CkBAIC0xNzAsNCArMTk2LDkgQEAKIHsK
ICAgcmV0dXJuIHByb2ZpbGVfY3RsICgmcHJvZiwgc2FtcGxlcywgc2l6ZSwg
b2Zmc2V0LCBzY2FsZSk7CiB9Cit2b2lkIHByb2ZpbGVfdGhyZWFkX29mZigp
IHsKKwlpbnQgZW5hYmxlZCA9IF9fc3luY19mZXRjaF9hbmRfYW5kKCZwcm9m
LnF1ZXVlLndvcmtlcl9lbmFibGVkLCAwKTsKKwlpZiAoZW5hYmxlZCkKKwkJ
V2FpdEZvclNpbmdsZU9iamVjdChwcm9mLnByb2Z0aHIsIElORklOSVRFKTsK
K30KIApJbmRleDogd2luc3VwL2N5Z3dpbi9wcm9maWwuaAo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5
Z3dpbi9wcm9maWwuaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40CmRpZmYg
LXUgLXIxLjQgcHJvZmlsLmgKLS0tIHdpbnN1cC9jeWd3aW4vcHJvZmlsLmgJ
MjggQXByIDIwMDMgMjA6MTA6NTMgLTAwMDAJMS40CisrKyB3aW5zdXAvY3ln
d2luL3Byb2ZpbC5oCTI4IEp1bCAyMDExIDAxOjUwOjAwIC0wMDAwCkBAIC03
LDEwICs3LDE0IEBACiBUaGlzIHNvZnR3YXJlIGlzIGEgY29weXJpZ2h0ZWQg
d29yayBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlCiBDeWd3aW4g
bGljZW5zZS4gIFBsZWFzZSBjb25zdWx0IHRoZSBmaWxlICJDWUdXSU5fTElD
RU5TRSIgZm9yCiBkZXRhaWxzLiAqLwotCisjaWZuZGVmIFBST0ZJTF9ICisj
ZGVmaW5lIFBST0ZJTF9ICisjaWZkZWYgX19jcGx1c3BsdXMKK2V4dGVybiAi
QyJ7CisjZW5kaWYKIC8qIHByb2ZpbGluZyBmcmVxdWVuY3kuICAoTm8gbGFy
Z2VyIHRoYW4gMTAwMCkgKi8KLSNkZWZpbmUgUFJPRl9IWgkJCTEwMAotCisj
ZGVmaW5lIFBST0ZfSFoJCQkxMDAwVUwKKyNpbmNsdWRlICJib3VuZGJ1ZmZl
ci5oIgogLyogY29udmVydCBhbiBhZGRyIHRvIGFuIGluZGV4ICovCiAjZGVm
aW5lIFBST0ZJRFgocGMsIGJhc2UsIHNjYWxlKQlcCiAgICh7CQkJCQkJCQkJ
XApAQCAtMzcsOCArNDEsMjIgQEAKICAgICB1X3Nob3J0ICpjb3VudGVyOwkJ
CS8qIHByb2ZpbGluZyBjb3VudGVycyAqLwogICAgIHVfbG9uZyBsb3dwYywg
aGlnaHBjOwkJLyogcmFuZ2UgdG8gYmUgcHJvZmlsZWQgKi8KICAgICB1X2lu
dCBzY2FsZTsJCQkvKiBzY2FsZSB2YWx1ZSBvZiBiaW5zICovCisgICAgdV9p
bnQ2NF90IHBlcmZmcmVxOworICAgIHN0cnVjdCBib3VuZGJ1ZmZlciBxdWV1
ZTsKKyAgICBfV0lOSEFORExFIG9wZXJhdGlvbmFsOwogfTsKLQorZXh0ZXJu
IHN0cnVjdCBwcm9maW5mbyBwcm9mOwogaW50IHByb2ZpbGVfY3RsKHN0cnVj
dCBwcm9maW5mbyAqLCBjaGFyICosIHNpemVfdCwgdV9sb25nLCB1X2ludCk7
CiBpbnQgcHJvZmlsKGNoYXIgKiwgc2l6ZV90LCB1X2xvbmcsIHVfaW50KTsK
IAorc3RydWN0IGNsaworeworICB1bnNpZ25lZCBpZHg7CisgIHZvaWQqIHBj
WzB4MTAwMDBdOworICB1bnNpZ25lZCBsb25nIGxvbmcgdHNjWzB4MTAwMDBd
OworfTsKK2V4dGVybiB2b2lkIHByb2ZpbGVfdGhyZWFkX29mZigpOworI2lm
ZGVmIF9fY3BsdXNwbHVzCit9CisjZW5kaWYKKyNlbmRpZgpJbmRleDogd2lu
c3VwL2N5Z3dpbi9zaWdwcm9jLmNjCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
UkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93aW5zdXAvY3lnd2luL3NpZ3Byb2Mu
Y2MsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzM5CmRpZmYgLXUgLXIxLjMz
OSBzaWdwcm9jLmNjCi0tLSB3aW5zdXAvY3lnd2luL3NpZ3Byb2MuY2MJNiBK
dWwgMjAxMSAxMjozOTozNiAtMDAwMAkxLjMzOQorKysgd2luc3VwL2N5Z3dp
bi9zaWdwcm9jLmNjCTI4IEp1bCAyMDExIDAxOjUwOjAwIC0wMDAwCkBAIC05
MjksNyArOTI5LDcgQEAKICAgICBGb3JjZUNsb3NlSGFuZGxlMSAoaCwgY2hp
bGRoUHJvYyk7CiAgIHJldHVybiBleGl0X2NvZGU7CiB9Ci0KK2V4dGVybiAi
QyIgdm9pZCBwcm9maWxlX3RocmVhZF9vZmYoKTsKIGJvb2wKIGNoaWxkX2lu
Zm9fZm9yazo6YWJvcnQgKGNvbnN0IGNoYXIgKmZtdCwgLi4uKQogewpAQCAt
OTM4LDEwICs5MzgsMTQgQEAKICAgICAgIHZhX2xpc3QgYXA7CiAgICAgICB2
YV9zdGFydCAoYXAsIGZtdCk7CiAgICAgICBzdHJhY2VfdnByaW50ZiAoU0lH
UCwgZm10LCBhcCk7CisgICAgICBwcm9maWxlX3RocmVhZF9vZmYoKTsKICAg
ICAgIEV4aXRQcm9jZXNzIChFWElUQ09ERV9GT1JLX0ZBSUxFRCk7CiAgICAg
fQogICBpZiAocmV0cnkgPiAwKQorICB7CisJcHJvZmlsZV90aHJlYWRfb2Zm
KCk7CiAgICAgRXhpdFByb2Nlc3MgKEVYSVRDT0RFX1JFVFJZKTsKKyAgfQog
ICByZXR1cm4gZmFsc2U7CiB9CiAKSW5kZXg6IHdpbnN1cC9jeWd3aW4vc3Ry
YWNlLmNjCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMv
c3JjL3NyYy93aW5zdXAvY3lnd2luL3N0cmFjZS5jYyx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS43MgpkaWZmIC11IC1yMS43MiBzdHJhY2UuY2MKLS0tIHdp
bnN1cC9jeWd3aW4vc3RyYWNlLmNjCTQgSnVsIDIwMTEgMTU6MjU6MzYgLTAw
MDAJMS43MgorKysgd2luc3VwL2N5Z3dpbi9zdHJhY2UuY2MJMjggSnVsIDIw
MTEgMDE6NTA6MDAgLTAwMDAKQEAgLTMwLDYgKzMwLDEwIEBACiBjbGFzcyBz
dHJhY2UgTk9fQ09QWSBzdHJhY2U7CiAKICNpZm5kZWYgTk9TVFJBQ0UKK2V4
dGVybiAiQyIgX19hdHRyaWJ1dGVfXygoYWx3YXlzX2lubGluZSkpIGludCBz
dHJhY2VfYWN0aXZlKCkKK3sKKyAgcmV0dXJuIHN0cmFjZS5hY3RpdmUoKTsK
K30KIAogdm9pZAogc3RyYWNlOjphY3RpdmF0ZSAoKQpJbmRleDogd2luc3Vw
L2N5Z3dpbi9jb25maWcvaTM4Ni9wcm9maWxlLmgKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4v
Y29uZmlnL2kzODYvcHJvZmlsZS5oLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjMKZGlmZiAtdSAtcjEuMyBwcm9maWxlLmgKLS0tIHdpbnN1cC9jeWd3aW4v
Y29uZmlnL2kzODYvcHJvZmlsZS5oCTE0IEZlYiAyMDExIDA5OjQyOjE5IC0w
MDAwCTEuMworKysgd2luc3VwL2N5Z3dpbi9jb25maWcvaTM4Ni9wcm9maWxl
LmgJMjggSnVsIDIwMTEgMDE6NTA6MDAgLTAwMDAKQEAgLTU3LDkgKzU3LDcg
QEAKIAkgKiBTYXZlIHJlZ2lzdGVycywgc2luY2UgdGhpcyBtYXkgYmUgY2Fs
bGVkIGZyb20JCVwKIAkgKiB0aGUgcHJvbG9ndWUgb2YgYSByZWdwYXJtIGZ1
bmN0aW9uLgkJCQlcCiAJICovCQkJCQkJCQlcCi0JX19hc20gX192b2xhdGls
ZV9fICgicHVzaGwgJWVheFxuXHQiCQkJCVwKLQkJCSAgICAicHVzaGwgJWVj
eFxuXHQiCQkJCVwKLQkJIAkgICAgInB1c2hsICVlZHgiKTsJCQkJXAorCV9f
YXNtIF9fdm9sYXRpbGVfXyAoInB1c2hhbCIpOwkJCQlcCiAJLyoJCQkJCQkJ
CVwKIAkgKiBmaW5kIHRoZSByZXR1cm4gYWRkcmVzcyBmb3IgbWNvdW50LAkJ
CQlcCiAJICogYW5kIHRoZSByZXR1cm4gYWRkcmVzcyBmb3IgbWNvdW50J3Mg
Y2FsbGVyLgkJCVwKQEAgLTc3LDcgKzc1LDUgQEAKIAkvKgkJCQkJCQkJXAog
CSAqIFJlc3RvcmUgcmVnaXN0ZXJzLgkJCQkJCVwKIAkgKi8JCQkJCQkJCVwK
LQlfX2FzbSBfX3ZvbGF0aWxlX18gKCJwb3BsICVlZHhcblx0IgkJCQlcCi0J
CQkgICAgInBvcGwgJWVjeFxuXHQiCQkJCVwKLQkJCSAgICAicG9wbCAlZWF4
Iik7CQkJCVwKKwlfX2FzbSBfX3ZvbGF0aWxlX18gKCJwb3BhbCIpOwkJCQlc
CiB9CkluZGV4OiB3aW5zdXAvY3lnd2luL2luY2x1ZGUvc3lzL3N0cmFjZS5o
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Ny
Yy93aW5zdXAvY3lnd2luL2luY2x1ZGUvc3lzL3N0cmFjZS5oLHYKcmV0cmll
dmluZyByZXZpc2lvbiAxLjI3CmRpZmYgLXUgLXIxLjI3IHN0cmFjZS5oCi0t
LSB3aW5zdXAvY3lnd2luL2luY2x1ZGUvc3lzL3N0cmFjZS5oCTE3IEp1biAy
MDExIDA4OjMwOjI3IC0wMDAwCTEuMjcKKysrIHdpbnN1cC9jeWd3aW4vaW5j
bHVkZS9zeXMvc3RyYWNlLmgJMjggSnVsIDIwMTEgMDE6NTA6MDAgLTAwMDAK
QEAgLTUxLDggKzUxLDggQEAKICAgdm9pZCB2cHJudGYgKHVuc2lnbmVkLCBj
b25zdCBjaGFyICpmdW5jLCBjb25zdCBjaGFyICosIHZhX2xpc3QgYXApIC8q
X19hdHRyaWJ1dGVfXyAoKHJlZ3Bhcm0oMykpKSovOwogICB2b2lkIHdtIChp
bnQgbWVzc2FnZSwgaW50IHdvcmQsIGludCBsb24pIF9fYXR0cmlidXRlX18g
KChyZWdwYXJtKDMpKSk7CiAgIHZvaWQgd3JpdGVfY2hpbGRwaWQgKGNoaWxk
X2luZm8mLCB1bnNpZ25lZCBsb25nKSBfX2F0dHJpYnV0ZV9fICgocmVncGFy
bSAoMikpKTsKLSAgYm9vbCBhdHRhY2hlZCAoKSBjb25zdCB7cmV0dXJuIF9h
Y3RpdmUgPT0gMzt9Ci0gIGJvb2wgYWN0aXZlICgpIGNvbnN0IHtyZXR1cm4g
X2FjdGl2ZSAmIDE7fQorICBjb25zdCBib29sIGlubGluZSBhdHRhY2hlZCAo
KSBjb25zdCB7cmV0dXJuIF9hY3RpdmUgPT0gMzt9CisgIGNvbnN0IGJvb2wg
aW5saW5lIGFjdGl2ZSAoKSBjb25zdCB7cmV0dXJuIF9hY3RpdmUgJiAxO30K
ICAgdW5zaWduZWQgY2hhciYgYWN0aXZlX3ZhbCAoKSB7cmV0dXJuIF9hY3Rp
dmU7fQogfTsKIApAQCAtOTQsMTIgKzk0LDEyIEBACiAKIHZvaWQgc21hbGxf
cHJpbnRmIChjb25zdCBjaGFyICosIC4uLik7CiB2b2lkIHN0cmFjZV9wcmlu
dGYgKHVuc2lnbmVkLCBjb25zdCBjaGFyICpmdW5jLCBjb25zdCBjaGFyICos
IC4uLik7Ci0KK2ludCBzdHJhY2VfYWN0aXZlKCk7CiAjaWZkZWYgX19jcGx1
c3BsdXMKIH0KICNlbmRpZgogCi0jaWZkZWYgX19jcGx1c3BsdXMKKyNpZiAx
CiAKICNpZmRlZiBOT1NUUkFDRQogI2RlZmluZSBzdHJhY2VfcHJpbnRmX3dy
YXAod2hhdCwgZm10LCBhcmdzLi4uKQpAQCAtMTA3LDE0ICsxMDcsMTQgQEAK
ICNlbHNlCiAjZGVmaW5lIHN0cmFjZV9wcmludGZfd3JhcCh3aGF0LCBmbXQs
IGFyZ3MuLi4pIFwKICAgICgodm9pZCkgKHtcCi0JaWYgKChfU1RSQUNFXyAj
IyB3aGF0ICYgX1NUUkFDRV9TWVNURU0pIHx8IHN0cmFjZS5hY3RpdmUgKCkp
IFwKLQkgIHN0cmFjZS5wcm50ZihfU1RSQUNFXyAjIyB3aGF0LCBfX1BSRVRU
WV9GVU5DVElPTl9fLCBmbXQsICMjIGFyZ3MpOyBcCisJaWYgKChfU1RSQUNF
XyAjIyB3aGF0ICYgX1NUUkFDRV9TWVNURU0pIHx8IHN0cmFjZV9hY3RpdmUg
KCkpIFwKKwkgIHN0cmFjZV9wcmludGYoX1NUUkFDRV8gIyMgd2hhdCwgX19Q
UkVUVFlfRlVOQ1RJT05fXywgZm10LCAjIyBhcmdzKTsgXAogCTA7IFwKICAg
ICB9KSkKICNkZWZpbmUgc3RyYWNlX3ByaW50Zl93cmFwMSh3aGF0LCBmbXQs
IGFyZ3MuLi4pIFwKICAgICAoKHZvaWQpICh7XAotCWlmICgoX1NUUkFDRV8g
IyMgd2hhdCAmIF9TVFJBQ0VfU1lTVEVNKSB8fCBzdHJhY2UuYWN0aXZlICgp
KSBcCi0JICBzdHJhY2UucHJudGYoKF9TVFJBQ0VfICMjIHdoYXQpIHwgX1NU
UkFDRV9OT1RBTEwsIF9fUFJFVFRZX0ZVTkNUSU9OX18sIGZtdCwgIyMgYXJn
cyk7IFwKKwlpZiAoKF9TVFJBQ0VfICMjIHdoYXQgJiBfU1RSQUNFX1NZU1RF
TSkgfHwgc3RyYWNlX2FjdGl2ZSAoKSkgXAorCSAgc3RyYWNlX3ByaW50Zigo
X1NUUkFDRV8gIyMgd2hhdCkgfCBfU1RSQUNFX05PVEFMTCwgX19QUkVUVFlf
RlVOQ1RJT05fXywgZm10LCAjIyBhcmdzKTsgXAogCTA7IFwKICAgICB9KSkK
ICNkZWZpbmUgc3RyYWNlX3ZwcmludGYod2hhdCwgZm10LCBhcmcpIFwK

--------------070101060201060309040908
Content-Type: text/plain;
 name="thread_profile_stuff.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="thread_profile_stuff.diff"
Content-length: 15767

LS0tIC9kZXYvbnVsbAkyMDExLTA3LTMxIDE3OjQxOjM4LjAwMDAwMDAwMCAr
MDkwMAorKysgd2luc3VwL2N5Z3dpbi9ib3VuZGJ1ZmZlci5jCTIwMTEtMDct
MTMgMDI6Mjg6MTkuMTQwNjI1MDAwICswOTAwCkBAIC0wLDAgKzEsMTQzIEBA
CisjaW5jbHVkZSAid2luc3VwLmgiDQorI2luY2x1ZGUgIndpbmxlYW4uaCIN
CisjaW5jbHVkZSAicHJvZmlsLmgiDQorI2luY2x1ZGUgImdtb24uaCINCisj
aW5jbHVkZSA8c3RkaW50Lmg+DQorI2luY2x1ZGUgPHN0ZGxpYi5oPg0KKyNp
bmNsdWRlIDxzdGRib29sLmg+DQorI2luY2x1ZGUgImJvdW5kYnVmZmVyLmgi
DQorZXh0ZXJuIGJvb2wgTk9fQ09QWSBpbl9mb3JrZWU7DQorZXh0ZXJuIFNF
Q1VSSVRZX0FUVFJJQlVURVMgc2VjX25vbmVfbmloOw0KK3ZvaWQgc2FuaXR5
X2NoZWNrX3Byb2ZpbGVfdGhyZWFkKCkgew0KKwkvKg0KKwkgaWYoIV9fc3lu
Y19mZXRjaF9hbmRfYWRkKCZwcm9mLnF1ZXVlLndvcmtlcl9lbmFibGVkLDAp
KQ0KKwkgew0KKwkgdm9pZCBtb25jb250cm9sKGludCk7DQorCSBtb25jb250
cm9sKDApOw0KKwkgbW9uY29udHJvbCgxKTsNCisJIFdhaXRGb3JTaW5nbGVP
YmplY3QocHJvZi5vcGVyYXRpb25hbCxJTkZJTklURSk7DQorCSB9DQorCSAq
Lw0KK30NCitzdGF0aWMgY29uc3QgY2hhciBoZXhfc3RyW10gPSAiMDEyMzQ1
Njc4OUFCQ0RFRiI7DQordm9pZCB3ZihpbnQgdmFyKSB7DQorCWludCBhOw0K
Kwl3aGlsZSAodmFyICE9IDApIHsNCisJCVdyaXRlRmlsZShHZXRTdGRIYW5k
bGUoU1REX0VSUk9SX0hBTkRMRSksICZoZXhfc3RyW3ZhciAmIDB4Zl0sIDEs
ICZhLA0KKwkJCQkwKTsNCisJCXZhciA9IHZhciA+PiA0Ow0KKwl9DQorCWNo
YXIgYnVmID0gJ1xuJzsNCisJV3JpdGVGaWxlKEdldFN0ZEhhbmRsZShTVERf
RVJST1JfSEFORExFKSwgJmJ1ZiwgMSwgJmEsIDApOw0KKwlGbHVzaEZpbGVC
dWZmZXJzKEdldFN0ZEhhbmRsZShTVERfRVJST1JfSEFORExFKSk7DQorfQ0K
K0RXT1JEIF9fc3RkY2FsbA0KK3dvcmtlcl9jb25zdW1lcih2b2lkKiBhcmcp
IHsNCisvL3dmKDE2KTsNCisvL3dmKEdldEN1cnJlbnRQcm9jZXNzSWQoKSk7
DQorLy93ZihHZXRDdXJyZW50VGhyZWFkSWQoKSk7DQorCS8vV2FpdEZvclNp
bmdsZU9iamVjdChwcm9mLnF1ZXVlLm1lbWJlcltNVVRFWF0uaCwgSU5GSU5J
VEUpOw0KKwlpZiAocHJvZi5xdWV1ZS5pbml0aWFsKSB7DQorCQlib3VuZGJ1
ZmZlcl9jdG9yKCZwcm9mLnF1ZXVlKTsNCisJCXByb2YucXVldWUuaW5pdGlh
bCA9IDA7DQorCX0NCisJRW50ZXJDcml0aWNhbFNlY3Rpb24oJnByb2YucXVl
dWUubWVtYmVyW01VVEVYXS5zKTsNCisJcHJvZi5xdWV1ZS53b3JrZXJfZW5h
YmxlZCA9IDE7DQorCVJlbGVhc2VTZW1hcGhvcmUocHJvZi5vcGVyYXRpb25h
bCwgMSwgMCk7DQorCS8vUmVsZWFzZU11dGV4KHByb2YucXVldWUubWVtYmVy
W01VVEVYXS5oKTsNCisJTGVhdmVDcml0aWNhbFNlY3Rpb24oJnByb2YucXVl
dWUubWVtYmVyW01VVEVYXS5zKTsNCisJd2hpbGUgKHByb2YucXVldWUud29y
a2VyX2VuYWJsZWQpIHsNCisJCW1lc3NhZ2UgbXNnOw0KKwkJaWYgKCFib3Vu
ZGJ1ZmZlcl9kZXF1ZXVlKCZwcm9mLnF1ZXVlLCAmbXNnKSkNCisJCQljb250
aW51ZTsNCisJCXVuc2lnbmVkIGlkeCA9IFBST0ZJRFggKCh1bnNpZ25lZClt
c2cucHYsIHByb2YubG93cGMsIHByb2YuDQorCQkJCXNjYWxlKTsNCisJCWlm
ICghbXNnLnVsbHZhbCkNCisJCQljb250aW51ZTsNCisJCV9nbW9ucGFyYW0u
Y29tbV9rY291bnRbaWR4XSArPSBtc2cudWxsdmFsOw0KKwl9DQorCXJldHVy
biAwOw0KK30NCisjZGVmaW5lIGJ1ZmZlcm1ldGhvZCh4KSBib3VuZGJ1ZmZl
cl8jI3gNCit2b2lkIGJ1ZmZlcm1ldGhvZChjdG9yKShzdHJ1Y3QgYm91bmRi
dWZmZXIqIHRoaXMpIHsNCisJdGhpcy0+bWVtYmVyW0ZST05UXS5pID0gdGhp
cy0+bWVtYmVyW0JBQ0tdLmkgPSAwOw0KKwlJbml0aWFsaXplQ3JpdGljYWxT
ZWN0aW9uQW5kU3BpbkNvdW50KCZ0aGlzLT5tZW1iZXJbTVVURVhdLnMsIDB4
NDAwMDAwMDApOw0KKwkvL3RoaXMtPm1lbWJlcltNVVRFWF0uaCA9IENyZWF0
ZU11dGV4QSgmc2VjX25vbmVfbmloLCAwLCAwKTsNCisJdGhpcy0+bWVtYmVy
W0VNUFRZXS5oID0gQ3JlYXRlU2VtYXBob3JlQSgmc2VjX25vbmVfbmloLCBT
WkJVRiwgU1pCVUYsIDApOw0KKwl0aGlzLT5tZW1iZXJbRklMTF0uaCA9IENy
ZWF0ZVNlbWFwaG9yZUEoJnNlY19ub25lX25paCwgMCwgU1pCVUYsIDApOw0K
K30NCit2b2lkIGJ1ZmZlcm1ldGhvZChpbml0aWFsKShzdHJ1Y3QgYm91bmRi
dWZmZXIqIHRoaXMpIHsNCisJdGhpcy0+aW5pdGlhbD0xOw0KKwl0aGlzLT5t
ZW1iZXJbTVVURVhdLmkgPSB0aGlzLT5tZW1iZXJbRU1QVFldLmkgPSB0aGlz
LT5tZW1iZXJbRklMTF0uaSA9IC0zOw0KK30NCit2b2lkIGJ1ZmZlcm1ldGhv
ZChkdG9yKShzdHJ1Y3QgYm91bmRidWZmZXIqIHRoaXMpIHsNCisJQ2xvc2VI
YW5kbGUodGhpcy0+bWVtYmVyW01VVEVYXS5oKTsNCisJQ2xvc2VIYW5kbGUo
dGhpcy0+bWVtYmVyW0VNUFRZXS5oKTsNCisJQ2xvc2VIYW5kbGUodGhpcy0+
bWVtYmVyW0ZJTExdLmgpOw0KKwl0aGlzLT5tZW1iZXJbTVVURVhdLmkgPSB0
aGlzLT5tZW1iZXJbRU1QVFldLmkgPSB0aGlzLT5tZW1iZXJbRklMTF0uaSA9
IC0zOw0KK30NCitzdGF0aWMgX19hdHRyaWJ1dGVfXygodXNlZCkpIHZvaWQg
YnVmZmVybWV0aG9kKGNoZWNrKShzdHJ1Y3QgYm91bmRidWZmZXIqIHRoaXMp
IHsNCisJaWYgKCEoKHRoaXMtPm1lbWJlcltGUk9OVF0uaSA+IC0xKSAmJiAo
dGhpcy0+bWVtYmVyW0ZST05UXS5pIDwgU1pCVUYpKSkNCisJCWFzbSB2b2xh
dGlsZSgiaW50ICQzXHRcbiIpOw0KKwlpZiAoISgodGhpcy0+bWVtYmVyW0JB
Q0tdLmkgPiAtMSkgJiYgKHRoaXMtPm1lbWJlcltCQUNLXS5pIDwgU1pCVUYp
KSkNCisJCWFzbSB2b2xhdGlsZSgiaW50ICQzXHRcbiIpOw0KK30NCitpbnQg
YnVmZmVybWV0aG9kKGVucXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhp
cywgbWVzc2FnZSBvYmopIHsNCisJaWYgKHByb2YucXVldWUuaW5pdGlhbCkg
ew0KKwkJYnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSh0aGlzLCBvYmop
Ow0KKwkJcmV0dXJuIDE7DQorCX0NCisJaW50IHJldCA9IFdhaXRGb3JTaW5n
bGVPYmplY3QodGhpcy0+bWVtYmVyW0VNUFRZXS5oLCAxMDApOw0KKwlpZiAo
cmV0ICE9IFdBSVRfT0JKRUNUXzANCisJKQ0KKwkJcmV0dXJuIDA7DQorCS8q
cmV0ID0gV2FpdEZvclNpbmdsZU9iamVjdCh0aGlzLT5tZW1iZXJbTVVURVhd
LmgsIDEwMCk7DQorCSBpZiAocmV0ICE9IFdBSVRfT0JKRUNUXzANCisJICkN
CisJIHJldHVybiAwOw0KKwkgKi8NCisJRW50ZXJDcml0aWNhbFNlY3Rpb24o
JnByb2YucXVldWUubWVtYmVyW01VVEVYXS5zKTsNCisJX19hdHRyaWJ1dGVf
XygoYWx3YXlzX2lubGluZSkpIHZvaWQgYnVmZmVybWV0aG9kKGVucXVldWVf
bm9sb2NrKSgNCisJCQlzdHJ1Y3QgYm91bmRidWZmZXIqLCBtZXNzYWdlKTsN
CisJYnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSh0aGlzLCBvYmopOw0K
KwkvL1JlbGVhc2VNdXRleCh0aGlzLT5tZW1iZXJbTVVURVhdLmgpOw0KKwlM
ZWF2ZUNyaXRpY2FsU2VjdGlvbigmcHJvZi5xdWV1ZS5tZW1iZXJbTVVURVhd
LnMpOw0KKwlSZWxlYXNlU2VtYXBob3JlKHRoaXMtPm1lbWJlcltGSUxMXS5o
LCAxLCAwKTsNCisJcmV0dXJuIDE7DQorfQ0KKw0KK2ludCBidWZmZXJtZXRo
b2QoZW1wdHkpKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhpcykgew0KKwkvL2lm
KFdhaXRGb3JTaW5nbGVPYmplY3QodGhpcy0+bWVtYmVyW01VVEVYXS5oLCAw
KSE9V0FJVF9PQkpFQ1RfMCkgcmV0dXJuIC0xOw0KKwlpbnQgcmV0ID0gdGhp
cy0+bWVtYmVyW0ZST05UXS5pID09IHRoaXMtPm1lbWJlcltCQUNLXS5pOw0K
KwkvL1JlbGVhc2VTZW1hcGhvcmUodGhpcy0+bWVtYmVyW01VVEVYXS5oLCAx
LCAwKTsNCisJcmV0dXJuIHJldDsNCit9DQoraW50IGJ1ZmZlcm1ldGhvZChk
ZXF1ZXVlKShzdHJ1Y3QgYm91bmRidWZmZXIqIHRoaXMsIG1lc3NhZ2UqIHJl
c3VsdCkgew0KKwlpZiAocHJvZi5xdWV1ZS5pbml0aWFsKSB7DQorCQlidWZm
ZXJtZXRob2QoZGVxdWV1ZV9ub2xvY2spKHRoaXMsIHJlc3VsdCk7DQorCQly
ZXR1cm4gMTsNCisJfQ0KKwlpbnQgcmV0ID0gV2FpdEZvclNpbmdsZU9iamVj
dCh0aGlzLT5tZW1iZXJbRklMTF0uaCwgMTAwKTsNCisJaWYgKHJldCAhPSBX
QUlUX09CSkVDVF8wDQorCSkNCisJCXJldHVybiAwOw0KKwkvL1dhaXRGb3JT
aW5nbGVPYmplY3QodGhpcy0+bWVtYmVyW01VVEVYXS5oLCBJTkZJTklURSk7
DQorCUVudGVyQ3JpdGljYWxTZWN0aW9uKCZwcm9mLnF1ZXVlLm1lbWJlcltN
VVRFWF0ucyk7DQorCWJ1ZmZlcm1ldGhvZChkZXF1ZXVlX25vbG9jaykodGhp
cywgcmVzdWx0KTsNCisJLy9SZWxlYXNlTXV0ZXgodGhpcy0+bWVtYmVyW01V
VEVYXS5oKTsNCisJTGVhdmVDcml0aWNhbFNlY3Rpb24oJnByb2YucXVldWUu
bWVtYmVyW01VVEVYXS5zKTsNCisJUmVsZWFzZVNlbWFwaG9yZSh0aGlzLT5t
ZW1iZXJbRU1QVFldLmgsIDEsIDApOw0KKwlyZXR1cm4gMTsNCit9DQorX19h
dHRyaWJ1dGVfXygoYWx3YXlzX2lubGluZSkpIHZvaWQgYnVmZmVybWV0aG9k
KGVucXVldWVfbm9sb2NrKSgNCisJCXN0cnVjdCBib3VuZGJ1ZmZlciogdGhp
cywgbWVzc2FnZSBvYmopIHsNCisJdGhpcy0+YnVmZmVyW3RoaXMtPm1lbWJl
cltCQUNLXS5pXSA9IG9iajsNCisJdGhpcy0+bWVtYmVyW0JBQ0tdLmkgPSAo
dGhpcy0+bWVtYmVyW0JBQ0tdLmkgKyAxKSAlIFNaQlVGOw0KK30NCitfX2F0
dHJpYnV0ZV9fKChhbHdheXNfaW5saW5lKSkgdm9pZCBidWZmZXJtZXRob2Qo
ZGVxdWV1ZV9ub2xvY2spKA0KKwkJc3RydWN0IGJvdW5kYnVmZmVyKiB0aGlz
LCBtZXNzYWdlKiByZXN1bHQpIHsNCisJLypib3VuZGJ1ZmZlcl9jaGVjayh0
aGlzKTsqLw0KKwkoKnJlc3VsdCkgPSB0aGlzLT5idWZmZXJbdGhpcy0+bWVt
YmVyW0ZST05UXS5pXTsNCisJdGhpcy0+bWVtYmVyW0ZST05UXS5pID0gKHRo
aXMtPm1lbWJlcltGUk9OVF0uaSArIDEpICUgU1pCVUY7DQorfQ0KKyN1bmRl
ZiBidWZmZXJtZXRob2QNCi0tLSAvZGV2L251bGwJMjAxMS0wNy0zMSAxNzo0
MTozOC4wMDAwMDAwMDAgKzA5MDAKKysrIHdpbnN1cC9jeWd3aW4vYm91bmRi
dWZmZXIuaAkyMDExLTA3LTEzIDAyOjIyOjIxLjYyNTAwMDAwMCArMDkwMApA
QCAtMCwwICsxLDY0IEBACisjaWZuZGVmIEJPVU5EQlVGRkVSX0hfDQorI2Rl
ZmluZSBCT1VOREJVRkZFUl9IXw0KKyNpbmNsdWRlIDxzdGRpby5oPg0KKyNp
ZmRlZiBfX2NwbHVzcGx1cw0KK2V4dGVybiAiQyJ7DQorI2VuZGlmDQorI2Rl
ZmluZSBhc3NlcnRpb24oeCkgaWYgKCEoeCkpIFwNCisgIHsgXA0KKyAgYXNt
IHZvbGF0aWxlICgiaW50ICQzIik7XA0KKyAgfSBcDQorICBlbHNlIHt9Ow0K
Kw0KK3N0cnVjdCBtZXNzYWdlDQorICB7DQorI2lmIDANCisgICAgdW5zaWdu
ZWQgbG9uZyBsb25nIGxkYXRhOw0KKyAgICB1bnNpZ25lZCBsb25nIGlkYXRh
WzJdOw0KKyNlbmRpZg0KKyAgICAgIHZvaWQqIHB2Ow0KKyAgICAgIHVuc2ln
bmVkIGxvbmcgbG9uZyB1bGx2YWw7DQorICB9Ow0KK3R5cGVkZWYgc3RydWN0
IG1lc3NhZ2UgbWVzc2FnZTsNCitleHRlcm4NCisjaWYgX19jcGx1c3BsdXMN
CisiQyINCisjZW5kaWYNCit2b2lkIHNhbml0eV9jaGVja19wcm9maWxlX3Ro
cmVhZCgpOw0KK2V4dGVybiBEV09SRCBfX3N0ZGNhbGwgd29ya2VyX2NvbnN1
bWVyKHZvaWQqIGFyZyk7DQordW5pb24gYXZvaWR0eXBlY2hlY2sNCit7DQor
ICBIQU5ETEUgaDsNCisgIENSSVRJQ0FMX1NFQ1RJT04gczsNCisgIGludCBp
Ow0KK307DQorZW51bSBiY29uc3R7DQorICAgIE1VVEVYLEZJTEwsRU1QVFks
RlJPTlQsQkFDSyxTWk1FTUJFUixTWkJVRj0xNjM4NA0KKyAgfTsNCitzdHJ1
Y3QgYm91bmRidWZmZXINCit7DQorICB1bmlvbiBhdm9pZHR5cGVjaGVjayBt
ZW1iZXJbU1pNRU1CRVJdOw0KKyAgbWVzc2FnZSBidWZmZXJbU1pCVUZdOw0K
KyAgaW50IHdvcmtlcl9lbmFibGVkOw0KKyAgaW50IGluaXRpYWw7DQorDQor
ICAvKg0KKyAgdm9pZCAoKmN0b3IpKHN0cnVjdCBib3VuZGJ1ZmZlciopOw0K
KyAgdm9pZCAoKmR0b3IpKHN0cnVjdCBib3VuZGJ1ZmZlciopOw0KKyAgdm9p
ZCAoKmVucXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciosdW5pb24gbWVzc2Fn
ZSopOw0KKyAgdW5pb24gbWVzc2FnZSogKCpkZXF1ZXVlKShzdHJ1Y3QgYm91
bmRidWZmZXIqKTsNCisgICovDQorfTsNCisjZGVmaW5lIGJ1ZmZlcm1ldGhv
ZCh4KSBib3VuZGJ1ZmZlcl8jI3gNCitleHRlcm4gdm9pZCBidWZmZXJtZXRo
b2QoY3Rvcikoc3RydWN0IGJvdW5kYnVmZmVyKik7DQorZXh0ZXJuIHZvaWQg
YnVmZmVybWV0aG9kKGluaXRpYWwpKHN0cnVjdCBib3VuZGJ1ZmZlciopOw0K
K2V4dGVybiB2b2lkIGJ1ZmZlcm1ldGhvZChkdG9yKShzdHJ1Y3QgYm91bmRi
dWZmZXIqKTsNCitleHRlcm4gaW50IGJ1ZmZlcm1ldGhvZChlbnF1ZXVlKShz
dHJ1Y3QgYm91bmRidWZmZXIqLG1lc3NhZ2UpOw0KK2V4dGVybiBpbnQgYnVm
ZmVybWV0aG9kKGRlcXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciosbWVzc2Fn
ZSopOw0KK2V4dGVybiB2b2lkIGJ1ZmZlcm1ldGhvZChkZXF1ZXVlX25vbG9j
aykoc3RydWN0IGJvdW5kYnVmZmVyKixtZXNzYWdlKik7DQorZXh0ZXJuIGlu
dCBidWZmZXJtZXRob2QoZW1wdHkpKHN0cnVjdCBib3VuZGJ1ZmZlciopOw0K
KyN1bmRlZiBidWZmZXJtZXRob2QNCisjaWZkZWYgX19jcGx1c3BsdXMNCit9
DQorI2VuZGlmDQorI2VuZGlmIC8qIEJPVU5EQlVGRkVSX0hfICovDQotLS0g
L2Rldi9udWxsCTIwMTEtMDctMzEgMTc6NDE6MzguMDAwMDAwMDAwICswOTAw
CisrKyB3aW5zdXAvY3lnd2luL2djcnQxLmMJMjAxMS0wNy0xMiAwODowMTo0
OS4yODEyNTAwMDAgKzA5MDAKQEAgLTAsMCArMSw0MiBAQAorLyogZ2NydDAu
YworCisgICBDb3B5cmlnaHQgMTk5OCwgMTk5OSwgMjAwMCwgMjAwMSBSZWQg
SGF0LCBJbmMuCisKK1RoaXMgZmlsZSBpcyBwYXJ0IG9mIEN5Z3dpbi4KKwor
VGhpcyBzb2Z0d2FyZSBpcyBhIGNvcHlyaWdodGVkIHdvcmsgbGljZW5zZWQg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZQorQ3lnd2luIGxpY2Vuc2UuICBQbGVh
c2UgY29uc3VsdCB0aGUgZmlsZSAiQ1lHV0lOX0xJQ0VOU0UiIGZvcgorZGV0
YWlscy4gKi8KKyNpbmNsdWRlICJ3aW5zdXAuaCIKKyNpbmNsdWRlICJ3aW5s
ZWFuLmgiCisjaW5jbHVkZSA8c3lzL3R5cGVzLmg+CisjaW5jbHVkZSA8c3Rk
bGliLmg+CisjaW5jbHVkZSA8c3RkYm9vbC5oPgorZXh0ZXJuIHVfY2hhciBl
dGV4dCBhc20gKCJldGV4dCIpOworZXh0ZXJuIHVfY2hhciBlcHJvbCBhc20g
KCJfX2Vwcm9sIik7CitleHRlcm4gdm9pZCBfbWNsZWFudXAgKHZvaWQpOwor
ZXh0ZXJuIHZvaWQgbW9uc3RhcnR1cCAodV9sb25nLCB1X2xvbmcpOworCitl
eHRlcm4gdm9pZCBfbW9uc3RhcnR1cDIgKHZvaWQpOworCisvKiBzdGFydHVw
IGluaXRpYWxpemF0aW9uIGZvciAtcGcgc3VwcG9ydCAqLworCit2b2lkCitf
bW9uc3RhcnR1cDIgKHZvaWQpCit7CisgIHN0YXRpYyBOT19DT1BZX0lOSVQg
aW50IGNhbGxlZD0wOworCisgIC8qIEd1YXJkIGFnYWluc3QgbXVsdGlwbGUg
Y2FsbHMgdGhhdCBtYXkgaGFwcGVuIGlmIERMTHMgYXJlIGxpbmtlZAorICAg
ICB3aXRoIHByb2ZpbGUgb3B0aW9uIHNldCBhcyB3ZWxsLiBBZGRlZGUgc2lk
ZSBiZW5lZml0IGlzIHRoYXQgaXQKKyAgICAgbWFrZXMgcHJvZmlsaW5nIGJh
Y2t3YXJkIGNvbXBhdGlibGUgKEdDQyB1c2VkIHRvIGVtaXQgYSBjYWxsIHRv
CisgICAgIF9tb25zdGFydHVwIHdoZW4gY29tcGlsaW5nIG1haW4gd2l0aCBw
cm9maWxpbmcgZW5hYmxlZCkuICAqLworICBpZiAoY2FsbGVkKyspCisgICAg
cmV0dXJuOworICBleHRlcm4gdm9pZCB3ZihpbnQpOworICAvL3dmKDY0KTsK
KyAgbW9uc3RhcnR1cCAoKHVfbG9uZykgJmVwcm9sLCAodV9sb25nKSAmZXRl
eHQpOworfQorCithc20gKCIudGV4dCIpOworYXNtICgiX19lcHJvbDoiKTsK
KwotLS0gL2Rldi9udWxsCTIwMTEtMDctMzEgMTc6NDE6MzguMDAwMDAwMDAw
ICswOTAwCisrKyB3aW5zdXAvY3lnd2luL2luc3RydW1lbnQuYwkyMDExLTA3
LTE5IDIyOjI5OjUzLjE1NjI1MDAwMCArMDkwMApAQCAtMCwwICsxLDExOCBA
QAorLyoNCisgKiBpbnN0cnVtZW50LmMNCisgKg0KKyAqICBDcmVhdGVkIG9u
OiAyMDExLiAzLiAyLg0KKyAqICAgICAgQXV0aG9yOiBBZG1pbmlzdHJhdG9y
DQorICovDQorI2luY2x1ZGUgPHN0ZGludC5oPg0KKyNpbmNsdWRlICJ3aW5z
dXAuaCINCisjaW5jbHVkZSAid2lubGVhbi5oIg0KKyNpbmNsdWRlICJwcm9m
aWwuaCINCisjaW5jbHVkZSAiYm91bmRidWZmZXIuaCINCisjaW5jbHVkZSAi
Z21vbi5oIg0KK0RXT1JEIE5PX0NPUFkgdGxza2V5Ow0KK2V4dGVybiBEV09S
RCBXSU5BUEkgR2V0TGFzdEVycm9yICh2b2lkKTsNCit2b2lkIFdJTkFQSSBT
ZXRMYXN0RXJyb3IoRFdPUkQpOw0KK3ZvaWQgX19hdHRyaWJ1dGVfXyAoKG5v
X2luc3RydW1lbnRfZnVuY3Rpb24pKQ0KK19fY3lnX3Byb2ZpbGVfZnVuY19j
dG9yKCkNCit7DQorICB0bHNrZXkgPSBUbHNBbGxvYygpOw0KK30NCit2b2lk
IF9fYXR0cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkNCitf
X2N5Z19wcm9maWxlX3Rsc19jdG9yKCkNCit7DQorICB2b2lkICogbWFwID0g
KHZvaWQqKSBMb2NhbEFsbG9jKDB4NDAsIHNpemVvZihzdHJ1Y3QgY2xrKSk7
DQorI2lmIDANCisgIGFzc2VydGlvbihtYXApDQorI2VuZGlmDQorICBUbHNT
ZXRWYWx1ZSh0bHNrZXksIG1hcCk7DQorICBzdHJ1Y3QgY2xrKiBjbGtpbmZv
ID0gKHN0cnVjdCBjbGsqKSBtYXA7DQorICBjbGtpbmZvLT5pZHggPSAwOw0K
K30NCit2b2lkIF9fYXR0cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0
aW9uKSkNCitfX2N5Z19wcm9maWxlX3Rsc19kdG9yKCkNCit7DQorICB2b2lk
ICogbWFwID0gVGxzR2V0VmFsdWUodGxza2V5KTsNCisgIGlmIChtYXApDQor
ICAgIExvY2FsRnJlZShtYXApOw0KKyAgVGxzU2V0VmFsdWUodGxza2V5LCAw
KTsNCisNCit9DQordm9pZCBfX2F0dHJpYnV0ZV9fICgobm9faW5zdHJ1bWVu
dF9mdW5jdGlvbikpDQorX19jeWdfcHJvZmlsZV9mdW5jX2R0b3IoKQ0KK3sN
CisgIFRsc0ZyZWUodGxza2V5KTsNCisgIHRsc2tleT0tMTsNCit9DQorZXh0
ZXJuIGludCBzX3NjYWxlOw0KK3N0YXRpYyB2b2lkIF9fYXR0cmlidXRlX18g
KChhbHdheXNfaW5saW5lLG5vX2luc3RydW1lbnRfZnVuY3Rpb24pKQ0KK19f
Y3lnX3NldF9jbGsoc3RydWN0IGNsayogY2xraW5mbywgdm9pZCAqY2FsbGVy
LCBpbnQgc3RhdGUpDQorew0KKyAgcmVnaXN0ZXIgaW50IGlkeDsNCisgIG1l
c3NhZ2UgbXNnOw0KKyAgc3dpdGNoIChzdGF0ZSkNCisgICAgew0KKyAgY2Fz
ZSAwOg0KKyAgICBpZiAoIWNsa2luZm8tPmlkeCkNCisgICAgICBnb3RvIHNr
aXA7DQorICAgIGlkeCA9IC0tY2xraW5mby0+aWR4Ow0KKyNpZiAwDQorICAg
IGFzc2VydGlvbigoaWR4Pj0wKSYmKGlkeDwweGZmZmYpKQ0KKyAgICBhc3Nl
cnRpb24oY2xraW5mby0+cGNbaWR4XSA9PSBjYWxsZXIpDQorI2VuZGlmDQor
ICAgIGNsa2luZm8tPnRzY1tpZHhdID0gX19idWlsdGluX2lhMzJfcmR0c2Mo
KSAtIGNsa2luZm8tPnRzY1tpZHhdOw0KKyAgICBtc2cucHYgPSBjbGtpbmZv
LT5wY1tpZHhdOw0KKyAgICBtc2cudWxsdmFsID0gY2xraW5mby0+dHNjW2lk
eF07DQorICAgIGlmICgmcHJvZi5xdWV1ZS53b3JrZXJfZW5hYmxlZCkNCisg
ICAgICBib3VuZGJ1ZmZlcl9lbnF1ZXVlKCZwcm9mLnF1ZXVlLCBtc2cpOw0K
KyAgICBicmVhazsNCisgIGNhc2UgMToNCisgICAgaWR4ID0gY2xraW5mby0+
aWR4Ow0KKyNpZiAwDQorICAgIGFzc2VydGlvbigoaWR4Pj0wKSYmKGlkeDww
eGZmZmYpKQ0KKyNlbmRpZg0KKyAgICBjbGtpbmZvLT5wY1tpZHhdID0gY2Fs
bGVyOw0KKyAgICBjbGtpbmZvLT50c2NbaWR4XSA9IF9fYnVpbHRpbl9pYTMy
X3JkdHNjKCk7DQorICAgIGNsa2luZm8tPmlkeCsrOw0KKyAgICBicmVhazsN
CisgIGRlZmF1bHQ6DQorICAgIGdvdG8gc2tpcDsNCisgICAgYnJlYWs7DQor
ICAgIH07DQorICBza2lwOiBkbw0KKyAgICB7DQorICAgIH0NCisgIHdoaWxl
ICgwKTsNCit9DQordm9pZCBfX2F0dHJpYnV0ZV9fICgobm9faW5zdHJ1bWVu
dF9mdW5jdGlvbikpDQorX19jeWdfcHJvZmlsZV9mdW5jX2VudGVyKHZvaWQq
IGNhbGxlciwgdm9pZCogc2l0ZSkNCit7DQorICBEV09SRCBlcnI9R2V0TGFz
dEVycm9yKCk7DQorICBzdHJ1Y3QgY2xrKiBjbGtpbmZvID0gKHN0cnVjdCBj
bGsqKSBUbHNHZXRWYWx1ZSh0bHNrZXkpOw0KKyAgaWYgKCFjbGtpbmZvKQ0K
KyAgICB7DQorI2lmIDANCisgICAgICBhc3NlcnRpb24oY2xraW5mbyk7DQor
I2VuZGlmDQorICAgICAgZ290byB0cmFwOw0KKyAgICB9DQorICBfX2N5Z19z
ZXRfY2xrKGNsa2luZm8sIGNhbGxlciwgMSk7DQorICB0cmFwOg0KKyAgU2V0
TGFzdEVycm9yKGVycik7DQorfQ0KK3ZvaWQgX19hdHRyaWJ1dGVfXyAoKG5v
X2luc3RydW1lbnRfZnVuY3Rpb24pKQ0KK19fY3lnX3Byb2ZpbGVfZnVuY19l
eGl0KHZvaWQqIGNhbGxlciwgdm9pZCogc2l0ZSkNCit7DQorICBEV09SRCBl
cnI9R2V0TGFzdEVycm9yKCk7DQorICBzdHJ1Y3QgY2xrKiBjbGtpbmZvID0g
KHN0cnVjdCBjbGsqKSBUbHNHZXRWYWx1ZSh0bHNrZXkpOw0KKyAgaWYgKCFj
bGtpbmZvKQ0KKyAgICB7DQorI2lmIDANCisgICAgICBhc3NlcnRpb24oY2xr
aW5mbyk7DQorI2VuZGlmDQorICAgICAgZ290byB0cmFwOw0KKyAgICB9DQor
ICBfX2N5Z19zZXRfY2xrKGNsa2luZm8sIGNhbGxlciwgMCk7DQorICB0cmFw
Og0KKyAgU2V0TGFzdEVycm9yKGVycik7DQorfQ0KLS0tIC9kZXYvbnVsbAky
MDExLTA3LTMxIDE3OjQxOjM4LjAwMDAwMDAwMCArMDkwMAorKysgd2luc3Vw
L2N5Z3dpbi9pbnN0cnVtZW50LmgJMjAxMS0wMy0xOCAxODoxMzozOS4wMzEy
NTAwMDAgKzA5MDAKQEAgLTAsMCArMSwyNCBAQAorLyoNCisgKiBpbnN0cnVt
ZW50LmgNCisgKg0KKyAqICBDcmVhdGVkIG9uOiAyMDExLiAzLiAxOC4NCisg
KiAgICAgIEF1dGhvcjogQWRtaW5pc3RyYXRvcg0KKyAqLw0KKw0KKyNpZm5k
ZWYgSU5TVFJVTUVOVF9IXw0KKyNkZWZpbmUgSU5TVFJVTUVOVF9IXw0KKyNp
ZmRlZiBfX2NwbHVzcGx1cw0KK2V4dGVybiAiQyJ7DQorI2VuZGlmDQorICB2
b2lkIF9fYXR0cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkN
CisgIF9fY3lnX3Byb2ZpbGVfZnVuY19jdG9yKCk7DQorICB2b2lkIF9fYXR0
cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkNCisgIF9fY3ln
X3Byb2ZpbGVfZnVuY19kdG9yKCk7DQorICB2b2lkIF9fYXR0cmlidXRlX18g
KChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkNCisgIF9fY3lnX3Byb2ZpbGVf
dGxzX2N0b3IoKTsNCisgIHZvaWQgX19hdHRyaWJ1dGVfXyAoKG5vX2luc3Ry
dW1lbnRfZnVuY3Rpb24pKQ0KKyAgX19jeWdfcHJvZmlsZV90bHNfZHRvcigp
Ow0KKyNpZmRlZiBfX2NwbHVzcGx1cw0KK30NCisjZW5kaWYNCisjZW5kaWYg
LyogSU5TVFJVTUVOVF9IXyAqLw0K

--------------070101060201060309040908--
