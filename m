Return-Path: <cygwin-patches-return-6536-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 3823 invoked by alias); 4 Jun 2009 01:42:02 -0000
Received: (qmail 3809 invoked by uid 22791); 4 Jun 2009 01:42:01 -0000
X-Spam-Check-By: sourceware.org
Received: from pool-98-110-183-121.bstnma.fios.verizon.net (HELO cgf.cx) (98.110.183.121)     by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Thu, 04 Jun 2009 01:41:55 +0000
Received: from ednor.cgf.cx (ednor.casa.cgf.cx [192.168.187.5]) 	by cgf.cx (Postfix) with ESMTP id B097C13C0C3 	for <cygwin-patches@cygwin.com>; Wed,  3 Jun 2009 21:41:45 -0400 (EDT)
Received: by ednor.cgf.cx (Postfix, from userid 201) 	id A4BDD2006D; Wed,  3 Jun 2009 21:41:45 -0400 (EDT)
Date: Thu, 04 Jun 2009 01:42:00 -0000
From: Christopher Faylor <cgf-use-the-mailinglist-please@cygwin.com>
To: cygwin-patches@cygwin.com
Subject: Re: [PATCH?]  Separate pthread patches, #2 take 3
Message-ID: <20090604014145.GB15999@ednor.casa.cgf.cx>
Reply-To: cygwin-patches@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
References: <4A270656.8090704@gmail.com> <4A270BA4.3080602@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4A270BA4.3080602@gmail.com>
User-Agent: Mutt/1.5.19 (2009-01-05)
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
X-SW-Source: 2009-q2/txt/msg00078.txt.bz2

On Thu, Jun 04, 2009 at 12:47:48AM +0100, Dave Korn wrote:
>Dave Korn wrote:
>>   The attached patch implements ilockexch and ilockcmpexch, using the inline
>> asm definition from __arch_compare_and_exchange_val_32_acq in
>> glibc-2.10.1/sysdeps/i386/i486/bits/atomic.h, trivially expanded inline rather
>> than in its original preprocessor macro form.
>
>  The attached patch does likewise, but adds a "memory" clobber.  It generates
>correct code:
>
>L186:
>	.loc 3 127 0
>	movl	__ZN13pthread_mutex7mutexesE+8, %eax	 # mutexes.head, D.28599
>	movl	%eax, 36(%ebx)	 # D.28599, <variable>.next
>	.loc 2 60 0
>/APP
> # 60 "/gnu/winsup/src/winsup/cygwin/winbase.h" 1
>	lock cmpxchgl %ebx, __ZN13pthread_mutex7mutexesE+8	 # this,
> # 0 "" 2
>/NO_APP
>	movl	%eax, -12(%ebp)	 # tmp68, ret
>	.loc 2 61 0
>	movl	-12(%ebp), %eax	 # ret, D.28596
>	.loc 3 126 0
>	cmpl	%eax, 36(%ebx)	 # D.28596, <variable>.next
>	jne	L186	 #,
>
>
>although as you see it has some needless register motion as it stores %eax to
>the stack slot for ret and reloads it.  Still, this is now almost as good as
>the code generated by my original patch.
>
>winsup/cygwin/ChangeLog
>
>	* winbase.h (ilockexch):  Fix asm constraints.
>	(ilockcmpexch):  Likewise.
>
>
>  Ok-ish?

I thought that, given your last message to cygwin-developers, you were
going to go off and figure out the best of four implementations.  Is this
the result of that investigation?

cgf
