Return-Path: <corinna-cygwin@cygwin.com>
Received: from mout.kundenserver.de (mout.kundenserver.de [212.227.17.10])
 by sourceware.org (Postfix) with ESMTPS id 7AC143857C5A
 for <cygwin-patches@cygwin.com>; Mon, 13 Jul 2020 07:18:59 +0000 (GMT)
DMARC-Filter: OpenDMARC Filter v1.3.2 sourceware.org 7AC143857C5A
Authentication-Results: sourceware.org;
 dmarc=none (p=none dis=none) header.from=cygwin.com
Authentication-Results: sourceware.org;
 spf=fail smtp.mailfrom=corinna-cygwin@cygwin.com
Received: from calimero.vinschen.de ([217.91.18.234]) by
 mrelayeu.kundenserver.de (mreue109 [212.227.15.183]) with ESMTPSA (Nemesis)
 id 1MaIvT-1kOyqF1Fob-00WGtX for <cygwin-patches@cygwin.com>; Mon, 13 Jul 2020
 09:18:58 +0200
Received: by calimero.vinschen.de (Postfix, from userid 500)
 id E8ED2A8084B; Mon, 13 Jul 2020 09:18:57 +0200 (CEST)
Date: Mon, 13 Jul 2020 09:18:57 +0200
From: Corinna Vinschen <corinna-cygwin@cygwin.com>
To: cygwin-patches@cygwin.com
Subject: Re: [PATCH] Fix incorrect sign-extension of pointer in 32-bit acl
 __to_entry
Message-ID: <20200713071857.GK514059@calimero.vinschen.de>
Reply-To: cygwin-patches@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
References: <001101d65627$6b726260$42572720$@cl.cam.ac.uk>
 <20200710083232.GD514059@calimero.vinschen.de>
 <17ec8f4865d648ab80d259266f315de7@metastack.com>
 <20200710155858.GG514059@calimero.vinschen.de>
 <9adcf190b395491da501825821366f52@metastack.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <9adcf190b395491da501825821366f52@metastack.com>
X-Provags-ID: V03:K1:UNCvGLTUSeQaHNY+H2joen0txqxPWC58kuZKQtS55RPVtq1i522
 cLITMZ6ga4HJIu+QYpE95vw2HxwUNDmXSgWxnwO5Z9qga4sdWLojCUxcxjYJb86Q+75sa18
 Qd54Y+kP4S33+z650qejD6whaFDVHIrSVxaIpLfJsh7q+GQJRuL09j37COIBEYGp8mw3rLj
 F871qHJqUc8ICSO24sf/g==
X-UI-Out-Filterresults: notjunk:1;V03:K0:NLhsUt0OPeU=:NtCtul8i51QhDLsIrtqMI2
 SXRtk1Qn3uX5N8oz+QbQbmQUymcpLfL8UP49UzzsLXNy0qcDOVkmHaIoaypGOTXmRdjdoVYE9
 XMVvT4BwnMC5HKAgolx8j+XIbYK/lKcVHECmtS46JTuepqUyvd1QtkAd1wo55vv5TYXKHDlbe
 kptbv1zgO0B0YK/l9mAyFfckZjLZFeKVnWE6cexGdfCaAmB9WvCfmtzyICipKvYjOpBR3LPnr
 mPYdqN2lSquK0nbkBikOBkzzucJoGh/aiB3cLjMBP841nIPFGuK7w7TuLi6ilp9o8Bbh3kXYp
 /Q96XtxFNj0TnZSqZ6e6ZL8VB0qug7ogg153vccIlj4tkDC3vRkFEbXhWjshztVbztXHR4oEg
 D3Piey+88D3Uda51Cb+2xghcyktszlmdmXhsNkZN9lN4t92fALS4V2mGqmN+1N33NDWjLqpdE
 sS7RFKKXJvA4J2koqnVFxYFw3ojinOC8JNSQpQim4KcXMCU0/VwdikCyWxv+lYn6vw9KgtZmy
 VswfSr/vYZJr87PZdNNkQQZFHDaaEvsFrWXALbK2m71sGBHn4bPDlkt/cmfzeMQAWKelbQBZW
 y/AIStr7tlAl+BkRD2OyMKxoZlGBK7LyobSo0b7B5fhzjUuIN1KLLTb/mYJZp9QwPI4mWWLZs
 tM9qVek/sXj3OOPnj7XqIvjAFHGkmceatZEKxxfochtCfgS0Nd0ptigOximS4w1g3UIZr8MV5
 bCX/Agrtl+KaOntSqC32efhumQa3/TfcJNTf18GJxYg5LK7/BnmX8T1qQutroz22+vKbNh8yK
 0WfN0iXeGOMQBRJAJdu6CBNJz3j4i9HRTeZQd8RvioGG+juP48tGnn1cuqH0K5EyZsz5pIli1
 B+kwhQAB6ZilDOJsNxGQ==
X-Spam-Status: No, score=-98.8 required=5.0 tests=BAYES_00,
 GOOD_FROM_CORINNA_CYGWIN, KAM_DMARC_STATUS, KAM_SHORT, RCVD_IN_DNSWL_NONE,
 RCVD_IN_MSPIKE_H2, SPF_HELO_NONE, SPF_NEUTRAL,
 TXREP autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on
 server2.sourceware.org
X-BeenThere: cygwin-patches@cygwin.com
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Cygwin core component patch submission and discussion
 <cygwin-patches.cygwin.com>
List-Unsubscribe: <http://cygwin.com/mailman/options/cygwin-patches>,
 <mailto:cygwin-patches-request@cygwin.com?subject=unsubscribe>
List-Archive: <https://cygwin.com/pipermail/cygwin-patches/>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Help: <mailto:cygwin-patches-request@cygwin.com?subject=help>
List-Subscribe: <http://cygwin.com/mailman/listinfo/cygwin-patches>,
 <mailto:cygwin-patches-request@cygwin.com?subject=subscribe>
X-List-Received-Date: Mon, 13 Jul 2020 07:19:01 -0000

On Jul 10 18:31, David Allsopp via Cygwin-patches wrote:
> Corinna Vinschen wrote:
> > On Jul 10 15:22, David Allsopp via Cygwin-patches wrote:
> > > Corinna Vinschen wrote:
> > > > On Jul  9 20:30, David Allsopp via Cygwin-patches wrote:
> > > > > I have some code where the acl_t returned by get_file_acl is
> > > > > allocated at 0x80038248. As a result the acl_entry_t generated by
> > > > > acl_get_entry has an "index" of -1, since the pointer was sign-
> > extended to 64-bits.
> > > > >
> > > > > My fix is trivial and simply casts the pointer to uintptr_t first.
> > > >
> > > > Pushed.  I still don't quite understand what the compiler is
> > > > thinking there, sign-extending a pointer when casted to an unsigend
> > > > int type, but your patch works, so all is well, I guess.
> > >
> > > Thank you - it is indeed hard to imagine when you'd ever want that
> > behaviour!
> > 
> > I wonder if this is a bug in x86 gcc... Jon?
> 
> I put it to our C gurus in the OCaml team - one (who has also written
> a formally verified C compiler which on purpose 0-extends in this
> case) observed that GCC does the same for ARM32 and another (who has
> occasionally delighted in abusing language memory models to concoct
> highly bizarre, but legal, abuses of undefined behaviour) found
> https://gcc.gnu.org/onlinedocs/gcc/Arrays-and-pointers-implementation.html...

"Bizarre" is the right description here :)


Corinna

-- 
Corinna Vinschen
Cygwin Maintainer
