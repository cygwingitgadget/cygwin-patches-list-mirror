Return-Path: <cygwin-patches-return-2115-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 2879 invoked by alias); 26 Apr 2002 08:57:53 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 2808 invoked from network); 26 Apr 2002 08:57:52 -0000
X-Authentication-Warning: atacama.four-d.de: mail set sender to <tpfaff@gmx.net> using -f
Date: Fri, 26 Apr 2002 01:57:00 -0000
From: Thomas Pfaff <tpfaff@gmx.net>
To: cygwin-patches@cygwin.com
Subject: [PATCH] pthread cancellation
Message-ID: <Pine.WNT.4.44.0204261041190.243-101000@algeria.intern.net>
X-X-Sender: pfaff@antarctica.intern.net
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="993715-30566-1019811466=:243"
X-SW-Source: 2002-q2/txt/msg00099.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

--993715-30566-1019811466=:243
Content-Type: TEXT/PLAIN; charset=US-ASCII
Content-length: 965

The patch provides a pthread cancellation implementation.

Regards,
Thomas

2002-04-26  Thomas Pfaff  <tpfaff@gmx.net>

	* include/pthread.h (PTHREAD_CANCELED): Defined a reasonable
	value.
	* thread.h (pthread::cancel_event): New member.
	(__pthread_cancel_self): New prototype.
	* thread.cc (pthread::pthread): Initialize cancel_event, changed
	initializer for mutex from 0 to PTHREAD_MUTEX_INITIALIZER.
	This is required for the main thread.
	(pthread::~pthread): Close cancel_event if needed.
	(pthread::create): Create cancel_event, stop thread creation if
	not sucessfull.
	(__pthread_cancel): Added support for deferred and asynchronous
	cancellation.
	(__pthread_cancel_self): New function.
	(__pthread_setcancelstate): Added lock for race with
	__pthread_cancel, check if oldstate == NULL.
	(__pthread_setcanceltype): Added lock for race with
	__pthread_cancel, check if oldtype == NULL.
	(__pthread_testcancel): Added support for deferred cancellation.



--993715-30566-1019811466=:243
Content-Type: APPLICATION/octet-stream; name="pthread_cancel.patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.WNT.4.44.0204261057460.243@algeria.intern.net>
Content-Description: 
Content-Disposition: attachment; filename="pthread_cancel.patch"
Content-length: 10476

ZGlmZiAtdXJwIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJl
YWQuaCBzcmMvd2luc3VwL2N5Z3dpbi9pbmNsdWRlL3B0aHJlYWQuaAotLS0g
c3JjLm9sZC93aW5zdXAvY3lnd2luL2luY2x1ZGUvcHRocmVhZC5oCVRodSBB
cHIgMjUgMTA6MTE6MzAgMjAwMgorKysgc3JjL3dpbnN1cC9jeWd3aW4vaW5j
bHVkZS9wdGhyZWFkLmgJVGh1IEFwciAyNSAxNzozMzoyNyAyMDAyCkBAIC00
Miw3ICs0Miw3IEBAIGV4dGVybiAiQyIKICNkZWZpbmUgUFRIUkVBRF9DQU5D
RUxfRU5BQkxFIDAKICNkZWZpbmUgUFRIUkVBRF9DQU5DRUxfREVGRVJSRUQg
MAogI2RlZmluZSBQVEhSRUFEX0NBTkNFTF9ESVNBQkxFIDEKLSNkZWZpbmUg
UFRIUkVBRF9DQU5DRUxFRAorI2RlZmluZSBQVEhSRUFEX0NBTkNFTEVEICgo
dm9pZCAqKS0xKQogLyogdGhpcyBzaG91bGQgYmUgYSB2YWx1ZSB0aGF0IGNh
biBuZXZlciBiZSBhIHZhbGlkIGFkZHJlc3MgKi8KICNkZWZpbmUgUFRIUkVB
RF9DT05EX0lOSVRJQUxJWkVSICh2b2lkICopMjEKICNkZWZpbmUgUFRIUkVB
RF9DUkVBVEVfREVUQUNIRUQgMQpkaWZmIC11cnAgc3JjLm9sZC93aW5zdXAv
Y3lnd2luL3RocmVhZC5jYyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MK
LS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2MJRnJpIEFwciAy
NiAwODoyMjo1NyAyMDAyCisrKyBzcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQu
Y2MJRnJpIEFwciAyNiAwOTo0MjozNiAyMDAyCkBAIC00OCw2ICs0OCwyNiBA
QCBkZXRhaWxzLiAqLwogCiBleHRlcm4gaW50IHRocmVhZHNhZmU7CiAKKyNp
ZiBkZWZpbmVkKF9NX0lYODYpIHx8IGRlZmluZWQoX1g4Nl8pCisjZGVmaW5l
IFBST0dDVFIoQ29udGV4dCkgICgoQ29udGV4dCkuRWlwKQorI2VuZGlmCisg
CisjaWYgZGVmaW5lZChfTUlQU18pCisjZGVmaW5lIFBST0dDVFIoQ29udGV4
dCkgICgoQ29udGV4dCkuRmlyKQorI2VuZGlmCisgCisjaWYgZGVmaW5lZChf
QUxQSEFfKQorI2RlZmluZSBQUk9HQ1RSKENvbnRleHQpICAoKENvbnRleHQp
LkZpcikKKyNlbmRpZgorIAorI2lmIGRlZmluZWQoX1BQQ18pCisjZGVmaW5l
IFBST0dDVFIoQ29udGV4dCkgICgoQ29udGV4dCkuSWFyKQorI2VuZGlmCisg
CisjaWYgIWRlZmluZWQoUFJPR0NUUikKKyNlcnJvciBNb2R1bGUgY29udGFp
bnMgQ1BVLXNwZWNpZmljIGNvZGU7IG1vZGlmeSBhbmQgcmVjb21waWxlLgor
I2VuZGlmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKKwogLypwdGhy
ZWFkX2tleV9kZXN0cnVjdG9yX2xpc3QgY2xhc3M6IHRvLWJlIHRocmVhZHNh
ZmUgc2luZ2xlIGxpbmtlZCBsaXN0CiAgKkZJWE1FOiBQdXQgbWUgaW4gYSBk
ZWRpY2F0ZWQgZmlsZSwgb3IgYSBsZWFzdCBhIHRvb2xzIGFyZWEgIQogICov
CkBAIC0zNDYsMTMgKzM2NiwxNiBAQCBNVGludGVyZmFjZTo6Zml4dXBfYWZ0
ZXJfZm9yayAodm9pZCkKIH0KIAogcHRocmVhZDo6cHRocmVhZCAoKTp2ZXJp
ZnlhYmxlX29iamVjdCAoUFRIUkVBRF9NQUdJQyksIHdpbjMyX29ial9pZCAo
MCksCi0gICAgICAgICAgICAgICAgICAgIGNhbmNlbHN0YXRlICgwKSwgY2Fu
Y2VsdHlwZSAoMCksIG11dGV4KE5VTEwpLAorICAgICAgICAgICAgICAgICAg
ICBjYW5jZWxzdGF0ZSAoMCksIGNhbmNlbHR5cGUgKDApLCBjYW5jZWxfZXZl
bnQgKDApLAorICAgICAgICAgICAgICAgICAgICBtdXRleCAoKHB0aHJlYWRf
bXV0ZXggKilQVEhSRUFEX01VVEVYX0lOSVRJQUxJWkVSKSwKICAgICAgICAg
ICAgICAgICAgICAgY2xlYW51cF9oYW5kbGVycyhOVUxMKSwgam9pbmVyKE5V
TEwpCiB7CiB9CiAKIHB0aHJlYWQ6On5wdGhyZWFkICgpCiB7CisgIGlmIChj
YW5jZWxfZXZlbnQpCisgICAgQ2xvc2VIYW5kbGUgKGNhbmNlbF9ldmVudCk7
CiAgIGlmICh3aW4zMl9vYmpfaWQpCiAgICAgQ2xvc2VIYW5kbGUgKHdpbjMy
X29ial9pZCk7CiAgIF9fcHRocmVhZF9tdXRleF9kZXN0cm95KCZtdXRleCk7
CkBAIC0zODcsNiArNDEwLDE2IEBAIHB0aHJlYWQ6OmNyZWF0ZSAodm9pZCAq
KCpmdW5jKSAodm9pZCAqKSwKICAgICAgIHJldHVybjsKICAgICB9CiAKKyAg
Y2FuY2VsX2V2ZW50ID0gOjpDcmVhdGVFdmVudCAoTlVMTCxUUlVFLEZBTFNF
LE5VTEwpOworICBpZiAoIWNhbmNlbF9ldmVudCkKKyAgICB7CisgICAgICBz
eXN0ZW1fcHJpbnRmICgiY291bGRuJ3QgY3JlYXRlIGNhbmNlbCBldmVudCwg
dGhpcyAlcCBMYXN0RXJyb3IgJWQiLCB0aGlzLCBHZXRMYXN0RXJyb3IgKCkg
KTsKKyAgICAgIC8qd2UgbmVlZCB0aGUgZXZlbnQgZm9yIGNvcnJlY3QgYmVo
YXZpb3VyICovCisgICAgICBtYWdpYyA9IDA7CisgICAgICByZXR1cm47Cisg
ICAgfQorCisKICAgd2luMzJfb2JqX2lkID0gOjpDcmVhdGVUaHJlYWQgKCZz
ZWNfbm9uZV9uaWgsIGF0dHIuc3RhY2tzaXplLAogCQkJCShMUFRIUkVBRF9T
VEFSVF9ST1VUSU5FKSB0aHJlYWRfaW5pdF93cmFwcGVyLAogCQkJCXRoaXMs
IENSRUFURV9TVVNQRU5ERUQsICZ0aHJlYWRfaWQpOwpAQCAtMTAwMCwzMyAr
MTAzMyw0NCBAQCBfX3B0aHJlYWRfY2xlYW51cCAocHRocmVhZF90IHRocmVh
ZCkKIGludAogX19wdGhyZWFkX2NhbmNlbCAocHRocmVhZF90IHRocmVhZCkK
IHsKKyAgcHRocmVhZF90IHNlbGYgPSBfX3B0aHJlYWRfc2VsZiAoKTsKKwog
ICBpZiAodmVyaWZ5YWJsZV9vYmplY3RfaXN2YWxpZCAoJnRocmVhZCwgUFRI
UkVBRF9NQUdJQykgIT0gVkFMSURfT0JKRUNUKQogICAgIHJldHVybiBFU1JD
SDsKLSAgaWYgKHRocmVhZC0+Y2FuY2Vsc3RhdGUgPT0gUFRIUkVBRF9DQU5D
RUxfRU5BQkxFKQorCisgIGlmKCBfX3B0aHJlYWRfZXF1YWwoJnRocmVhZCwg
JnNlbGYgKSApCiAgICAgewotI2lmIDAKLSAgICAgIC8qb25jZSBhbGwgdGhl
IGZ1bmN0aW9ucyBjYWxsIHRlc3RjYW5jZWwgKCksIHdlIHdpbGwgZG8gdGhp
cyAqLwotICAgICAgaWYgKHRocmVhZC0+Y2FuY2VsdHlwZSA9PSBQVEhSRUFE
X0NBTkNFTF9ERUZFUlJFRCkKLQl7Ci0JfQotICAgICAgZWxzZQorICAgICAg
X19wdGhyZWFkX2NhbmNlbF9zZWxmICgpOworICAgIH0KKworICBfX3B0aHJl
YWRfbXV0ZXhfbG9jayAoJnRocmVhZC0+bXV0ZXgpOworCisgIGlmICh0aHJl
YWQtPmNhbmNlbHR5cGUgPT0gUFRIUkVBRF9DQU5DRUxfREVGRVJSRUQgfHwK
KyAgICAgIHRocmVhZC0+Y2FuY2Vsc3RhdGUgPT0gUFRIUkVBRF9DQU5DRUxf
RElTQUJMRSkKIAl7Ci0JICAvKnBvc3NpYmxlIEZJWE1FOiB0aGlzIGZ1bmN0
aW9uIGlzIG1lYW50IHRvIHJldHVybiBhc3luY2hyb25vdXNseQotCSAgICpm
cm9tIHRoZSBjYW5jZWxsYXRpb24gcm91dGluZSBhY3R1YWxseSBmaXJpbmcu
IFNvIHdlIG1heSBuZWVkIHNvbWUgc29ydAotCSAgICpvZiBzaWduYWwgdG8g
YmUgc2VudCB0aGF0IGlzIGltbWVkaWF0ZWx5IHJlY2lldmVkIGFuZCBhY3Rl
ZCBvbi4KLQkgICAqLwotCSAgX19wdGhyZWFkX2NsZWFudXAgKHRocmVhZCk7
CisgICAgICAvLyBjYW5jZWwgZGVmZXJyZWQKKyAgICAgIFNldEV2ZW50ICh0
aHJlYWQtPmNhbmNlbF9ldmVudCk7CisgICAgICBfX3B0aHJlYWRfbXV0ZXhf
dW5sb2NrICgmdGhyZWFkLT5tdXRleCk7CisgICAgICByZXR1cm4gMDsKIAl9
Ci0jZW5kaWYKKworICAvLyBjYW5jZWwgYXN5bmNocm9ub3VzCisgIFN1c3Bl
bmRUaHJlYWQgKHRocmVhZC0+d2luMzJfb2JqX2lkKTsKKyAgaWYgKFdhaXRG
b3JTaW5nbGVPYmplY3QgKHRocmVhZC0+d2luMzJfb2JqX2lkLCAwKSA9PSBX
QUlUX1RJTUVPVVQpCisgICAgeworICAgICAgQ09OVEVYVCBjb250ZXh0Owor
ICAgICAgY29udGV4dC5Db250ZXh0RmxhZ3MgPSBDT05URVhUX0NPTlRST0w7
CisgICAgICBHZXRUaHJlYWRDb250ZXh0ICh0aHJlYWQtPndpbjMyX29ial9p
ZCwgJmNvbnRleHQpOworICAgICAgUFJPR0NUUihjb250ZXh0KSA9IChEV09S
RCkgX19wdGhyZWFkX2NhbmNlbF9zZWxmOworICAgICAgU2V0VGhyZWFkQ29u
dGV4dCAodGhyZWFkLT53aW4zMl9vYmpfaWQsICZjb250ZXh0KTsKICAgICB9
Ci0vKiByZXR1cm4gMDsKLSovCisgIFJlc3VtZVRocmVhZCAodGhyZWFkLT53
aW4zMl9vYmpfaWQpOwogCi0gIHJldHVybiBFU1JDSDsKLS8qCi0gIHdlIHJl
dHVybiBFU1JDSCB1bnRpbCBhbGwgdGhlIHJlcXVpcmVkIGZ1bmN0aW9ucyBj
YWxsIHRlc3RjYW5jZWwgKCk7Ci0gIHRoaXMgd2lsbCBnaXZlIGFwcGxpY2F0
aW9ucyBwcmVkaWN0YWJsZSBiZWhhdmlvdXIuCisgIF9fcHRocmVhZF9tdXRl
eF91bmxvY2sgKCZ0aHJlYWQtPm11dGV4KTsKIAorICByZXR1cm4gMDsKKy8q
CisgIFRPRE86IGluc2VydCAgcHRocmVhZF90ZXN0Y2FuY2VsIGludG8gdGhl
IHJlcXVpcmVkIGZ1bmN0aW9ucwogICB0aGUgcmVxdWlyZWQgZnVuY3Rpb24g
bGlzdCBpczogKmluZGljYXRlcyBkb25lLCBYIGluZGljYXRlcyBub3QgcHJl
c2VudCBpbiBjeWd3aW4uCiBhaW9fc3VzcGVuZCAoKQogKmNsb3NlICgpCkBA
IC0xMjAwLDI3ICsxMjQ0LDU0IEBAIG9wZW5ncm91cCBzcGVjcy4KICAqLwog
fQogCi0vKm5vIHJhY2VzIGluIHRoZXNlIHRocmVlIGZ1bmN0aW9uczogdGhl
eSBhcmUgYWxsIGN1cnJlbnQtdGhyZWFkLW9ubHkgKi8KK3ZvaWQKK19fcHRo
cmVhZF9jYW5jZWxfc2VsZiAodm9pZCkKK3sKKyAgIF9fcHRocmVhZF9leGl0
IChQVEhSRUFEX0NBTkNFTEVEKTsKK30KKwogaW50CiBfX3B0aHJlYWRfc2V0
Y2FuY2Vsc3RhdGUgKGludCBzdGF0ZSwgaW50ICpvbGRzdGF0ZSkKIHsKKyAg
aW50IHJlc3VsdCA9IDA7CiAgIGNsYXNzIHB0aHJlYWQgKnRocmVhZCA9IF9f
cHRocmVhZF9zZWxmICgpOworCisgIF9fcHRocmVhZF9tdXRleF9sb2NrKCZ0
aHJlYWQtPm11dGV4KTsKKwogICBpZiAoc3RhdGUgIT0gUFRIUkVBRF9DQU5D
RUxfRU5BQkxFICYmIHN0YXRlICE9IFBUSFJFQURfQ0FOQ0VMX0RJU0FCTEUp
Ci0gICAgcmV0dXJuIEVJTlZBTDsKLSAgKm9sZHN0YXRlID0gdGhyZWFkLT5j
YW5jZWxzdGF0ZTsKLSAgdGhyZWFkLT5jYW5jZWxzdGF0ZSA9IHN0YXRlOwot
ICByZXR1cm4gMDsKKyAgICByZXN1bHQgPSBFSU5WQUw7CisgIGVsc2UKKyAg
ICB7CisgICAgICBpZiAob2xkc3RhdGUpCisgICAgICAgICpvbGRzdGF0ZSA9
IHRocmVhZC0+Y2FuY2Vsc3RhdGU7CisgICAgICB0aHJlYWQtPmNhbmNlbHN0
YXRlID0gc3RhdGU7CisgICAgfQorCisgIF9fcHRocmVhZF9tdXRleF91bmxv
Y2soJnRocmVhZC0+bXV0ZXgpOworCisgIHJldHVybiByZXN1bHQ7CiB9CiAK
IGludAogX19wdGhyZWFkX3NldGNhbmNlbHR5cGUgKGludCB0eXBlLCBpbnQg
Km9sZHR5cGUpCiB7CisgIGludCByZXN1bHQgPSAwOwogICBjbGFzcyBwdGhy
ZWFkICp0aHJlYWQgPSBfX3B0aHJlYWRfc2VsZiAoKTsKKworICBfX3B0aHJl
YWRfbXV0ZXhfbG9jaygmdGhyZWFkLT5tdXRleCk7CisKICAgaWYgKHR5cGUg
IT0gUFRIUkVBRF9DQU5DRUxfREVGRVJSRUQgJiYgdHlwZSAhPSBQVEhSRUFE
X0NBTkNFTF9BU1lOQ0hST05PVVMpCi0gICAgcmV0dXJuIEVJTlZBTDsKLSAg
Km9sZHR5cGUgPSB0aHJlYWQtPmNhbmNlbHR5cGU7Ci0gIHRocmVhZC0+Y2Fu
Y2VsdHlwZSA9IHR5cGU7Ci0gIHJldHVybiAwOworICAgIHJlc3VsdCA9IEVJ
TlZBTDsKKyAgZWxzZQorICAgIHsKKyAgICAgIGlmIChvbGR0eXBlKQorICAg
ICAgICAqb2xkdHlwZSA9IHRocmVhZC0+Y2FuY2VsdHlwZTsKKyAgICAgIHRo
cmVhZC0+Y2FuY2VsdHlwZSA9IHR5cGU7CisgICAgfQorCisgIF9fcHRocmVh
ZF9tdXRleF91bmxvY2soJnRocmVhZC0+bXV0ZXgpOworCisgIHJldHVybiBy
ZXN1bHQ7CiB9CiAKIC8qZGVmZXJyZWQgY2FuY2VsbGF0aW9uIHJlcXVlc3Qg
aGFuZGxlciAqLwpAQCAtMTIzMCw4ICsxMzAxLDkgQEAgX19wdGhyZWFkX3Rl
c3RjYW5jZWwgKHZvaWQpCiAgIGNsYXNzIHB0aHJlYWQgKnRocmVhZCA9IF9f
cHRocmVhZF9zZWxmICgpOwogICBpZiAodGhyZWFkLT5jYW5jZWxzdGF0ZSA9
PSBQVEhSRUFEX0NBTkNFTF9ESVNBQkxFKQogICAgIHJldHVybjsKLSAgLypj
aGVjayB0aGUgY2FuY2VsbGF0aW9uIGV2ZW50IG9iamVjdCBoZXJlIC0gbm90
IG5lZWRlZHVudGlsIHB0aHJlYWRfY2FuY2VsIGFjdHVhbGx5Ci0gICAqZG9l
cyBzb21ldGhpbmcqLworCisgIGlmKCBXQUlUX09CSkVDVF8wID09IFdhaXRG
b3JTaW5nbGVPYmplY3QgKHRocmVhZC0+Y2FuY2VsX2V2ZW50LCAwICkgKQor
ICAgIF9fcHRocmVhZF9jYW5jZWxfc2VsZiAoKTsKIH0KIAogdm9pZApAQCAt
MTU1Nyw2ICsxNjI5LDcgQEAgX19wdGhyZWFkX2V4aXQgKHZvaWQgKnZhbHVl
X3B0cikKICAgTVRfSU5URVJGQUNFLT5kZXN0cnVjdG9ycy5JdGVyYXRlTnVs
bCAoKTsKIAogICBfX3B0aHJlYWRfbXV0ZXhfbG9jaygmdGhyZWFkLT5tdXRl
eCk7CisKICAgaWYoIF9fcHRocmVhZF9lcXVhbCgmdGhyZWFkLT5qb2luZXIs
ICZ0aHJlYWQgKSApCiAgICAgLy8gY2xlYW51cCBpZiB0aHJlYWQgaXMgaW4g
ZGV0YWNoZWQgc3RhdGUgYW5kIG5vdCBqb2luZWQKICAgICBkZWxldGUgdGhy
ZWFkOwpAQCAtMTU4OSw2ICsxNjYyLDcgQEAgX19wdGhyZWFkX2pvaW4gKHB0
aHJlYWRfdCAqdGhyZWFkLCB2b2lkIAogICAgIH0KIAogICBfX3B0aHJlYWRf
bXV0ZXhfbG9jaygmKCp0aHJlYWQpLT5tdXRleCk7CisKICAgaWYgKCgqdGhy
ZWFkKS0+YXR0ci5qb2luYWJsZSA9PSBQVEhSRUFEX0NSRUFURV9ERVRBQ0hF
RCkKICAgICB7CiAgICAgICAgX19wdGhyZWFkX211dGV4X3VubG9jaygmKCp0
aHJlYWQpLT5tdXRleCk7CkBAIC0xNjIxLDYgKzE2OTUsNyBAQCBfX3B0aHJl
YWRfZGV0YWNoIChwdGhyZWFkX3QgKnRocmVhZCkKICAgICByZXR1cm4gRVNS
Q0g7CiAKICAgX19wdGhyZWFkX211dGV4X2xvY2soJigqdGhyZWFkKS0+bXV0
ZXgpOworCiAgIGlmICgoKnRocmVhZCktPmF0dHIuam9pbmFibGUgPT0gUFRI
UkVBRF9DUkVBVEVfREVUQUNIRUQpCiAgICAgewogICAgICAgX19wdGhyZWFk
X211dGV4X3VubG9jaygmKCp0aHJlYWQpLT5tdXRleCk7CmRpZmYgLXVycCBz
cmMub2xkL3dpbnN1cC9jeWd3aW4vdGhyZWFkLmggc3JjL3dpbnN1cC9jeWd3
aW4vdGhyZWFkLmgKLS0tIHNyYy5vbGQvd2luc3VwL2N5Z3dpbi90aHJlYWQu
aAlUaHUgQXByIDI1IDA5OjE1OjE3IDIwMDIKKysrIHNyYy93aW5zdXAvY3ln
d2luL3RocmVhZC5oCVRodSBBcHIgMjUgMTc6MzM6MjkgMjAwMgpAQCAtMjM5
LDYgKzIzOSw3IEBAIHB1YmxpYzoKICAgdm9pZCAqcmV0dXJuX3B0cjsKICAg
Ym9vbCBzdXNwZW5kZWQ7CiAgIGludCBjYW5jZWxzdGF0ZSwgY2FuY2VsdHlw
ZTsKKyAgSEFORExFIGNhbmNlbF9ldmVudDsKICAgcHRocmVhZF9tdXRleCAq
bXV0ZXg7CiAgIF9fcHRocmVhZF9jbGVhbnVwX2hhbmRsZXIgKmNsZWFudXBf
aGFuZGxlcnM7CiAgIHB0aHJlYWRfdCBqb2luZXI7CkBAIC01MDIsNiArNTAz
LDcgQEAgaW50IF9fcHRocmVhZF9zZXRzY2hlZHBhcmFtIChwdGhyZWFkX3Qg
dAogCiAvKiBjYW5jZWxhYmlsaXR5IHN0YXRlcyAqLwogaW50IF9fcHRocmVh
ZF9jYW5jZWwgKHB0aHJlYWRfdCB0aHJlYWQpOwordm9pZCBfX3B0aHJlYWRf
Y2FuY2VsX3NlbGYgKHZvaWQpOwogaW50IF9fcHRocmVhZF9zZXRjYW5jZWxz
dGF0ZSAoaW50IHN0YXRlLCBpbnQgKm9sZHN0YXRlKTsKIGludCBfX3B0aHJl
YWRfc2V0Y2FuY2VsdHlwZSAoaW50IHR5cGUsIGludCAqb2xkdHlwZSk7CiB2
b2lkIF9fcHRocmVhZF90ZXN0Y2FuY2VsICh2b2lkKTsK

--993715-30566-1019811466=:243--
