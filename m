Return-Path: <cygwin-patches-return-6414-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 16254 invoked by alias); 26 Feb 2009 04:03:58 -0000
Received: (qmail 16230 invoked by uid 22791); 26 Feb 2009 04:03:54 -0000
X-SWARE-Spam-Status: No, hits=2.5 required=5.0 	tests=AWL,BAYES_50,BOTNET,HK_OBFDOM,J_CHICKENPOX_32,J_CHICKENPOX_63,MSGID_FROM_MTA_HEADER
X-Spam-Check-By: sourceware.org
Received: from vms173005pub.verizon.net (HELO vms173005pub.verizon.net) (206.46.173.5)     by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Thu, 26 Feb 2009 04:03:47 +0000
Received: from pool-70-19-158-99.bos.east.verizon.net ([70.19.158.99])  by vms173005.mailsrvcs.net  (Sun Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 32bit))  with ESMTPA id <0KFN00FRYN9DDVH2@vms173005.mailsrvcs.net> for  cygwin-patches@cygwin.com; Wed, 25 Feb 2009 22:03:36 -0600 (CST)
Message-id: <0KFN00FS0N9EDVH2@vms173005.mailsrvcs.net>
Received: from [192.168.1.10] (helo=Compaq.phumblet.no-ip.org) 	by phumblet.no-ip.org with esmtp (Exim 4.69) 	(envelope-from <pierre@phumblet.no-ip.org>)	id KFNN9D-0002QO-5R; Wed,  25 Feb 2009 23:03:13 -0500
Date: Thu, 26 Feb 2009 04:03:00 -0000
To: cygwin-patches@cygwin.com
From: "Pierre A. Humblet" <pierre@phumblet.no-ip.org>
Subject: [Patch] gethostbyname2
MIME-version: 1.0
Content-type: multipart/mixed; boundary="=====================_71629406==_"
X-IsSubscribed: yes
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
X-SW-Source: 2009-q1/txt/msg00012.txt.bz2


--=====================_71629406==_
Content-Type: text/plain; charset="us-ascii"; format=flowed
Content-length: 6155

I tried to compile Exim with IPv6 enabled and Cygwin 1.7, but it 
needs gethostbyname2.
Here is an implementation of that function.
In attachment I am including the same patch as well as a short test function.

Pierre



2009-02-25  Pierre Humblet <Pierre.Humblet@ieee.org>

	* net.cc: Include windns.h.
	(gethostbyname2): New function.
	* cygwin.din: Export gethostbyname2.


Index: cygwin.din
===================================================================
RCS file: /cvs/src/src/winsup/cygwin/cygwin.din,v
retrieving revision 1.202
diff -u -p -r1.202 cygwin.din
--- cygwin.din	19 Feb 2009 09:22:51 -0000	1.202
+++ cygwin.din	26 Feb 2009 03:54:30 -0000
@@ -635,6 +635,7 @@ _getgroups = getgroups SIGFE
  _getgroups32 = getgroups32 SIGFE
  gethostbyaddr = cygwin_gethostbyaddr SIGFE
  gethostbyname = cygwin_gethostbyname SIGFE
+gethostbyname2 SIGFE
  gethostid SIGFE
  gethostname = cygwin_gethostname SIGFE
  _gethostname = cygwin_gethostname SIGFE
Index: net.cc
===================================================================
RCS file: /cvs/src/src/winsup/cygwin/net.cc,v
retrieving revision 1.248
diff -u -p -r1.248 net.cc
--- net.cc	16 Sep 2008 02:04:27 -0000	1.248
+++ net.cc	26 Feb 2009 03:54:31 -0000
@@ -25,6 +25,7 @@ details. */
  #include <netdb.h>
  #define USE_SYS_TYPES_FD_SET
  #include <winsock2.h>
+#include <windns.h>
  #include <iphlpapi.h>
  #include <assert.h>
  #include "cygerrno.h"
@@ -888,6 +889,157 @@ cygwin_gethostbyaddr (const char *addr,
    return res;
  }

+/* gethostbyname2: standards? */
+extern "C" struct hostent *
+gethostbyname2 (const char *name, int af)
+{
+  sig_dispatch_pending ();
+  myfault efault;
+  if (efault.faulted (EFAULT))
+    return NULL;
+
+  DWORD type;
+  hostent tmp, *h = NULL;
+  tmp.h_name = NULL;
+  tmp.h_aliases = NULL;
+  tmp.h_addrtype = af;
+  switch (af)
+    {
+    case AF_INET:
+      tmp.h_length = sizeof (IP4_ADDRESS);
+      type = DNS_TYPE_A;
+      break;
+    case AF_INET6:
+      tmp.h_length = sizeof (IP6_ADDRESS);
+      type = DNS_TYPE_AAAA;
+      break;
+    default:
+      set_errno (EAFNOSUPPORT);
+      h_errno = NETDB_INTERNAL;
+      return NULL;
+    }
+
+  PDNS_RECORD pQueryResultsSet, rr;
+  /* Normal query, including search */
+  DNS_STATUS res = DnsQuery_A (name, type, DNS_QUERY_STANDARD,
+			       NULL, &pQueryResultsSet, NULL);
+
+  debug_printf ("DnsQuery: %s type = %d res = %lu\n", name, type, res);
+
+  // NETDB_INTERNAL -1 /* see errno */
+  // HOST_NOT_FOUND  1 /* Authoritative Answer Host not found */
+  // TRY_AGAIN       2 /* Non-Authoritive Host not found, or SERVERFAIL */
+  // NO_RECOVERY     3 /* Non recoverable errors, FORMERR, REFUSED, NOTIMP */
+  // NO_DATA         4 /* Valid name, no data record of requested type */
+
+  switch (res)
+    {
+    case ERROR_SUCCESS:
+      break;
+    case ERROR_INVALID_NAME:
+      set_errno (EINVAL);
+      h_errno = NETDB_INTERNAL;;
+      return NULL;
+    case ERROR_TIMEOUT:
+    case DNS_ERROR_RCODE_SERVER_FAILURE:
+      h_errno = TRY_AGAIN;
+      return NULL;
+    case DNS_ERROR_RCODE_NAME_ERROR:
+      h_errno = HOST_NOT_FOUND;
+      return NULL;
+    case DNS_ERROR_NO_DNS_SERVERS:
+    case DNS_ERROR_RCODE_FORMAT_ERROR:
+    case DNS_ERROR_RCODE_NOT_IMPLEMENTED:
+    case DNS_ERROR_RCODE_REFUSED:
+      h_errno = NO_RECOVERY;
+      return NULL;
+    case DNS_INFO_NO_RECORDS:  /* May be returned when the host 
doesn't exist */
+      h_errno = NO_DATA;
+      return NULL;
+    default:
+      debug_printf ("Unknown code\n");
+      h_errno = NO_RECOVERY;
+      return NULL;
+    }
+
+  const int RECORD_INC = 16;
+  int record_size = 0;
+  int alias_count = 0;
+  int address_count = 0;
+  for (rr = pQueryResultsSet; rr; rr = rr->pNext)
+    {
+      debug_printf ("%s Section %d Type %u Size %d\n",
+		    rr->pName, rr->Flags.S.Section, rr->wType, rr->wDataLength);
+      /* Normally DnsQuery does not provide Question section records and we
+	 should only consider Answer section records.
+	 However DnsQuery seems to return only Question records (with data)
+	 for local names and numeric addresses */
+      if (!((rr->Flags.S.Section == DnsSectionAnswer)
+	    || (rr->Flags.S.Section == DnsSectionQuestion)))
+	continue;
+
+      /* Alloc space, including two null entries */
+      if ((alias_count + address_count + 2) >= record_size)
+	{
+	  void * ptr = realloc (tmp.h_aliases,
+				sizeof (char *)*(record_size += RECORD_INC));
+	  if (!ptr)
+	    {
+	      h_errno = NETDB_INTERNAL;
+	      address_count = -1; /* Flag error */
+	      break;
+	    }
+	  tmp.h_aliases = (char **) ptr;
+	}
+
+      switch (rr->wType)
+	{
+	case DNS_TYPE_CNAME:
+	  /* The CNAME records are supposed to form a chain.
+	     We trust the resolver.
+	     Move the addresses. This should never be needed. */
+	  for (int i = address_count; i > 0; i--)
+	    tmp.h_aliases[alias_count + 1 + i] = tmp.h_aliases[alias_count + i];
+	  tmp.h_aliases[alias_count++] = rr->pName;
+	  break;
+	case DNS_TYPE_A:
+	  /* The address records should all have as pName the last canonical name.
+	     We trust the resolver */
+	  if ((af == AF_INET)
+	      && (rr->wDataLength == sizeof (IP4_ADDRESS)))
+	    {
+	      tmp.h_aliases[alias_count + ++address_count] = (char *) & 
rr->Data.A.IpAddress;
+	      tmp.h_name = rr->pName;
+	    }
+	  break;
+	case DNS_TYPE_AAAA:
+	  if ((af == AF_INET6)
+	      && (rr->wDataLength == sizeof (IP6_ADDRESS)))
+	    {
+	      tmp.h_aliases[alias_count + ++address_count] = (char *) & 
rr->Data.AAAA.Ip6Address;
+	      tmp.h_name = rr->pName;
+	    }
+	  break;
+	default:
+	  continue;
+	}
+      }
+
+  if (address_count == 0)
+    h_errno = NO_DATA;
+  else if (address_count > 0)
+    {
+      tmp.h_aliases[alias_count] = NULL;
+      tmp.h_addr_list = & tmp.h_aliases[alias_count + 1];
+      tmp.h_addr_list[address_count] = NULL;
+      if (!(h = dup_ent (&tmp)))
+	h_errno = NETDB_INTERNAL;
+    }
+  DnsRecordListFree (pQueryResultsSet, DnsFreeRecordList);
+  free (tmp.h_aliases);
+  return h;
+}
+
  /* exported as accept: standards? */
  extern "C" int
  cygwin_accept (int fd, struct sockaddr *peer, socklen_t *len)
--=====================_71629406==_
Content-Type: application/octet-stream; name="try_gethostbyname.c"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="try_gethostbyname.c"
Content-length: 1367

I2luY2x1ZGUgPHN5cy9zb2NrZXQuaD4KI2luY2x1ZGUgPG5ldGRiLmg+CiNp
bmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8ZXJybm8uaD4KZXh0ZXJuIGlu
dCBoX2Vycm5vOwoKZXh0ZXJuIHN0cnVjdCBob3N0ZW50ICogZ2V0aG9zdGJ5
bmFtZTIgKGNvbnN0IGNoYXIgKm5hbWUsIGludCBhZik7Cgp2b2lkIHByaW50
X2hvc3RlbnQoc3RydWN0IGhvc3RlbnQgKiBwdHIpCnsKICBpbnQgaSwgajsK
ICBwcmludGYoIkVycm5vICVkIGhfZXJybm8gJWRcbiIsIGVycm5vLCBoX2Vy
cm5vKTsKICBpZiAocHRyKSAKICAgIHsKICAgICAgcHJpbnRmKCJoX25hbWU6
ICVzXG4iLCBwdHItPmhfbmFtZSk7CiAgICAgIGZvciAoaSA9IDA7IHB0ci0+
aF9hbGlhc2VzW2ldOyBpKyspCglwcmludGYoImhfYWxpYXM6ICVzXG4iLCBw
dHItPmhfYWxpYXNlc1tpXSk7CiAgICAgIGZvciAoaSA9IDA7IHB0ci0+aF9h
ZGRyX2xpc3RbaV07IGkrKykgewoJcHJpbnRmKCJoX2FkZHI6ICIpOwoJZm9y
IChqID0gMDsgaiA8IHB0ci0+aF9sZW5ndGg7IGorKykKCXByaW50ZigiJXUu
IiwgKigoKHVuc2lnbmVkIGNoYXIgKikgcHRyLT5oX2FkZHJfbGlzdFtpXSkg
KyBqKSk7CglwcmludGYoIlxuIik7CiAgICAgIH0KICAgIH0KfQoKbWFpbihp
bnQgYXJnYywgY2hhciAqKiBhcmd2KQp7CiAgaWYgKGFyZ2MgPiAxKQogICAg
ewogICAgICBwcmludGYoIkdldGhvc3RieW5hbWVcbiIpOwogICAgICBwcmlu
dF9ob3N0ZW50KGdldGhvc3RieW5hbWUoYXJndlsxXSkpOwoKICAgICAgcHJp
bnRmKCJcbkdldGhvc3RieW5hbWUyIEFGX0lORVRcbiIpOwogICAgICBwcmlu
dF9ob3N0ZW50KGdldGhvc3RieW5hbWUyKGFyZ3ZbMV0sIEFGX0lORVQpKTsK
IAogICAgICBwcmludGYoIlxuR2V0aG9zdGJ5bmFtZTIgQUZfSU5FVDZcbiIp
OwogICAgICBwcmludF9ob3N0ZW50KGdldGhvc3RieW5hbWUyKGFyZ3ZbMV0s
IEFGX0lORVQ2KSk7CiAgICB9CiAgZWxzZQogICAgcHJpbnRmKCJQcm92aWRl
IGEgbmFtZVxuIik7Cn0KCQoK

--=====================_71629406==_
Content-Type: application/octet-stream; name="net.cc"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="net.cc"
Content-length: 154091

LyogbmV0LmNjOiBuZXR3b3JrLXJlbGF0ZWQgcm91dGluZXMuCgogICBDb3B5
cmlnaHQgMTk5NiwgMTk5NywgMTk5OCwgMTk5OSwgMjAwMCwgMjAwMSwgMjAw
MiwgMjAwMywgMjAwNCwKICAgMjAwNSwgMjAwNiwgMjAwNyBSZWQgSGF0LCBJ
bmMuCgpUaGlzIGZpbGUgaXMgcGFydCBvZiBDeWd3aW4uCgpUaGlzIHNvZnR3
YXJlIGlzIGEgY29weXJpZ2h0ZWQgd29yayBsaWNlbnNlZCB1bmRlciB0aGUg
dGVybXMgb2YgdGhlCkN5Z3dpbiBsaWNlbnNlLiAgUGxlYXNlIGNvbnN1bHQg
dGhlIGZpbGUgIkNZR1dJTl9MSUNFTlNFIiBmb3IKZGV0YWlscy4gKi8KCi8q
ICNkZWZpbmUgREVCVUdfTkVTVF9PTiAxICovCgojZGVmaW5lICBfX0lOU0lE
RV9DWUdXSU5fTkVUX18KCiNpbmNsdWRlICJ3aW5zdXAuaCIKI2luY2x1ZGUg
Im1pc2NmdW5jcy5oIgojaW5jbHVkZSA8Y3R5cGUuaD4KI2luY2x1ZGUgPHdj
aGFyLmg+CgojaW5jbHVkZSA8c3RkbGliLmg+CiNkZWZpbmUgZ2V0aG9zdG5h
bWUgY3lnd2luX2dldGhvc3RuYW1lCiNpbmNsdWRlIDx1bmlzdGQuaD4KI3Vu
ZGVmIGdldGhvc3RuYW1lCiNpbmNsdWRlIDxuZXRkYi5oPgojZGVmaW5lIFVT
RV9TWVNfVFlQRVNfRkRfU0VUCiNpbmNsdWRlIDx3aW5zb2NrMi5oPgojaW5j
bHVkZSA8d2luZG5zLmg+CiNpbmNsdWRlIDxpcGhscGFwaS5oPgojaW5jbHVk
ZSA8YXNzZXJ0Lmg+CiNpbmNsdWRlICJjeWdlcnJuby5oIgojaW5jbHVkZSAi
c2VjdXJpdHkuaCIKI2luY2x1ZGUgImN5Z3dpbi92ZXJzaW9uLmgiCiNpbmNs
dWRlICJzaGFyZWRfaW5mby5oIgojaW5jbHVkZSAicGVycHJvY2Vzcy5oIgoj
aW5jbHVkZSAicGF0aC5oIgojaW5jbHVkZSAiZmhhbmRsZXIuaCIKI2luY2x1
ZGUgImR0YWJsZS5oIgojaW5jbHVkZSAiY3lnaGVhcC5oIgojaW5jbHVkZSAi
c2lncHJvYy5oIgojaW5jbHVkZSAicmVnaXN0cnkuaCIKI2luY2x1ZGUgImN5
Z3Rscy5oIgojaW5jbHVkZSAiY3lnd2luL2luNi5oIgojaW5jbHVkZSAiaWZh
ZGRycy5oIgojaW5jbHVkZSAidGxzX3BidWYuaCIKCmV4dGVybiAiQyIKewog
IGludCBoX2Vycm5vOwoKICBpbnQgX19zdGRjYWxsIHJjbWQgKGNoYXIgKiph
aG9zdCwgdW5zaWduZWQgc2hvcnQgaW5wb3J0LCBjaGFyICpsb2N1c2VyLAoJ
CSAgICAgIGNoYXIgKnJlbXVzZXIsIGNoYXIgKmNtZCwgU09DS0VUICogZmQy
cCk7CiAgaW50IHNzY2FuZiAoY29uc3QgY2hhciAqLCBjb25zdCBjaGFyICos
IC4uLik7CiAgaW50IGN5Z3dpbl9pbmV0X2F0b24oY29uc3QgY2hhciAqLCBz
dHJ1Y3QgaW5fYWRkciAqKTsKICBjb25zdCBjaGFyICpjeWd3aW5faW5ldF9u
dG9wIChpbnQsIGNvbnN0IHZvaWQgKiwgY2hhciAqLCBzb2NrbGVuX3QpOwp9
CQkJCS8qIEVuZCBvZiAiQyIgc2VjdGlvbiAqLwoKY29uc3Qgc3RydWN0IGlu
Nl9hZGRyIGluNmFkZHJfYW55ID0ge3tJTjZBRERSX0FOWV9JTklUfX07CmNv
bnN0IHN0cnVjdCBpbjZfYWRkciBpbjZhZGRyX2xvb3BiYWNrID0ge3tJTjZB
RERSX0xPT1BCQUNLX0lOSVR9fTsKCnN0YXRpYyBmaGFuZGxlcl9zb2NrZXQg
KgpnZXQgKGNvbnN0IGludCBmZCkKewogIGN5Z2hlYXBfZmRnZXQgY2ZkIChm
ZCk7CgogIGlmIChjZmQgPCAwKQogICAgcmV0dXJuIDA7CgogIGZoYW5kbGVy
X3NvY2tldCAqY29uc3QgZmggPSBjZmQtPmlzX3NvY2tldCAoKTsKCiAgaWYg
KCFmaCkKICAgIHNldF9lcnJubyAoRU5PVFNPQ0spOwoKICByZXR1cm4gZmg7
Cn0KCi8qIGh0b25sOiBzdGFuZGFyZHM/ICovCmV4dGVybiAiQyIgdW5zaWdu
ZWQgbG9uZyBpbnQKaHRvbmwgKHVuc2lnbmVkIGxvbmcgaW50IHgpCnsKICBy
ZXR1cm4gKCgoKHggJiAweDAwMDAwMGZmVSkgPDwgMjQpIHwKCSAgICgoeCAm
IDB4MDAwMGZmMDBVKSA8PCA4KSB8CgkgICAoKHggJiAweDAwZmYwMDAwVSkg
Pj4gOCkgfAoJICAgKCh4ICYgMHhmZjAwMDAwMFUpID4+IDI0KSkpOwp9Cgov
KiBudG9obDogc3RhbmRhcmRzPyAqLwpleHRlcm4gIkMiIHVuc2lnbmVkIGxv
bmcgaW50Cm50b2hsICh1bnNpZ25lZCBsb25nIGludCB4KQp7CiAgcmV0dXJu
IGh0b25sICh4KTsKfQoKLyogaHRvbnM6IHN0YW5kYXJkcz8gKi8KZXh0ZXJu
ICJDIiB1bnNpZ25lZCBzaG9ydApodG9ucyAodW5zaWduZWQgc2hvcnQgeCkK
ewogIHJldHVybiAoKCgoeCAmIDB4MDAwMDAwZmZVKSA8PCA4KSB8CgkgICAo
KHggJiAweDAwMDBmZjAwVSkgPj4gOCkpKTsKfQoKLyogbnRvaHM6IHN0YW5k
YXJkcz8gKi8KZXh0ZXJuICJDIiB1bnNpZ25lZCBzaG9ydApudG9ocyAodW5z
aWduZWQgc2hvcnQgeCkKewogIHJldHVybiBodG9ucyAoeCk7Cn0KCi8qIGV4
cG9ydGVkIGFzIGluZXRfbnRvYTogQlNEIDQuMyAqLwpleHRlcm4gIkMiIGNo
YXIgKgpjeWd3aW5faW5ldF9udG9hIChzdHJ1Y3QgaW5fYWRkciBpbikKewog
IGNoYXIgYnVmWzIwXTsKICBjb25zdCBjaGFyICpyZXMgPSBjeWd3aW5faW5l
dF9udG9wIChBRl9JTkVULCAmaW4sIGJ1Ziwgc2l6ZW9mIGJ1Zik7CgogIGlm
IChfbXlfdGxzLmxvY2Fscy5udG9hX2J1ZikKICAgIHsKICAgICAgZnJlZSAo
X215X3Rscy5sb2NhbHMubnRvYV9idWYpOwogICAgICBfbXlfdGxzLmxvY2Fs
cy5udG9hX2J1ZiA9IE5VTEw7CiAgICB9CiAgaWYgKHJlcykKICAgIF9teV90
bHMubG9jYWxzLm50b2FfYnVmID0gc3RyZHVwIChyZXMpOwogIHJldHVybiBf
bXlfdGxzLmxvY2Fscy5udG9hX2J1ZjsKfQoKLyogaW5ldF9uZXRvZiBpcyBp
biB0aGUgc3RhbmRhcmQgQlNEIHNvY2tldHMgbGlicmFyeS4gIEl0IGlzIHVz
ZWxlc3MKICAgZm9yIG1vZGVybiBuZXR3b3Jrcywgc2luY2UgaXQgYXNzdW1l
cyBuZXR3b3JrIHZhbHVlcyB3aGljaCBhcmUgbm8KICAgbG9uZ2VyIG1lYW5p
bmdmdWwsIGJ1dCBzb21lIGV4aXN0aW5nIGNvZGUgY2FsbHMgaXQuICAqLwoK
ZXh0ZXJuICJDIiB1bnNpZ25lZCBsb25nCmluZXRfbmV0b2YgKHN0cnVjdCBp
bl9hZGRyIGluKQp7CiAgdW5zaWduZWQgbG9uZyBpLCByZXM7CgogIGkgPSBu
dG9obCAoaW4uc19hZGRyKTsKICBpZiAoSU5fQ0xBU1NBIChpKSkKICAgIHJl
cyA9IChpICYgSU5fQ0xBU1NBX05FVCkgPj4gSU5fQ0xBU1NBX05TSElGVDsK
ICBlbHNlIGlmIChJTl9DTEFTU0IgKGkpKQogICAgcmVzID0gKGkgJiBJTl9D
TEFTU0JfTkVUKSA+PiBJTl9DTEFTU0JfTlNISUZUOwogIGVsc2UKICAgIHJl
cyA9IChpICYgSU5fQ0xBU1NDX05FVCkgPj4gSU5fQ0xBU1NDX05TSElGVDsK
CgogIHJldHVybiByZXM7Cn0KCi8qIGluZXRfbWFrZWFkZHIgaXMgaW4gdGhl
IHN0YW5kYXJkIEJTRCBzb2NrZXRzIGxpYnJhcnkuICBJdCBpcwogICB1c2Vs
ZXNzIGZvciBtb2Rlcm4gbmV0d29ya3MsIHNpbmNlIGl0IGFzc3VtZXMgbmV0
d29yayB2YWx1ZXMgd2hpY2gKICAgYXJlIG5vIGxvbmdlciBtZWFuaW5nZnVs
LCBidXQgc29tZSBleGlzdGluZyBjb2RlIGNhbGxzIGl0LiAgKi8KCmV4dGVy
biAiQyIgc3RydWN0IGluX2FkZHIKaW5ldF9tYWtlYWRkciAoaW50IG5ldCwg
aW50IGxuYSkKewogIHVuc2lnbmVkIGxvbmcgaTsKICBzdHJ1Y3QgaW5fYWRk
ciBpbjsKCiAgaWYgKG5ldCA8IElOX0NMQVNTQV9NQVgpCiAgICBpID0gKG5l
dCA8PCBJTl9DTEFTU0FfTlNISUZUKSB8IChsbmEgJiBJTl9DTEFTU0FfSE9T
VCk7CiAgZWxzZSBpZiAobmV0IDwgSU5fQ0xBU1NCX01BWCkKICAgIGkgPSAo
bmV0IDw8IElOX0NMQVNTQl9OU0hJRlQpIHwgKGxuYSAmIElOX0NMQVNTQl9I
T1NUKTsKICBlbHNlIGlmIChuZXQgPCAweDEwMDAwMDApCiAgICBpID0gKG5l
dCA8PCBJTl9DTEFTU0NfTlNISUZUKSB8IChsbmEgJiBJTl9DTEFTU0NfSE9T
VCk7CiAgZWxzZQogICAgaSA9IG5ldCB8IGxuYTsKCiAgaW4uc19hZGRyID0g
aHRvbmwgKGkpOwoKCiAgcmV0dXJuIGluOwp9CgpzdHJ1Y3QgdGwKewogIGlu
dCB3OwogIGNvbnN0IGNoYXIgKnM7CiAgaW50IGU7Cn07CgpzdGF0aWMgTk9f
Q09QWSBzdHJ1Y3QgdGwgZXJybWFwW10gPSB7CiAge1dTQUVJTlRSLCAiV1NB
RUlOVFIiLCBFSU5UUn0sCiAge1dTQUVXT1VMREJMT0NLLCAiV1NBRVdPVUxE
QkxPQ0siLCBFV09VTERCTE9DS30sCiAge1dTQUVJTlBST0dSRVNTLCAiV1NB
RUlOUFJPR1JFU1MiLCBFSU5QUk9HUkVTU30sCiAge1dTQUVBTFJFQURZLCAi
V1NBRUFMUkVBRFkiLCBFQUxSRUFEWX0sCiAge1dTQUVOT1RTT0NLLCAiV1NB
RU5PVFNPQ0siLCBFTk9UU09DS30sCiAge1dTQUVERVNUQUREUlJFUSwgIldT
QUVERVNUQUREUlJFUSIsIEVERVNUQUREUlJFUX0sCiAge1dTQUVNU0dTSVpF
LCAiV1NBRU1TR1NJWkUiLCBFTVNHU0laRX0sCiAge1dTQUVQUk9UT1RZUEUs
ICJXU0FFUFJPVE9UWVBFIiwgRVBST1RPVFlQRX0sCiAge1dTQUVOT1BST1RP
T1BULCAiV1NBRU5PUFJPVE9PUFQiLCBFTk9QUk9UT09QVH0sCiAge1dTQUVQ
Uk9UT05PU1VQUE9SVCwgIldTQUVQUk9UT05PU1VQUE9SVCIsIEVQUk9UT05P
U1VQUE9SVH0sCiAge1dTQUVTT0NLVE5PU1VQUE9SVCwgIldTQUVTT0NLVE5P
U1VQUE9SVCIsIEVTT0NLVE5PU1VQUE9SVH0sCiAge1dTQUVPUE5PVFNVUFAs
ICJXU0FFT1BOT1RTVVBQIiwgRU9QTk9UU1VQUH0sCiAge1dTQUVQRk5PU1VQ
UE9SVCwgIldTQUVQRk5PU1VQUE9SVCIsIEVQRk5PU1VQUE9SVH0sCiAge1dT
QUVBRk5PU1VQUE9SVCwgIldTQUVBRk5PU1VQUE9SVCIsIEVBRk5PU1VQUE9S
VH0sCiAge1dTQUVBRERSSU5VU0UsICJXU0FFQUREUklOVVNFIiwgRUFERFJJ
TlVTRX0sCiAge1dTQUVBRERSTk9UQVZBSUwsICJXU0FFQUREUk5PVEFWQUlM
IiwgRUFERFJOT1RBVkFJTH0sCiAge1dTQUVORVRET1dOLCAiV1NBRU5FVERP
V04iLCBFTkVURE9XTn0sCiAge1dTQUVORVRVTlJFQUNILCAiV1NBRU5FVFVO
UkVBQ0giLCBFTkVUVU5SRUFDSH0sCiAge1dTQUVORVRSRVNFVCwgIldTQUVO
RVRSRVNFVCIsIEVORVRSRVNFVH0sCiAge1dTQUVDT05OQUJPUlRFRCwgIldT
QUVDT05OQUJPUlRFRCIsIEVDT05OQUJPUlRFRH0sCiAge1dTQUVDT05OUkVT
RVQsICJXU0FFQ09OTlJFU0VUIiwgRUNPTk5SRVNFVH0sCiAge1dTQUVOT0JV
RlMsICJXU0FFTk9CVUZTIiwgRU5PQlVGU30sCiAge1dTQUVJU0NPTk4sICJX
U0FFSVNDT05OIiwgRUlTQ09OTn0sCiAge1dTQUVOT1RDT05OLCAiV1NBRU5P
VENPTk4iLCBFTk9UQ09OTn0sCiAge1dTQUVTSFVURE9XTiwgIldTQUVTSFVU
RE9XTiIsIEVTSFVURE9XTn0sCiAge1dTQUVUT09NQU5ZUkVGUywgIldTQUVU
T09NQU5ZUkVGUyIsIEVUT09NQU5ZUkVGU30sCiAge1dTQUVUSU1FRE9VVCwg
IldTQUVUSU1FRE9VVCIsIEVUSU1FRE9VVH0sCiAge1dTQUVDT05OUkVGVVNF
RCwgIldTQUVDT05OUkVGVVNFRCIsIEVDT05OUkVGVVNFRH0sCiAge1dTQUVM
T09QLCAiV1NBRUxPT1AiLCBFTE9PUH0sCiAge1dTQUVOQU1FVE9PTE9ORywg
IldTQUVOQU1FVE9PTE9ORyIsIEVOQU1FVE9PTE9OR30sCiAge1dTQUVIT1NU
RE9XTiwgIldTQUVIT1NURE9XTiIsIEVIT1NURE9XTn0sCiAge1dTQUVIT1NU
VU5SRUFDSCwgIldTQUVIT1NUVU5SRUFDSCIsIEVIT1NUVU5SRUFDSH0sCiAg
e1dTQUVOT1RFTVBUWSwgIldTQUVOT1RFTVBUWSIsIEVOT1RFTVBUWX0sCiAg
e1dTQUVQUk9DTElNLCAiV1NBRVBST0NMSU0iLCBFUFJPQ0xJTX0sCiAge1dT
QUVVU0VSUywgIldTQUVVU0VSUyIsIEVVU0VSU30sCiAge1dTQUVEUVVPVCwg
IldTQUVEUVVPVCIsIEVEUVVPVH0sCiAge1dTQUVTVEFMRSwgIldTQUVTVEFM
RSIsIEVTVEFMRX0sCiAge1dTQUVSRU1PVEUsICJXU0FFUkVNT1RFIiwgRVJF
TU9URX0sCiAge1dTQUVJTlZBTCwgIldTQUVJTlZBTCIsIEVJTlZBTH0sCiAg
e1dTQUVGQVVMVCwgIldTQUVGQVVMVCIsIEVGQVVMVH0sCiAgezAsICJOT0VS
Uk9SIiwgMH0sCiAgezAsIE5VTEwsIDB9Cn07CgpzdGF0aWMgaW50CmZpbmRf
d2luc29ja19lcnJubyAoaW50IHdoeSkKewogIGZvciAoaW50IGkgPSAwOyBl
cnJtYXBbaV0ucyAhPSBOVUxMOyArK2kpCiAgICBpZiAod2h5ID09IGVycm1h
cFtpXS53KQogICAgICByZXR1cm4gZXJybWFwW2ldLmU7CgogIHJldHVybiBF
UEVSTTsKfQoKdm9pZApfX3NldF93aW5zb2NrX2Vycm5vIChjb25zdCBjaGFy
ICpmbiwgaW50IGxuKQp7CiAgRFdPUkQgd2VyciA9IFdTQUdldExhc3RFcnJv
ciAoKTsKICBpbnQgZXJyID0gZmluZF93aW5zb2NrX2Vycm5vICh3ZXJyKTsK
CiAgc2V0X2Vycm5vIChlcnIpOwogIHN5c2NhbGxfcHJpbnRmICgiJXM6JWQg
LSB3aW5zb2NrIGVycm9yICVkIC0+IGVycm5vICVkIiwgZm4sIGxuLCB3ZXJy
LCBlcnIpOwp9CgovKgogKiBTaW5jZSB0aGUgbWVtYmVyIGBzJyBpc24ndCB1
c2VkIGZvciBkZWJ1ZyBvdXRwdXQgd2UgY2FuIHVzZSBpdAogKiBmb3IgdGhl
IGVycm9yIHRleHQgcmV0dXJuZWQgYnkgaGVycm9yIGFuZCBoc3RyZXJyb3Iu
CiAqLwpzdGF0aWMgTk9fQ09QWSBzdHJ1Y3QgdGwgaG9zdF9lcnJtYXBbXSA9
IHsKICB7V1NBSE9TVF9OT1RfRk9VTkQsICJVbmtub3duIGhvc3QiLCBIT1NU
X05PVF9GT1VORH0sCiAge1dTQVRSWV9BR0FJTiwgIkhvc3QgbmFtZSBsb29r
dXAgZmFpbHVyZSIsIFRSWV9BR0FJTn0sCiAge1dTQU5PX1JFQ09WRVJZLCAi
VW5rbm93biBzZXJ2ZXIgZXJyb3IiLCBOT19SRUNPVkVSWX0sCiAge1dTQU5P
X0RBVEEsICJObyBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCBuYW1lIiwgTk9f
REFUQX0sCiAgezAsIE5VTEwsIDB9Cn07CgpzdGF0aWMgdm9pZApzZXRfaG9z
dF9lcnJubyAoKQp7CiAgaW50IGk7CgogIGludCB3aHkgPSBXU0FHZXRMYXN0
RXJyb3IgKCk7CgogIGZvciAoaSA9IDA7IGhvc3RfZXJybWFwW2ldLncgIT0g
MDsgKytpKQogICAgaWYgKHdoeSA9PSBob3N0X2Vycm1hcFtpXS53KQogICAg
ICBicmVhazsKCiAgaWYgKGhvc3RfZXJybWFwW2ldLncgIT0gMCkKICAgIGhf
ZXJybm8gPSBob3N0X2Vycm1hcFtpXS5lOwogIGVsc2UKICAgIGhfZXJybm8g
PSBORVREQl9JTlRFUk5BTDsKfQoKaW5saW5lIGludApEV09SRF9yb3VuZCAo
aW50IG4pCnsKICByZXR1cm4gc2l6ZW9mIChEV09SRCkgKiAoKChuICsgc2l6
ZW9mIChEV09SRCkgLSAxKSkgLyBzaXplb2YgKERXT1JEKSk7Cn0KCmlubGlu
ZSBpbnQKc3RybGVuX3JvdW5kIChjb25zdCBjaGFyICpzKQp7CiAgaWYgKCFz
KQogICAgcmV0dXJuIDA7CiAgcmV0dXJuIERXT1JEX3JvdW5kIChzdHJsZW4g
KHMpICsgMSk7Cn0KCiNwcmFnbWEgcGFjayhwdXNoLDIpCnN0cnVjdCBwc2Vy
dmVudAp7CiAgY2hhciAqc19uYW1lOwogIGNoYXIgKipzX2FsaWFzZXM7CiAg
c2hvcnQgc19wb3J0OwogIGNoYXIgKnNfcHJvdG87Cn07CiNwcmFnbWEgcGFj
ayhwb3ApCgpzdGF0aWMgY29uc3QgY2hhciAqZW50bmFtZXNbXSA9IHsiaG9z
dCIsICJwcm90byIsICJzZXJ2In07CgovKiBHZW5lcmljICJkdXAgYSB7aG9z
dCxwcm90byxzZXJ2fWVudCBzdHJ1Y3R1cmUiIGZ1bmN0aW9uLgogICBUaGlz
IGlzIGNvbXBsaWNhdGVkIGJlY2F1c2Ugd2UgbmVlZCB0byBiZSBhYmxlIHRv
IGZyZWUgdGhlCiAgIHN0cnVjdHVyZSBhdCBhbnkgcG9pbnQgYW5kIHdlIGNh
bid0IHJlbHkgb24gdGhlIHBvaW50ZXIgY29udGVudHMKICAgYmVpbmcgdW50
b3VjaGVkIGJ5IGNhbGxlcnMuICBTbywgd2UgYWxsb2NhdGUgYSBjaHVuayBv
ZiBtZW1vcnkKICAgbGFyZ2UgZW5vdWdoIHRvIGhvbGQgdGhlIHN0cnVjdHVy
ZSBhbmQgYWxsIG9mIHRoZSBzdHVmZiBpdCBwb2ludHMKICAgdG8gdGhlbiB3
ZSBjb3B5IHRoZSBzb3VyY2UgaW50byB0aGlzIG5ldyBibG9jayBvZiBtZW1v
cnkuCiAgIFRoZSAndW5pb25lbnQnIHN0cnVjdCBpcyBhIHVuaW9uIG9mIGFs
bCBvZiB0aGUgY3VycmVudGx5IHVzZWQKICAgKmVudCBzdHJ1Y3R1cmUuICAq
LwoKI2lmZGVmIERFQlVHR0lORwpzdGF0aWMgdm9pZCAqCiNlbHNlCnN0YXRp
YyBpbmxpbmUgdm9pZCAqCiNlbmRpZgpkdXBfZW50ICh1bmlvbmVudCAqJmRz
dCwgdW5pb25lbnQgKnNyYywgdW5pb25lbnQ6OnN0cnVjdF90eXBlIHR5cGUp
CnsKICBpZiAoZHN0KQogICAgZGVidWdfcHJpbnRmICgib2xkICVzZW50IHN0
cnVjdHVyZSBcIiVzXCIgJXBcbiIsIGVudG5hbWVzW3R5cGVdLAoJCSAgZHN0
LT5uYW1lLCBkc3QpOwoKICBpZiAoIXNyYykKICAgIHsKICAgICAgc2V0X3dp
bnNvY2tfZXJybm8gKCk7CiAgICAgIHJldHVybiBOVUxMOwogICAgfQoKICBk
ZWJ1Z19wcmludGYgKCJkdXBpbmcgJXNlbnQgXCIlc1wiLCAlcCIsIGVudG5h
bWVzW3R5cGVdLCBzcmMtPm5hbWUsIHNyYyk7CgogIC8qIEZpbmQgdGhlIHNp
emUgb2YgdGhlIHJhdyBzdHJ1Y3R1cmUgbWludXMgYW55IGNoYXJhY3RlciBz
dHJpbmdzLCBldGMuICovCiAgaW50IHN6LCBzdHJ1Y3Rfc3o7CiAgc3dpdGNo
ICh0eXBlKQogICAgewogICAgY2FzZSB1bmlvbmVudDo6dF9wcm90b2VudDoK
ICAgICAgc3RydWN0X3N6ID0gc2l6ZW9mIChwcm90b2VudCk7CiAgICAgIGJy
ZWFrOwogICAgY2FzZSB1bmlvbmVudDo6dF9zZXJ2ZW50OgogICAgICBzdHJ1
Y3Rfc3ogPSBzaXplb2YgKHNlcnZlbnQpOwogICAgICBicmVhazsKICAgIGNh
c2UgdW5pb25lbnQ6OnRfaG9zdGVudDoKICAgICAgc3RydWN0X3N6ID0gc2l6
ZW9mIChob3N0ZW50KTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAg
ICBhcGlfZmF0YWwgKCJjYWxsZWQgd2l0aCBpbnZhbGlkIHZhbHVlICVkIiwg
dHlwZSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAvKiBFdmVyeSAqZW50IGJl
Z2lucyB3aXRoIGEgbmFtZS4gIENhbGN1bGF0ZSBpdCdzIGxlbmd0aC4gKi8K
ICBpbnQgbmFtZWxlbiA9IHN0cmxlbl9yb3VuZCAoc3JjLT5uYW1lKTsKICBz
eiA9IHN0cnVjdF9zeiArIG5hbWVsZW47CgogIGNoYXIgKiphdjsKICAvKiBU
aGUgbmV4dCBmaWVsZCBpbiBldmVyeSAqZW50IGlzIGFuIGFyZ3YgbGlzdCBv
ZiAic29tZXRoaW5nIi4KICAgICBDYWxjdWxhdGUgdGhlIG51bWJlciBvZiBj
b21wb25lbnRzIGFuZCBob3cgbXVjaCBzcGFjZSB0aGUKICAgICBjaGFyYWN0
ZXIgc3RyaW5ncyB3aWxsIHRha2UuICAqLwogIGludCBsaXN0X2xlbiA9IDA7
CiAgZm9yIChhdiA9IHNyYy0+bGlzdDsgYXYgJiYgKmF2OyBhdisrKQogICAg
ewogICAgICBsaXN0X2xlbisrOwogICAgICBzeiArPSBzaXplb2YgKGNoYXIg
KiopICsgc3RybGVuX3JvdW5kICgqYXYpOwogICAgfQoKICAvKiBOVUxMIHRl
cm1pbmF0ZSBpZiB0aGVyZSBhY3R1YWxseSB3YXMgYSBsaXN0ICovCiAgaWYg
KGF2KQogICAgewogICAgICBzeiArPSBzaXplb2YgKGNoYXIgKiopOwogICAg
ICBsaXN0X2xlbisrOwogICAgfQoKICAvKiBEbyBzZXJ2ZW50L2hvc3RlbnQg
c3BlY2lmaWMgcHJvY2Vzc2luZyAqLwogIGludCBwcm90b2xlbiA9IDA7CiAg
aW50IGFkZHJfbGlzdF9sZW4gPSAwOwogIGlmICh0eXBlID09IHVuaW9uZW50
Ojp0X3NlcnZlbnQpCiAgICB7CiAgICAgIGlmIChzcmMtPnNfcHJvdG8pCglz
eiArPSAocHJvdG9sZW4gPSBzdHJsZW5fcm91bmQgKHNyYy0+c19wcm90bykp
OwogICAgfQogIGVsc2UgaWYgKHR5cGUgPT0gdW5pb25lbnQ6OnRfaG9zdGVu
dCkKICAgIHsKICAgICAgLyogQ2FsY3VsYXRlIHRoZSBsZW5ndGggYW5kIHN0
b3JhZ2UgdXNlZCBmb3IgaF9hZGRyX2xpc3QgKi8KICAgICAgZm9yIChhdiA9
IHNyYy0+aF9hZGRyX2xpc3Q7IGF2ICYmICphdjsgYXYrKykKCXsKCSAgYWRk
cl9saXN0X2xlbisrOwoJICBzeiArPSBzaXplb2YgKGNoYXIgKiopICsgRFdP
UkRfcm91bmQgKHNyYy0+aF9sZW4pOwoJfQogICAgICBpZiAoYXYpCgl7Cgkg
IHN6ICs9IHNpemVvZiAoY2hhciAqKik7CgkgIGFkZHJfbGlzdF9sZW4rKzsK
CX0KICAgIH0KCiAgLyogQWxsb2NhdGUgdGhlIHN0b3JhZ2UgbmVlZGVkLiAg
QWxsb2NhdGUgYSByb3VuZGVkIHNpemUgdG8gYXR0ZW1wdCB0byBmb3JjZQog
ICAgIHJldXNlIG9mIHRoaXMgYnVmZmVyIHNvIHRoYXQgYSBwb29ybHktd3Jp
dHRlbiBjYWxsZXIgd2lsbCBub3QgYmUgdXNpbmcKICAgICBhIGZyZWVkIGJ1
ZmZlci4gKi8KICB1bnNpZ25lZCByc3ogPSAyNTYgKiAoKHN6ICsgMjU1KSAv
IDI1Nik7CiAgZHN0ID0gKHVuaW9uZW50ICopIHJlYWxsb2MgKGRzdCwgcnN6
KTsKCiAgaWYgKGRzdCkKICAgIHsKICAgICAgbWVtc2V0IChkc3QsIDAsIHN6
KTsKICAgICAgLyogVGhpcyBmaWVsZCBpcyBjb21tb24gdG8gYWxsICplbnQg
c3RydWN0dXJlcyBidXQgbmFtZWQgZGlmZmVyZW50bHkKCSBpbiBlYWNoLCBv
ZiBjb3Vyc2UuICAqLwogICAgICBkc3QtPnBvcnRfcHJvdG9fYWRkcnR5cGUg
PSBzcmMtPnBvcnRfcHJvdG9fYWRkcnR5cGU7CgogICAgICBjaGFyICpkcCA9
ICgoY2hhciAqKSBkc3QpICsgc3RydWN0X3N6OwogICAgICBpZiAobmFtZWxl
bikKCXsKCSAgLyogQ29weSB0aGUgbmFtZSBmaWVsZCB0byBkc3QsIHVzaW5n
IHNwYWNlIGp1c3QgYmV5b25kIHRoZSBlbmQgb2YKCSAgICAgdGhlIGRzdCBz
dHJ1Y3R1cmUuICovCgkgIHN0cmNweSAoZHN0LT5uYW1lID0gZHAsIHNyYy0+
bmFtZSk7CgkgIGRwICs9IG5hbWVsZW47Cgl9CgogICAgICAvKiBDb3B5IHRo
ZSAnbGlzdCcgdHlwZSB0byBkc3QsIHVzaW5nIHNwYWNlIGJleW9uZCBlbmQg
b2Ygc3RydWN0dXJlCgkgKyBzdG9yYWdlIGZvciBuYW1lLiAqLwogICAgICBp
ZiAoc3JjLT5saXN0KQoJewoJICBjaGFyICoqZGF2ID0gZHN0LT5saXN0ID0g
KGNoYXIgKiopIGRwOwoJICBkcCArPSBzaXplb2YgKGNoYXIgKiopICogbGlz
dF9sZW47CgkgIGZvciAoYXYgPSBzcmMtPmxpc3Q7IGF2ICYmICphdjsgYXYr
KykKCSAgICB7CgkgICAgICBpbnQgbGVuID0gc3RybGVuICgqYXYpICsgMTsK
CSAgICAgIG1lbWNweSAoKmRhdisrID0gZHAsICphdiwgbGVuKTsKCSAgICAg
IGRwICs9IERXT1JEX3JvdW5kIChsZW4pOwoJICAgIH0KCX0KCiAgICAgIC8q
IERvIHNlcnZlbnQvcHJvdG9lbnQvaG9zdGVudCBzcGVjaWZpYyBwcm9jZXNz
aW5nLiAqLwogICAgICBpZiAodHlwZSA9PSB1bmlvbmVudDo6dF9wcm90b2Vu
dCkKCWRlYnVnX3ByaW50ZiAoInByb3RvZW50ICVzICV4ICV4IiwgZHN0LT5u
YW1lLCBkc3QtPmxpc3QsIGRzdC0+cG9ydF9wcm90b19hZGRydHlwZSk7CiAg
ICAgIGVsc2UgaWYgKHR5cGUgPT0gdW5pb25lbnQ6OnRfc2VydmVudCkKCXsK
CSAgaWYgKHNyYy0+c19wcm90bykKCSAgICB7CgkgICAgICBzdHJjcHkgKGRz
dC0+c19wcm90byA9IGRwLCBzcmMtPnNfcHJvdG8pOwoJICAgICAgZHAgKz0g
cHJvdG9sZW47CgkgICAgfQoJfQogICAgICBlbHNlIGlmICh0eXBlID09IHVu
aW9uZW50Ojp0X2hvc3RlbnQpCgl7CgkgIC8qIFRyYW5zZmVyIGhfbGVuIGFu
ZCBkdXBsaWNhdGUgY29udGVudHMgb2YgaF9hZGRyX2xpc3QsIHVzaW5nCgkg
ICAgIG1lbW9yeSBhZnRlciAnbGlzdCcgYWxsb2NhdGlvbi4gKi8KCSAgZHN0
LT5oX2xlbiA9IHNyYy0+aF9sZW47CgkgIGNoYXIgKipkYXYgPSBkc3QtPmhf
YWRkcl9saXN0ID0gKGNoYXIgKiopIGRwOwoJICBkcCArPSBzaXplb2YgKGNo
YXIgKiopICogYWRkcl9saXN0X2xlbjsKCSAgZm9yIChhdiA9IHNyYy0+aF9h
ZGRyX2xpc3Q7IGF2ICYmICphdjsgYXYrKykKCSAgICB7CgkgICAgICBtZW1j
cHkgKCpkYXYrKyA9IGRwLCAqYXYsIHNyYy0+aF9sZW4pOwoJICAgICAgZHAg
Kz0gRFdPUkRfcm91bmQgKHNyYy0+aF9sZW4pOwoJICAgIH0KCX0KICAgICAg
LyogU2FuaXR5IGNoZWNrIHRoYXQgd2UgZGlkIG91ciBib29ra2VlcGluZyBj
b3JyZWN0bHkuICovCiAgICAgIGFzc2VydCAoKGRwIC0gKGNoYXIgKikgZHN0
KSA9PSBzeik7CiAgICB9CiAgZGVidWdfcHJpbnRmICgiZHVwZWQgJXNlbnQg
XCIlc1wiLCAlcCIsIGVudG5hbWVzW3R5cGVdLCBkc3QgPyBkc3QtPm5hbWUg
OiAiPG51bGwhPiIsIGRzdCk7CiAgcmV0dXJuIGRzdDsKfQoKc3RhdGljIGlu
bGluZSBob3N0ZW50ICoKZHVwX2VudCAoaG9zdGVudCAqc3JjKQp7CiAgcmV0
dXJuIChob3N0ZW50ICopIGR1cF9lbnQgKF9teV90bHMubG9jYWxzLmhvc3Rl
bnRfYnVmLCAodW5pb25lbnQgKikgc3JjLCB1bmlvbmVudDo6dF9ob3N0ZW50
KTsKfQoKc3RhdGljIGlubGluZSBwcm90b2VudCAqCmR1cF9lbnQgKHByb3Rv
ZW50ICpzcmMpCnsKICByZXR1cm4gKHByb3RvZW50ICopIGR1cF9lbnQgKF9t
eV90bHMubG9jYWxzLnByb3RvZW50X2J1ZiwgKHVuaW9uZW50ICopIHNyYywg
dW5pb25lbnQ6OnRfcHJvdG9lbnQpOwp9CgpzdGF0aWMgaW5saW5lIHNlcnZl
bnQgKgpkdXBfZW50IChzZXJ2ZW50ICpzcmMpCnsKICByZXR1cm4gKHNlcnZl
bnQgKikgZHVwX2VudCAoX215X3Rscy5sb2NhbHMuc2VydmVudF9idWYsICh1
bmlvbmVudCAqKSBzcmMsIHVuaW9uZW50Ojp0X3NlcnZlbnQpOwp9CgovKiBl
eHBvcnRlZCBhcyBnZXRwcm90b2J5bmFtZTogc3RhbmRhcmRzPyAqLwpleHRl
cm4gIkMiIHN0cnVjdCBwcm90b2VudCAqCmN5Z3dpbl9nZXRwcm90b2J5bmFt
ZSAoY29uc3QgY2hhciAqcCkKewogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChl
ZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSkKICAgIHJldHVybiBOVUxMOwogIHJl
dHVybiBkdXBfZW50IChnZXRwcm90b2J5bmFtZSAocCkpOwp9CgovKiBleHBv
cnRlZCBhcyBnZXRwcm90b2J5bnVtYmVyOiBzdGFuZGFyZHM/ICovCmV4dGVy
biAiQyIgc3RydWN0IHByb3RvZW50ICoKY3lnd2luX2dldHByb3RvYnludW1i
ZXIgKGludCBudW1iZXIpCnsKICByZXR1cm4gZHVwX2VudCAoZ2V0cHJvdG9i
eW51bWJlciAobnVtYmVyKSk7Cn0KCmJvb2wKZmRzb2NrIChjeWdoZWFwX2Zk
bWFuaXAmIGZkLCBjb25zdCBkZXZpY2UgKmRldiwgU09DS0VUIHNvYykKewog
IGZkID0gYnVpbGRfZmhfZGV2ICgqZGV2KTsKICBpZiAoIWZkLmlzb3BlbiAo
KSkKICAgIHJldHVybiBmYWxzZTsKICBmZC0+c2V0X2lvX2hhbmRsZSAoKEhB
TkRMRSkgc29jKTsKICBpZiAoISgoZmhhbmRsZXJfc29ja2V0ICopIGZkKS0+
aW5pdF9ldmVudHMgKCkpCiAgICByZXR1cm4gZmFsc2U7CiAgZmQtPnNldF9m
bGFncyAoT19SRFdSIHwgT19CSU5BUlkpOwogIGZkLT51bmludGVycnVwdGli
bGVfaW8gKHRydWUpOwogIGRlYnVnX3ByaW50ZiAoImZkICVkLCBuYW1lICcl
cycsIHNvYyAlcCIsIChpbnQpIGZkLCBkZXYtPm5hbWUsIHNvYyk7CiNpZiAw
CiAgLyogU2FtZSBkZWZhdWx0IGJ1ZmZlciBzaXplcyBhcyBvbiBMaW51eCAo
aW5zdGVhZCBvZiBXaW5Tb2NrIGRlZmF1bHQgOEspLgoKICAgICBOT1QuICBJ
ZiB0aGUgU09fUkNWQlVGIHNpemUgZXhjZWVkcyA2NTUzNSgqKSwgYW5kIGlm
IHRoZSBzb2NrZXQgaXMKICAgICBjb25uZWN0ZWQgdG8gYSByZW1vdGUgbWFj
aGluZSwgdGhlbiBkdXBsaWNhdGluZyB0aGUgc29ja2V0IG9uCiAgICAgZm9y
ay9leGVjIGZhaWxzIHdpdGggV2luU29jayBlcnJvciAxMDAyMiwgV1NBRUlO
VkFMLiAgR2l2ZW4gdGhhdCwKICAgICB0aGVyZSdzIG5vdCBhbnkgZ29vZCBy
ZWFzb24gdG8gc2V0IHRoZSBidWZmZXIgc2l6ZXMgYXQgYWxsLiAgU28gd2UK
ICAgICBzdGljayB3aXRoIHRoZSBkZWZhdWx0cy4gIEhvd2V2ZXIsIGFuIGV4
cGxhbmF0aW9uIGZvciB0aGlzIHdlaXJkCiAgICAgYmVoYXZpb3VyIHdvdWxk
IGJlIG5pY2UuICBJIGtlZXAgdGhpcyBzdHVmZiBpbiB0aGUgY29kZSBmb3Ig
bGF0ZXIKICAgICBnZW5lcmF0aW9ucy4gIEFyY2hlb2xvZ2ljYWwgcHJvZ3Jh
bW1lcnMgbWlnaHQgZmluZCBpdCB1c2VmdWwuCgogICAgICgqKSBNYXhpbXVt
IG5vcm1hbCBUQ1Agd2luZG93IHNpemUuICBDb2luY2lkZW5jZT8gICovCgog
IGludCBybWVtID0gZGV2ID09IHRjcF9kZXYgPyA4NzM4MCA6IDEyMDgzMjsK
ICBpbnQgd21lbSA9IGRldiA9PSB0Y3BfZGV2ID8gMTYzODQgOiAxMjA4MzI7
CiAgaWYgKDo6c2V0c29ja29wdCAoc29jLCBTT0xfU09DS0VULCBTT19SQ1ZC
VUYsIChjaGFyICopICZybWVtLCBzaXplb2YgKGludCkpKQogICAgZGVidWdf
cHJpbnRmICgic2V0c29ja29wdChTT19SQ1ZCVUYpIGZhaWxlZCwgJWx1Iiwg
V1NBR2V0TGFzdEVycm9yICgpKTsKICBpZiAoOjpzZXRzb2Nrb3B0IChzb2Ms
IFNPTF9TT0NLRVQsIFNPX1NOREJVRiwgKGNoYXIgKikgJndtZW0sIHNpemVv
ZiAoaW50KSkpCiAgICBkZWJ1Z19wcmludGYgKCJzZXRzb2Nrb3B0KFNPX1NO
REJVRikgZmFpbGVkLCAlbHUiLCBXU0FHZXRMYXN0RXJyb3IgKCkpOwojZW5k
aWYKICByZXR1cm4gdHJ1ZTsKfQoKLyogZXhwb3J0ZWQgYXMgc29ja2V0OiBz
dGFuZGFyZHM/ICovCmV4dGVybiAiQyIgaW50CmN5Z3dpbl9zb2NrZXQgKGlu
dCBhZiwgaW50IHR5cGUsIGludCBwcm90b2NvbCkKewogIGludCByZXMgPSAt
MTsKICBTT0NLRVQgc29jID0gMDsKCiAgZGVidWdfcHJpbnRmICgic29ja2V0
ICglZCwgJWQsICVkKSIsIGFmLCB0eXBlLCBwcm90b2NvbCk7CgogIHNvYyA9
IHNvY2tldCAoYWYgPT0gQUZfTE9DQUwgPyBBRl9JTkVUIDogYWYsIHR5cGUs
CgkJYWYgPT0gQUZfTE9DQUwgPyAwIDogcHJvdG9jb2wpOwoKICBpZiAoc29j
ID09IElOVkFMSURfU09DS0VUKQogICAgewogICAgICBzZXRfd2luc29ja19l
cnJubyAoKTsKICAgICAgZ290byBkb25lOwogICAgfQoKICBjb25zdCBkZXZp
Y2UgKmRldjsKCiAgaWYgKGFmID09IEFGX0xPQ0FMKQogICAgZGV2ID0gdHlw
ZSA9PSBTT0NLX1NUUkVBTSA/IHN0cmVhbV9kZXYgOiBkZ3JhbV9kZXY7CiAg
ZWxzZQogICAgZGV2ID0gdHlwZSA9PSBTT0NLX1NUUkVBTSA/IHRjcF9kZXYg
OiB1ZHBfZGV2OwoKICB7CiAgICBjeWdoZWFwX2ZkbmV3IGZkOwogICAgaWYg
KGZkIDwgMCB8fCAhZmRzb2NrIChmZCwgZGV2LCBzb2MpKQogICAgICBjbG9z
ZXNvY2tldCAoc29jKTsKICAgIGVsc2UKICAgICAgewoJKChmaGFuZGxlcl9z
b2NrZXQgKikgZmQpLT5zZXRfYWRkcl9mYW1pbHkgKGFmKTsKCSgoZmhhbmRs
ZXJfc29ja2V0ICopIGZkKS0+c2V0X3NvY2tldF90eXBlICh0eXBlKTsKCXJl
cyA9IGZkOwogICAgICB9CiAgfQoKZG9uZToKICBzeXNjYWxsX3ByaW50ZiAo
IiVkID0gc29ja2V0ICglZCwgJWQsICVkKSIsIHJlcywgYWYsIHR5cGUsIHBy
b3RvY29sKTsKICByZXR1cm4gcmVzOwp9CgovKiBleHBvcnRlZCBhcyBzZW5k
dG86IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX3NlbmR0
byAoaW50IGZkLCBjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCBm
bGFncywKCSAgICAgICBjb25zdCBzdHJ1Y3Qgc29ja2FkZHIgKnRvLCBzb2Nr
bGVuX3QgdG9sZW4pCnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRjaF9wZW5k
aW5nICgpOwoKICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7Cgog
IG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxU
KSB8fCAhZmgpCiAgICByZXMgPSAtMTsKICBlbHNlCiAgICByZXMgPSBmaC0+
c2VuZHRvIChidWYsIGxlbiwgZmxhZ3MsIHRvLCB0b2xlbik7CgogIHN5c2Nh
bGxfcHJpbnRmICgiJWQgPSBzZW5kdG8gKCVkLCAlcCwgJWQsICV4LCAlcCwg
JWQpIiwKCQkgIHJlcywgZmQsIGJ1ZiwgbGVuLCBmbGFncywgdG8sIHRvbGVu
KTsKCiAgcmV0dXJuIHJlczsKfQoKLyogZXhwb3J0ZWQgYXMgcmVjdmZyb206
IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX3JlY3Zmcm9t
IChpbnQgZmQsIHZvaWQgKmJ1Ziwgc2l6ZV90IGxlbiwgaW50IGZsYWdzLAoJ
CSBzdHJ1Y3Qgc29ja2FkZHIgKmZyb20sIHNvY2tsZW5fdCAqZnJvbWxlbikK
ewogIGludCByZXM7CiAgc2lnX2Rpc3BhdGNoX3BlbmRpbmcgKCk7CgogIGZo
YW5kbGVyX3NvY2tldCAqZmggPSBnZXQgKGZkKTsKCiAgbXlmYXVsdCBlZmF1
bHQ7CiAgaWYgKGVmYXVsdC5mYXVsdGVkIChFRkFVTFQpIHx8ICFmaCkKICAg
IHJlcyA9IC0xOwogIGVsc2UgaWYgKChyZXMgPSBsZW4pICE9IDApCiAgICBy
ZXMgPSBmaC0+cmVjdmZyb20gKGJ1ZiwgbGVuLCBmbGFncywgZnJvbSwgZnJv
bWxlbik7CgogIHN5c2NhbGxfcHJpbnRmICgiJWQgPSByZWN2ZnJvbSAoJWQs
ICVwLCAlZCwgJXgsICVwLCAlcCkiLAoJCSAgcmVzLCBmZCwgYnVmLCBsZW4s
IGZsYWdzLCBmcm9tLCBmcm9tbGVuKTsKCiAgcmV0dXJuIHJlczsKfQoKc3Rh
dGljIGludApjb252ZXJ0X3dzMV9pcF9vcHRuYW1lIChpbnQgb3B0bmFtZSkK
ewogIHN0YXRpYyBpbnQgd3MyX29wdG5hbWVbXSA9CiAgewogICAgMCwKICAg
IElQX09QVElPTlMsCiAgICBJUF9NVUxUSUNBU1RfSUYsCiAgICBJUF9NVUxU
SUNBU1RfVFRMLAogICAgSVBfTVVMVElDQVNUX0xPT1AsCiAgICBJUF9BRERf
TUVNQkVSU0hJUCwKICAgIElQX0RST1BfTUVNQkVSU0hJUCwKICAgIElQX1RU
TCwKICAgIElQX1RPUywKICAgIElQX0RPTlRGUkFHTUVOVAogIH07CiAgcmV0
dXJuIChvcHRuYW1lIDwgMSB8fCBvcHRuYW1lID4gX1dTMV9JUF9ET05URlJB
R01FTlQpCgkgPyBvcHRuYW1lCgkgOiB3czJfb3B0bmFtZVtvcHRuYW1lXTsK
fQoKLyogZXhwb3J0ZWQgYXMgc2V0c29ja29wdDogc3RhbmRhcmRzPyAqLwpl
eHRlcm4gIkMiIGludApjeWd3aW5fc2V0c29ja29wdCAoaW50IGZkLCBpbnQg
bGV2ZWwsIGludCBvcHRuYW1lLCBjb25zdCB2b2lkICpvcHR2YWwsCgkJICAg
c29ja2xlbl90IG9wdGxlbikKewogIGludCByZXM7CiAgZmhhbmRsZXJfc29j
a2V0ICpmaCA9IGdldCAoZmQpOwoKICBteWZhdWx0IGVmYXVsdDsKICBpZiAo
ZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkgfHwgIWZoKQogICAgcmVzID0gLTE7
CiAgZWxzZQogICAgewogICAgICAvKiBPbGQgYXBwbGljYXRpb25zIHN0aWxs
IHVzZSB0aGUgb2xkIFdpbnNvY2sxIElQUFJPVE9fSVAgdmFsdWVzLiAqLwog
ICAgICBpZiAobGV2ZWwgPT0gSVBQUk9UT19JUCAmJiBDWUdXSU5fVkVSU0lP
Tl9DSEVDS19GT1JfVVNJTkdfV0lOU09DSzFfVkFMVUVTKQoJb3B0bmFtZSA9
IGNvbnZlcnRfd3MxX2lwX29wdG5hbWUgKG9wdG5hbWUpOwoKICAgICAgLyog
T24gc3lzdGVtcyBzdXBwb3J0aW5nICJlbmhhbmNlZCBzb2NrZXQgc2VjdXJp
dHkgKDJLMyBhbmQgbGF0ZXIpLAoJIHRoZSBkZWZhdWx0IGJlaGF2aW91ciBv
ZiBzb2NrZXQgYmluZGluZyBpcyBlcXVpdmFsZW50IHRvIHRoZSBQT1NJWAoJ
IGJlaGF2aW91ciB3aXRoIFNPX1JFVVNFQUREUi4gIFNldHRpbmcgU09fUkVV
U0VBRERSIHdvdWxkIG9ubHkgcmVzdWx0CgkgaW4gd3JvbmcgYmVoYXZpb3Vy
LiAgU2VlIGFsc28gZmhhbmRsZXJfc29ja2V0OjpiaW5kKCkuICovCiAgICAg
IGlmIChsZXZlbCA9PSBTT0xfU09DS0VUICYmIG9wdG5hbWUgPT0gU09fUkVV
U0VBRERSCgkgICYmIHdpbmNhcC5oYXNfZW5oYW5jZWRfc29ja2V0X3NlY3Vy
aXR5ICgpKQoJcmVzID0gMDsKICAgICAgZWxzZQoJcmVzID0gc2V0c29ja29w
dCAoZmgtPmdldF9zb2NrZXQgKCksIGxldmVsLCBvcHRuYW1lLAoJCQkgIChj
b25zdCBjaGFyICopIG9wdHZhbCwgb3B0bGVuKTsKCiAgICAgIGlmIChvcHRs
ZW4gPT0gNCkKCXN5c2NhbGxfcHJpbnRmICgic2V0c29ja29wdCBvcHR2YWw9
JXgiLCAqKGxvbmcgKikgb3B0dmFsKTsKCiAgICAgIGlmIChyZXMpCgl7Cgkg
IC8qIEtCIDI0ODYxMToKCgkgICAgIFdpbmRvd3MgMjAwMCBhbmQgYWJvdmUg
ZG9uJ3Qgc3VwcG9ydCBzZXR0aW5nIHRoZSBJUF9UT1MgZmllbGQKCSAgICAg
d2l0aCBzZXRzb2Nrb3B0LiAgQWRkaXRpb25hbGx5LCBUT1Mgd2FzIGFsd2F5
cyAoYWxzbyB1bmRlciA5eAoJICAgICBhbmQgTlQpIG9ubHkgaW1wbGVtZW50
ZWQgZm9yIFVEUCBhbmQgSUNNUCwgbmV2ZXIgZm9yIFRDUC4KCgkgICAgIFRo
ZSBkaWZmZXJlbmNlIGlzIHRoYXQgYmVnaW5uaW5nIHdpdGggV2luZG93cyAy
MDAwIHRoZQoJICAgICBzZXRzb2Nrb3B0IGNhbGwgcmV0dXJucyBXaW5Tb2Nr
IGVycm9yIDEwMDIyLCBXU0FFSU5WQUwgd2hlbgoJICAgICB0cnlpbmcgdG8g
c2V0IHRoZSBJUF9UT1MgZmllbGQsIGluc3RlYWQgb2YganVzdCBpZ25vcmlu
ZyB0aGUKCSAgICAgY2FsbC4gIFRoaXMgaXMgKm5vdCogZXhwbGFpbmVkIGlu
IEtCIDI0ODYxMSwgYnV0IG9ubHkgaW4gS0IKCSAgICAgMjU4OTc4LgoKCSAg
ICAgRWl0aGVyIGNhc2UsIHRoZSBvZmZpY2lhbCB3b3JrYXJvdW5kIGlzIHRv
IGFkZCBhIG5ldyByZWdpc3RyeQoJICAgICBEV09SRCB2YWx1ZSBIS0xNL1N5
c3RlbS9DdXJyZW50Q29udHJvbFNldC9TZXJ2aWNlcy9UY3BpcC8uLi4KCSAg
ICAgLi4uICBQYXJhbWV0ZXJzL0Rpc2FibGVVc2VyVE9TU2V0dGluZywgc2V0
IHRvIDAsIGFuZCByZWJvb3QuCgoJICAgICBTaWRlbm90ZTogVGhlIHJlYXNv
bmluZyBmb3IgZHJvcHBpbmcgVG9TIGluIFdpbjJLIGlzIHRoYXQgVG9TCgkg
ICAgIHBlciBSRkMgMTM0OSBpcyBpbmNvbXBhdGlibGUgd2l0aCBEaWZmU2Vy
diBwZXIgUkZDIDI0NzQvMjQ3NS4KCgkgICAgIFdlIGp1c3QgaWdub3JlIHRo
ZSByZXR1cm4gdmFsdWUgb2Ygc2V0dGluZyBJUF9UT1MgdW5kZXIgV2luZG93
cwoJICAgICAyMDAwIGFuZCBhYm92ZSBlbnRpcmVseS4gKi8KCSAgaWYgKGxl
dmVsID09IElQUFJPVE9fSVAgJiYgb3B0bmFtZSA9PSBJUF9UT1MKCSAgICAg
ICYmIFdTQUdldExhc3RFcnJvciAoKSA9PSBXU0FFSU5WQUwKCSAgICAgICYm
IHdpbmNhcC5oYXNfZGlzYWJsZWRfdXNlcl90b3Nfc2V0dGluZyAoKSkKCSAg
ICB7CgkgICAgICBkZWJ1Z19wcmludGYgKCJGYWtlZCBJUF9UT1Mgc3VjY2Vz
cyIpOwoJICAgICAgcmVzID0gMDsKCSAgICB9CgkgIGVsc2UKCSAgICBzZXRf
d2luc29ja19lcnJubyAoKTsKCX0KICAgICAgZWxzZSBpZiAobGV2ZWwgPT0g
U09MX1NPQ0tFVCAmJiBvcHRuYW1lID09IFNPX1JFVVNFQUREUikKCWZoLT5z
YXdfcmV1c2VhZGRyICgqKGludCAqKSBvcHR2YWwpOwogICAgfQoKICBzeXNj
YWxsX3ByaW50ZiAoIiVkID0gc2V0c29ja29wdCAoJWQsICVkLCAleCwgJXAs
ICVkKSIsCgkJICByZXMsIGZkLCBsZXZlbCwgb3B0bmFtZSwgb3B0dmFsLCBv
cHRsZW4pOwogIHJldHVybiByZXM7Cn0KCi8qIGV4cG9ydGVkIGFzIGdldHNv
Y2tvcHQ6IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX2dl
dHNvY2tvcHQgKGludCBmZCwgaW50IGxldmVsLCBpbnQgb3B0bmFtZSwgdm9p
ZCAqb3B0dmFsLAoJCSAgIHNvY2tsZW5fdCAqb3B0bGVuKQp7CiAgaW50IHJl
czsKICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CgogIG15ZmF1
bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSB8fCAh
ZmgpCiAgICByZXMgPSAtMTsKICBlbHNlIGlmIChvcHRuYW1lID09IFNPX1BF
RVJDUkVEKQogICAgewogICAgICBzdHJ1Y3QgdWNyZWQgKmNyZWQgPSAoc3Ry
dWN0IHVjcmVkICopIG9wdHZhbDsKICAgICAgcmVzID0gZmgtPmdldHBlZXJl
aWQgKCZjcmVkLT5waWQsICZjcmVkLT51aWQsICZjcmVkLT5naWQpOwogICAg
fQogIGVsc2UKICAgIHsKICAgICAgLyogT2xkIGFwcGxpY2F0aW9ucyBzdGls
bCB1c2UgdGhlIG9sZCBXaW5zb2NrMSBJUFBST1RPX0lQIHZhbHVlcy4gKi8K
ICAgICAgaWYgKGxldmVsID09IElQUFJPVE9fSVAgJiYgQ1lHV0lOX1ZFUlNJ
T05fQ0hFQ0tfRk9SX1VTSU5HX1dJTlNPQ0sxX1ZBTFVFUykKCW9wdG5hbWUg
PSBjb252ZXJ0X3dzMV9pcF9vcHRuYW1lIChvcHRuYW1lKTsKICAgICAgcmVz
ID0gZ2V0c29ja29wdCAoZmgtPmdldF9zb2NrZXQgKCksIGxldmVsLCBvcHRu
YW1lLCAoY2hhciAqKSBvcHR2YWwsCgkJCShpbnQgKikgb3B0bGVuKTsKCiAg
ICAgIGlmIChvcHRuYW1lID09IFNPX0VSUk9SKQoJewoJICBpbnQgKmUgPSAo
aW50ICopIG9wdHZhbDsKCgkgIGRlYnVnX3ByaW50ZiAoIldpblNvY2sgU09f
RVJST1IgPSAlZCIsICplKTsKCSAgKmUgPSBmaW5kX3dpbnNvY2tfZXJybm8g
KCplKTsKCX0KCiAgICAgIGlmIChyZXMpCglzZXRfd2luc29ja19lcnJubyAo
KTsKICAgIH0KCiAgc3lzY2FsbF9wcmludGYgKCIlZCA9IGdldHNvY2tvcHQg
KCVkLCAlZCwgMHgleCwgJXAsICVwKSIsCgkJICByZXMsIGZkLCBsZXZlbCwg
b3B0bmFtZSwgb3B0dmFsLCBvcHRsZW4pOwogIHJldHVybiByZXM7Cn0KCmV4
dGVybiAiQyIgaW50CmdldHBlZXJlaWQgKGludCBmZCwgX191aWQzMl90ICpl
dWlkLCBfX2dpZDMyX3QgKmVnaWQpCnsKICBzaWdfZGlzcGF0Y2hfcGVuZGlu
ZyAoKTsKICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CiAgaWYg
KGZoKQogICAgcmV0dXJuIGZoLT5nZXRwZWVyZWlkIChOVUxMLCBldWlkLCBl
Z2lkKTsKICByZXR1cm4gLTE7Cn0KCi8qIGV4cG9ydGVkIGFzIGNvbm5lY3Q6
IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX2Nvbm5lY3Qg
KGludCBmZCwgY29uc3Qgc3RydWN0IHNvY2thZGRyICpuYW1lLCBzb2NrbGVu
X3QgbmFtZWxlbikKewogIGludCByZXM7CiAgc2lnX2Rpc3BhdGNoX3BlbmRp
bmcgKCk7CgogIGZoYW5kbGVyX3NvY2tldCAqZmggPSBnZXQgKGZkKTsKCiAg
bXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVmYXVsdC5mYXVsdGVkIChFRkFVTFQp
IHx8ICFmaCkKICAgIHJlcyA9IC0xOwogIGVsc2UKICAgIHJlcyA9IGZoLT5j
b25uZWN0IChuYW1lLCBuYW1lbGVuKTsKCiAgc3lzY2FsbF9wcmludGYgKCIl
ZCA9IGNvbm5lY3QgKCVkLCAlcCwgJWQpIiwgcmVzLCBmZCwgbmFtZSwgbmFt
ZWxlbik7CgogIHJldHVybiByZXM7Cn0KCi8qIGV4cG9ydGVkIGFzIGdldHNl
cnZieW5hbWU6IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBzdHJ1Y3Qgc2Vy
dmVudCAqCmN5Z3dpbl9nZXRzZXJ2YnluYW1lIChjb25zdCBjaGFyICpuYW1l
LCBjb25zdCBjaGFyICpwcm90bykKewogIHNpZ19kaXNwYXRjaF9wZW5kaW5n
ICgpOwogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAo
RUZBVUxUKSkKICAgIHJldHVybiBOVUxMOwoKICBzZXJ2ZW50ICpyZXMgPSBk
dXBfZW50IChnZXRzZXJ2YnluYW1lIChuYW1lLCBwcm90bykpOwogIHN5c2Nh
bGxfcHJpbnRmICgiJXAgPSBnZXRzZXJ2YnluYW1lICglcywgJXMpIiwgcmVz
LCBuYW1lLCBwcm90byk7CiAgcmV0dXJuIHJlczsKfQoKLyogZXhwb3J0ZWQg
YXMgZ2V0c2VydmJ5cG9ydDogc3RhbmRhcmRzPyAqLwpleHRlcm4gIkMiIHN0
cnVjdCBzZXJ2ZW50ICoKY3lnd2luX2dldHNlcnZieXBvcnQgKGludCBwb3J0
LCBjb25zdCBjaGFyICpwcm90bykKewogIHNpZ19kaXNwYXRjaF9wZW5kaW5n
ICgpOwogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAo
RUZBVUxUKSkKICAgIHJldHVybiBOVUxMOwoKICBzZXJ2ZW50ICpyZXMgPSBk
dXBfZW50IChnZXRzZXJ2Ynlwb3J0IChwb3J0LCBwcm90bykpOwogIHN5c2Nh
bGxfcHJpbnRmICgiJXAgPSBnZXRzZXJ2Ynlwb3J0ICglZCwgJXMpIiwgcmVz
LCBwb3J0LCBwcm90byk7CiAgcmV0dXJuIHJlczsKfQoKZXh0ZXJuICJDIiBp
bnQKY3lnd2luX2dldGhvc3RuYW1lIChjaGFyICpuYW1lLCBzaXplX3QgbGVu
KQp7CiAgc2lnX2Rpc3BhdGNoX3BlbmRpbmcgKCk7CiAgbXlmYXVsdCBlZmF1
bHQ7CiAgaWYgKGVmYXVsdC5mYXVsdGVkIChFRkFVTFQpKQogICAgcmV0dXJu
IC0xOwoKICBpZiAoZ2V0aG9zdG5hbWUgKG5hbWUsIGxlbikpCiAgICB7CiAg
ICAgIERXT1JEIGxvY2FsX2xlbiA9IGxlbjsKCiAgICAgIGlmICghR2V0Q29t
cHV0ZXJOYW1lQSAobmFtZSwgJmxvY2FsX2xlbikpCgl7CgkgIHNldF93aW5z
b2NrX2Vycm5vICgpOwoJICByZXR1cm4gLTE7Cgl9CiAgICB9CiAgZGVidWdf
cHJpbnRmICgibmFtZSAlcyIsIG5hbWUpOwogIHJldHVybiAwOwp9CgovKiBl
eHBvcnRlZCBhcyBnZXRob3N0YnluYW1lOiBzdGFuZGFyZHM/ICovCmV4dGVy
biAiQyIgc3RydWN0IGhvc3RlbnQgKgpjeWd3aW5fZ2V0aG9zdGJ5bmFtZSAo
Y29uc3QgY2hhciAqbmFtZSkKewogIHNpZ19kaXNwYXRjaF9wZW5kaW5nICgp
OwogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZB
VUxUKSkKICAgICAgcmV0dXJuIE5VTEw7CgogIHVuc2lnbmVkIGNoYXIgdG1w
X2FkZHJbNF07CiAgc3RydWN0IGhvc3RlbnQgdG1wLCAqaDsKICBjaGFyICp0
bXBfYWxpYXNlc1sxXSA9IHswfTsKICBjaGFyICp0bXBfYWRkcl9saXN0WzJd
ID0gezAsMH07CiAgdW5zaWduZWQgaW50IGEsIGIsIGMsIGQ7CiAgY2hhciBk
dW1teTsKCiAgaWYgKHNzY2FuZiAobmFtZSwgIiV1LiV1LiV1LiV1JWMiLCAm
YSwgJmIsICZjLCAmZCwgJmR1bW15KSAhPSA0CiAgICAgIHx8IGEgPj0gMjU2
IHx8IGIgPj0gMjU2IHx8IGMgPj0gMjU2IHx8IGQgPj0gMjU2KQogICAgaCA9
IGdldGhvc3RieW5hbWUgKG5hbWUpOwogIGVsc2UKICAgIHsKICAgICAgLyog
SW4gY2FzZSB5b3UgZG9uJ3QgaGF2ZSBETlMsIGF0IGxlYXN0IHgueC54Lngg
c3RpbGwgd29ya3MgKi8KICAgICAgbWVtc2V0ICgmdG1wLCAwLCBzaXplb2Yg
KHRtcCkpOwogICAgICB0bXBfYWRkclswXSA9IGE7CiAgICAgIHRtcF9hZGRy
WzFdID0gYjsKICAgICAgdG1wX2FkZHJbMl0gPSBjOwogICAgICB0bXBfYWRk
clszXSA9IGQ7CiAgICAgIHRtcF9hZGRyX2xpc3RbMF0gPSAoY2hhciAqKSB0
bXBfYWRkcjsKICAgICAgdG1wLmhfbmFtZSA9IG5hbWU7CiAgICAgIHRtcC5o
X2FsaWFzZXMgPSB0bXBfYWxpYXNlczsKICAgICAgdG1wLmhfYWRkcnR5cGUg
PSAyOwogICAgICB0bXAuaF9sZW5ndGggPSA0OwogICAgICB0bXAuaF9hZGRy
X2xpc3QgPSB0bXBfYWRkcl9saXN0OwogICAgICBoID0gJnRtcDsKICAgIH0K
CiAgaG9zdGVudCAqcmVzID0gZHVwX2VudCAoaCk7CiAgaWYgKHJlcykKICAg
IGRlYnVnX3ByaW50ZiAoImhfbmFtZSAlcyIsIHJlcy0+aF9uYW1lKTsKICBl
bHNlCiAgICB7CiAgICAgIGRlYnVnX3ByaW50ZiAoImR1cF9lbnQgcmV0dXJu
ZWQgTlVMTCBmb3IgbmFtZSAlcywgaCAlcCIsIG5hbWUsIGgpOwogICAgICBz
ZXRfaG9zdF9lcnJubyAoKTsKICAgIH0KICByZXR1cm4gcmVzOwp9CgovKiBl
eHBvcnRlZCBhcyBnZXRob3N0YnlhZGRyOiBzdGFuZGFyZHM/ICovCmV4dGVy
biAiQyIgc3RydWN0IGhvc3RlbnQgKgpjeWd3aW5fZ2V0aG9zdGJ5YWRkciAo
Y29uc3QgY2hhciAqYWRkciwgaW50IGxlbiwgaW50IHR5cGUpCnsKICBzaWdf
ZGlzcGF0Y2hfcGVuZGluZyAoKTsKICBteWZhdWx0IGVmYXVsdDsKICBpZiAo
ZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkpCiAgICByZXR1cm4gTlVMTDsKCiAg
aG9zdGVudCAqcmVzID0gZHVwX2VudCAoZ2V0aG9zdGJ5YWRkciAoYWRkciwg
bGVuLCB0eXBlKSk7CiAgaWYgKHJlcykKICAgIGRlYnVnX3ByaW50ZiAoImhf
bmFtZSAlcyIsIHJlcy0+aF9uYW1lKTsKICBlbHNlCiAgICBzZXRfaG9zdF9l
cnJubyAoKTsKICByZXR1cm4gcmVzOwp9CgovKiBnZXRob3N0YnluYW1lMjog
c3RhbmRhcmRzPyAqLwpleHRlcm4gIkMiIHN0cnVjdCBob3N0ZW50ICoKZ2V0
aG9zdGJ5bmFtZTIgKGNvbnN0IGNoYXIgKm5hbWUsIGludCBhZikKewogIHNp
Z19kaXNwYXRjaF9wZW5kaW5nICgpOwogIG15ZmF1bHQgZWZhdWx0OwogIGlm
IChlZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSkKICAgIHJldHVybiBOVUxMOwoK
ICBEV09SRCB0eXBlOwogIGhvc3RlbnQgdG1wLCAqaCA9IE5VTEw7CiAgdG1w
LmhfbmFtZSA9IE5VTEw7CiAgdG1wLmhfYWxpYXNlcyA9IE5VTEw7CiAgdG1w
LmhfYWRkcnR5cGUgPSBhZjsKICBzd2l0Y2ggKGFmKSAKICAgIHsKICAgIGNh
c2UgQUZfSU5FVDoKICAgICAgdG1wLmhfbGVuZ3RoID0gc2l6ZW9mIChJUDRf
QUREUkVTUyk7CiAgICAgIHR5cGUgPSBETlNfVFlQRV9BOwogICAgICBicmVh
azsKICAgIGNhc2UgQUZfSU5FVDY6CiAgICAgIHRtcC5oX2xlbmd0aCA9IHNp
emVvZiAoSVA2X0FERFJFU1MpOwogICAgICB0eXBlID0gRE5TX1RZUEVfQUFB
QTsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAgICBzZXRfZXJybm8g
KEVBRk5PU1VQUE9SVCk7CiAgICAgIGhfZXJybm8gPSBORVREQl9JTlRFUk5B
TDsKICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgCiAgUEROU19SRUNPUkQg
cFF1ZXJ5UmVzdWx0c1NldCwgcnI7CiAgLyogTm9ybWFsIHF1ZXJ5LCBpbmNs
dWRpbmcgc2VhcmNoICovCiAgRE5TX1NUQVRVUyByZXMgPSBEbnNRdWVyeV9B
IChuYW1lLCB0eXBlLCBETlNfUVVFUllfU1RBTkRBUkQsCgkJCSAgICAgICBO
VUxMLCAmcFF1ZXJ5UmVzdWx0c1NldCwgTlVMTCk7CgogIGRlYnVnX3ByaW50
ZiAoIkRuc1F1ZXJ5OiAlcyB0eXBlID0gJWQgcmVzID0gJWx1XG4iLCBuYW1l
LCB0eXBlLCByZXMpOwoKICAvLyBORVREQl9JTlRFUk5BTCAtMSAvKiBzZWUg
ZXJybm8gKi8KICAvLyBIT1NUX05PVF9GT1VORCAgMSAvKiBBdXRob3JpdGF0
aXZlIEFuc3dlciBIb3N0IG5vdCBmb3VuZCAqLwogIC8vIFRSWV9BR0FJTiAg
ICAgICAyIC8qIE5vbi1BdXRob3JpdGl2ZSBIb3N0IG5vdCBmb3VuZCwgb3Ig
U0VSVkVSRkFJTCAqLwogIC8vIE5PX1JFQ09WRVJZICAgICAzIC8qIE5vbiBy
ZWNvdmVyYWJsZSBlcnJvcnMsIEZPUk1FUlIsIFJFRlVTRUQsIE5PVElNUCAq
LwogIC8vIE5PX0RBVEEgICAgICAgICA0IC8qIFZhbGlkIG5hbWUsIG5vIGRh
dGEgcmVjb3JkIG9mIHJlcXVlc3RlZCB0eXBlICovCgogIHN3aXRjaCAocmVz
KSAKICAgIHsKICAgIGNhc2UgRVJST1JfU1VDQ0VTUzoKICAgICAgYnJlYWs7
CiAgICBjYXNlIEVSUk9SX0lOVkFMSURfTkFNRToKICAgICAgc2V0X2Vycm5v
IChFSU5WQUwpOwogICAgICBoX2Vycm5vID0gTkVUREJfSU5URVJOQUw7Owog
ICAgICByZXR1cm4gTlVMTDsKICAgIGNhc2UgRVJST1JfVElNRU9VVDoKICAg
IGNhc2UgRE5TX0VSUk9SX1JDT0RFX1NFUlZFUl9GQUlMVVJFOgogICAgICBo
X2Vycm5vID0gVFJZX0FHQUlOOwogICAgICByZXR1cm4gTlVMTDsKICAgIGNh
c2UgRE5TX0VSUk9SX1JDT0RFX05BTUVfRVJST1I6CiAgICAgIGhfZXJybm8g
PSBIT1NUX05PVF9GT1VORDsKICAgICAgcmV0dXJuIE5VTEw7CiAgICBjYXNl
IEROU19FUlJPUl9OT19ETlNfU0VSVkVSUzoKICAgIGNhc2UgRE5TX0VSUk9S
X1JDT0RFX0ZPUk1BVF9FUlJPUjoKICAgIGNhc2UgRE5TX0VSUk9SX1JDT0RF
X05PVF9JTVBMRU1FTlRFRDoKICAgIGNhc2UgRE5TX0VSUk9SX1JDT0RFX1JF
RlVTRUQ6CiAgICAgIGhfZXJybm8gPSBOT19SRUNPVkVSWTsKICAgICAgcmV0
dXJuIE5VTEw7CiAgICBjYXNlIEROU19JTkZPX05PX1JFQ09SRFM6ICAvKiBN
YXkgYmUgcmV0dXJuZWQgd2hlbiB0aGUgaG9zdCBkb2Vzbid0IGV4aXN0ICov
CiAgICAgIGhfZXJybm8gPSBOT19EQVRBOwogICAgICByZXR1cm4gTlVMTDsK
ICAgIGRlZmF1bHQ6CiAgICAgIGRlYnVnX3ByaW50ZiAoIlVua25vd24gY29k
ZVxuIik7CiAgICAgIGhfZXJybm8gPSBOT19SRUNPVkVSWTsKICAgICAgcmV0
dXJuIE5VTEw7CiAgICB9CgogIGNvbnN0IGludCBSRUNPUkRfSU5DID0gMTY7
CiAgaW50IHJlY29yZF9zaXplID0gMDsKICBpbnQgYWxpYXNfY291bnQgPSAw
OwogIGludCBhZGRyZXNzX2NvdW50ID0gMDsKICBmb3IgKHJyID0gcFF1ZXJ5
UmVzdWx0c1NldDsgcnI7IHJyID0gcnItPnBOZXh0KQogICAgewogICAgICBk
ZWJ1Z19wcmludGYgKCIlcyBTZWN0aW9uICVkIFR5cGUgJXUgU2l6ZSAlZFxu
IiwgCgkJICAgIHJyLT5wTmFtZSwgcnItPkZsYWdzLlMuU2VjdGlvbiwgcnIt
PndUeXBlLCByci0+d0RhdGFMZW5ndGgpOwogICAgICAvKiBOb3JtYWxseSBE
bnNRdWVyeSBkb2VzIG5vdCBwcm92aWRlIFF1ZXN0aW9uIHNlY3Rpb24gcmVj
b3JkcyBhbmQgd2UKCSBzaG91bGQgb25seSBjb25zaWRlciBBbnN3ZXIgc2Vj
dGlvbiByZWNvcmRzLiAKCSBIb3dldmVyIERuc1F1ZXJ5IHNlZW1zIHRvIHJl
dHVybiBvbmx5IFF1ZXN0aW9uIHJlY29yZHMgKHdpdGggZGF0YSkKCSBmb3Ig
bG9jYWwgbmFtZXMgYW5kIG51bWVyaWMgYWRkcmVzc2VzICovCiAgICAgIGlm
ICghKChyci0+RmxhZ3MuUy5TZWN0aW9uID09IERuc1NlY3Rpb25BbnN3ZXIp
CgkgICAgfHwgKHJyLT5GbGFncy5TLlNlY3Rpb24gPT0gRG5zU2VjdGlvblF1
ZXN0aW9uKSkpIAoJY29udGludWU7CiAgICAgIAogICAgICAvKiBBbGxvYyBz
cGFjZSwgaW5jbHVkaW5nIHR3byBudWxsIGVudHJpZXMgKi8KICAgICAgaWYg
KChhbGlhc19jb3VudCArIGFkZHJlc3NfY291bnQgKyAyKSA+PSByZWNvcmRf
c2l6ZSkgCgl7CgkgIHZvaWQgKiBwdHIgPSByZWFsbG9jICh0bXAuaF9hbGlh
c2VzLCAKCQkJCXNpemVvZiAoY2hhciAqKSoocmVjb3JkX3NpemUgKz0gUkVD
T1JEX0lOQykpOwoJICBpZiAoIXB0cikgCgkgICAgewoJICAgICAgaF9lcnJu
byA9IE5FVERCX0lOVEVSTkFMOwoJICAgICAgYWRkcmVzc19jb3VudCA9IC0x
OyAvKiBGbGFnIGVycm9yICovCgkgICAgICBicmVhazsKCSAgICB9CgkgIHRt
cC5oX2FsaWFzZXMgPSAoY2hhciAqKikgcHRyOwoJfQogICAgICAKICAgICAg
c3dpdGNoIChyci0+d1R5cGUpIAoJewoJY2FzZSBETlNfVFlQRV9DTkFNRToK
CSAgLyogVGhlIENOQU1FIHJlY29yZHMgYXJlIHN1cHBvc2VkIHRvIGZvcm0g
YSBjaGFpbi4KCSAgICAgV2UgdHJ1c3QgdGhlIHJlc29sdmVyLgoJICAgICBN
b3ZlIHRoZSBhZGRyZXNzZXMuIFRoaXMgc2hvdWxkIG5ldmVyIGJlIG5lZWRl
ZC4gKi8KCSAgZm9yIChpbnQgaSA9IGFkZHJlc3NfY291bnQ7IGkgPiAwOyBp
LS0pCgkgICAgdG1wLmhfYWxpYXNlc1thbGlhc19jb3VudCArIDEgKyBpXSA9
IHRtcC5oX2FsaWFzZXNbYWxpYXNfY291bnQgKyBpXTsKCSAgdG1wLmhfYWxp
YXNlc1thbGlhc19jb3VudCsrXSA9IHJyLT5wTmFtZTsKCSAgYnJlYWs7Cglj
YXNlIEROU19UWVBFX0E6CgkgIC8qIFRoZSBhZGRyZXNzIHJlY29yZHMgc2hv
dWxkIGFsbCBoYXZlIGFzIHBOYW1lIHRoZSBsYXN0IGNhbm9uaWNhbCBuYW1l
LgoJICAgICBXZSB0cnVzdCB0aGUgcmVzb2x2ZXIgKi8KCSAgaWYgKChhZiA9
PSBBRl9JTkVUKSAKCSAgICAgICYmIChyci0+d0RhdGFMZW5ndGggPT0gc2l6
ZW9mIChJUDRfQUREUkVTUykpKQoJICAgIHsKCSAgICAgIHRtcC5oX2FsaWFz
ZXNbYWxpYXNfY291bnQgKyArK2FkZHJlc3NfY291bnRdID0gKGNoYXIgKikg
JiByci0+RGF0YS5BLklwQWRkcmVzczsKCSAgICAgIHRtcC5oX25hbWUgPSBy
ci0+cE5hbWU7CgkgICAgfQoJICBicmVhazsKCWNhc2UgRE5TX1RZUEVfQUFB
QTogCgkgIGlmICgoYWYgPT0gQUZfSU5FVDYpIAoJICAgICAgJiYgKHJyLT53
RGF0YUxlbmd0aCA9PSBzaXplb2YgKElQNl9BRERSRVNTKSkpCgkgICAgewoJ
ICAgICAgdG1wLmhfYWxpYXNlc1thbGlhc19jb3VudCArICsrYWRkcmVzc19j
b3VudF0gPSAoY2hhciAqKSAmIHJyLT5EYXRhLkFBQUEuSXA2QWRkcmVzczsK
CSAgICAgIHRtcC5oX25hbWUgPSByci0+cE5hbWU7CgkgICAgfQoJICBicmVh
azsKCWRlZmF1bHQ6CgkgIGNvbnRpbnVlOwoJfQogICAgICB9CiAgCiAgaWYg
KGFkZHJlc3NfY291bnQgPT0gMCkKICAgIGhfZXJybm8gPSBOT19EQVRBOwog
IGVsc2UgaWYgKGFkZHJlc3NfY291bnQgPiAwKSAKICAgIHsKICAgICAgdG1w
LmhfYWxpYXNlc1thbGlhc19jb3VudF0gPSBOVUxMOwogICAgICB0bXAuaF9h
ZGRyX2xpc3QgPSAmIHRtcC5oX2FsaWFzZXNbYWxpYXNfY291bnQgKyAxXTsK
ICAgICAgdG1wLmhfYWRkcl9saXN0W2FkZHJlc3NfY291bnRdID0gTlVMTDsK
ICAgICAgaWYgKCEoaCA9IGR1cF9lbnQgKCZ0bXApKSkKCWhfZXJybm8gPSBO
RVREQl9JTlRFUk5BTDsKICAgIH0KICBEbnNSZWNvcmRMaXN0RnJlZSAocFF1
ZXJ5UmVzdWx0c1NldCwgRG5zRnJlZVJlY29yZExpc3QpOwogIGZyZWUgKHRt
cC5oX2FsaWFzZXMpOwogIHJldHVybiBoOwp9CgovKiBleHBvcnRlZCBhcyBh
Y2NlcHQ6IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX2Fj
Y2VwdCAoaW50IGZkLCBzdHJ1Y3Qgc29ja2FkZHIgKnBlZXIsIHNvY2tsZW5f
dCAqbGVuKQp7CiAgaW50IHJlczsKICBzaWdfZGlzcGF0Y2hfcGVuZGluZyAo
KTsKCiAgZmhhbmRsZXJfc29ja2V0ICpmaCA9IGdldCAoZmQpOwoKICBteWZh
dWx0IGVmYXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkgfHwg
IWZoKQogICAgcmVzID0gLTE7CiAgZWxzZQogICAgcmVzID0gZmgtPmFjY2Vw
dCAocGVlciwgbGVuKTsKCiAgc3lzY2FsbF9wcmludGYgKCIlZCA9IGFjY2Vw
dCAoJWQsICVwLCAlcCkiLCByZXMsIGZkLCBwZWVyLCBsZW4pOwogIHJldHVy
biByZXM7Cn0KCi8qIGV4cG9ydGVkIGFzIGJpbmQ6IHN0YW5kYXJkcz8gKi8K
ZXh0ZXJuICJDIiBpbnQKY3lnd2luX2JpbmQgKGludCBmZCwgY29uc3Qgc3Ry
dWN0IHNvY2thZGRyICpteV9hZGRyLCBzb2NrbGVuX3QgYWRkcmxlbikKewog
IGludCByZXM7CiAgc2lnX2Rpc3BhdGNoX3BlbmRpbmcgKCk7CiAgZmhhbmRs
ZXJfc29ja2V0ICpmaCA9IGdldCAoZmQpOwoKICBteWZhdWx0IGVmYXVsdDsK
ICBpZiAoZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkgfHwgIWZoKQogICAgcmVz
ID0gLTE7CiAgZWxzZQogICAgcmVzID0gZmgtPmJpbmQgKG15X2FkZHIsIGFk
ZHJsZW4pOwoKICBzeXNjYWxsX3ByaW50ZiAoIiVkID0gYmluZCAoJWQsICVw
LCAlZCkiLCByZXMsIGZkLCBteV9hZGRyLCBhZGRybGVuKTsKICByZXR1cm4g
cmVzOwp9CgovKiBleHBvcnRlZCBhcyBnZXRzb2NrbmFtZTogc3RhbmRhcmRz
PyAqLwpleHRlcm4gIkMiIGludApjeWd3aW5fZ2V0c29ja25hbWUgKGludCBm
ZCwgc3RydWN0IHNvY2thZGRyICphZGRyLCBzb2NrbGVuX3QgKm5hbWVsZW4p
CnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRjaF9wZW5kaW5nICgpOwoKICBm
aGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CgogIG15ZmF1bHQgZWZh
dWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSB8fCAhZmgpCiAg
ICByZXMgPSAtMTsKICBlbHNlCiAgICByZXMgPSBmaC0+Z2V0c29ja25hbWUg
KGFkZHIsIG5hbWVsZW4pOwoKICBzeXNjYWxsX3ByaW50ZiAoIiVkID0gZ2V0
c29ja25hbWUgKCVkLCAlcCwgJXApIiwgcmVzLCBmZCwgYWRkciwgbmFtZWxl
bik7CiAgcmV0dXJuIHJlczsKfQoKLyogZXhwb3J0ZWQgYXMgbGlzdGVuOiBz
dGFuZGFyZHM/ICovCmV4dGVybiAiQyIgaW50CmN5Z3dpbl9saXN0ZW4gKGlu
dCBmZCwgaW50IGJhY2tsb2cpCnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRj
aF9wZW5kaW5nICgpOwogIGZoYW5kbGVyX3NvY2tldCAqZmggPSBnZXQgKGZk
KTsKCiAgaWYgKCFmaCkKICAgIHJlcyA9IC0xOwogIGVsc2UKICAgIHJlcyA9
IGZoLT5saXN0ZW4gKGJhY2tsb2cpOwoKICBzeXNjYWxsX3ByaW50ZiAoIiVk
ID0gbGlzdGVuICglZCwgJWQpIiwgcmVzLCBmZCwgYmFja2xvZyk7CiAgcmV0
dXJuIHJlczsKfQoKLyogZXhwb3J0ZWQgYXMgc2h1dGRvd246IHN0YW5kYXJk
cz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX3NodXRkb3duIChpbnQgZmQs
IGludCBob3cpCnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRjaF9wZW5kaW5n
ICgpOwoKICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CgogIGlm
ICghZmgpCiAgICByZXMgPSAtMTsKICBlbHNlCiAgICByZXMgPSBmaC0+c2h1
dGRvd24gKGhvdyk7CgogIHN5c2NhbGxfcHJpbnRmICgiJWQgPSBzaHV0ZG93
biAoJWQsICVkKSIsIHJlcywgZmQsIGhvdyk7CiAgcmV0dXJuIHJlczsKfQoK
LyogZXhwb3J0ZWQgYXMgaHN0cmVycm9yOiBCU0QgNC4zICAqLwpleHRlcm4g
IkMiIGNvbnN0IGNoYXIgKgpjeWd3aW5faHN0cmVycm9yIChpbnQgZXJyKQp7
CiAgaW50IGk7CgogIGZvciAoaSA9IDA7IGhvc3RfZXJybWFwW2ldLmUgIT0g
MDsgKytpKQogICAgaWYgKGVyciA9PSBob3N0X2Vycm1hcFtpXS5lKQogICAg
ICBicmVhazsKCiAgcmV0dXJuIGhvc3RfZXJybWFwW2ldLnM7Cn0KCi8qIGV4
cG9ydGVkIGFzIGhlcnJvcjogQlNEIDQuMyAgKi8KZXh0ZXJuICJDIiB2b2lk
CmN5Z3dpbl9oZXJyb3IgKGNvbnN0IGNoYXIgKnMpCnsKICBteWZhdWx0IGVm
YXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0ZWQgKCkpCiAgICByZXR1cm47CiAg
aWYgKGN5Z2hlYXAtPmZkdGFiLm5vdF9vcGVuICgyKSkKICAgIHJldHVybjsK
CiAgaWYgKHMpCiAgICB7CiAgICAgIHdyaXRlICgyLCBzLCBzdHJsZW4gKHMp
KTsKICAgICAgd3JpdGUgKDIsICI6ICIsIDIpOwogICAgfQoKICBjb25zdCBj
aGFyICpoX2VycnN0ciA9IGN5Z3dpbl9oc3RyZXJyb3IgKGhfZXJybm8pOwoK
ICBpZiAoIWhfZXJyc3RyKQogICAgc3dpdGNoIChoX2Vycm5vKQogICAgICB7
CgljYXNlIE5FVERCX0lOVEVSTkFMOgoJICBoX2VycnN0ciA9ICJSZXNvbHZl
ciBpbnRlcm5hbCBlcnJvciI7CgkgIGJyZWFrOwoJY2FzZSBORVREQl9TVUND
RVNTOgoJICBoX2VycnN0ciA9ICJSZXNvbHZlciBlcnJvciAwIChubyBlcnJv
cikiOwoJICBicmVhazsKCWRlZmF1bHQ6CgkgIGhfZXJyc3RyID0gIlVua25v
d24gcmVzb2x2ZXIgZXJyb3IiOwoJICBicmVhazsKICAgICAgfQogIHdyaXRl
ICgyLCBoX2VycnN0ciwgc3RybGVuIChoX2VycnN0cikpOwogIHdyaXRlICgy
LCAiXG4iLCAxKTsKfQoKLyogZXhwb3J0ZWQgYXMgZ2V0cGVlcm5hbWU6IHN0
YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX2dldHBlZXJuYW1l
IChpbnQgZmQsIHN0cnVjdCBzb2NrYWRkciAqbmFtZSwgc29ja2xlbl90ICps
ZW4pCnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRjaF9wZW5kaW5nICgpOwoK
ICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CgogIG15ZmF1bHQg
ZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSB8fCAhZmgp
CiAgICByZXMgPSAtMTsKICBlbHNlCiAgICByZXMgPSBmaC0+Z2V0cGVlcm5h
bWUgKG5hbWUsIGxlbik7CgogIHN5c2NhbGxfcHJpbnRmICgiJWQgPSBnZXRw
ZWVybmFtZSAoJWQpICVkIiwgcmVzLCBmZCwgKGZoID8gZmgtPmdldF9zb2Nr
ZXQgKCkgOiAtMSkpOwogIHJldHVybiByZXM7Cn0KCi8qIGV4cG9ydGVkIGFz
IHJlY3Y6IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3lnd2luX3Jl
Y3YgKGludCBmZCwgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBpbnQgZmxhZ3Mp
CnsKICByZXR1cm4gY3lnd2luX3JlY3Zmcm9tIChmZCwgYnVmLCBsZW4sIGZs
YWdzLCBOVUxMLCBOVUxMKTsKfQoKLyogZXhwb3J0ZWQgYXMgc2VuZDogc3Rh
bmRhcmRzPyAqLwpleHRlcm4gIkMiIGludApjeWd3aW5fc2VuZCAoaW50IGZk
LCBjb25zdCB2b2lkICpidWYsIHNpemVfdCBsZW4sIGludCBmbGFncykKewog
IHJldHVybiBjeWd3aW5fc2VuZHRvIChmZCwgYnVmLCBsZW4sIGZsYWdzLCBO
VUxMLCAwKTsKfQoKLyogZ2V0ZG9tYWlubmFtZTogc3RhbmRhcmRzPyAqLwpl
eHRlcm4gIkMiIGludApnZXRkb21haW5uYW1lIChjaGFyICpkb21haW4sIHNp
emVfdCBsZW4pCnsKICBzaWdfZGlzcGF0Y2hfcGVuZGluZyAoKTsKICBteWZh
dWx0IGVmYXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkpCiAg
ICByZXR1cm4gLTE7CgogIFBGSVhFRF9JTkZPIGluZm8gPSBOVUxMOwogIFVM
T05HIHNpemUgPSAwOwoKICBpZiAoR2V0TmV0d29ya1BhcmFtcyhpbmZvLCAm
c2l6ZSkgPT0gRVJST1JfQlVGRkVSX09WRVJGTE9XCiAgICAgICYmIChpbmZv
ID0gKFBGSVhFRF9JTkZPKSBhbGxvY2Eoc2l6ZSkpCiAgICAgICYmIEdldE5l
dHdvcmtQYXJhbXMoaW5mbywgJnNpemUpID09IEVSUk9SX1NVQ0NFU1MpCiAg
ICB7CiAgICAgIHN0cm5jcHkoZG9tYWluLCBpbmZvLT5Eb21haW5OYW1lLCBs
ZW4pOwogICAgICByZXR1cm4gMDsKICAgIH0KCiAgLyogVGhpcyBpcyBvbmx5
IHVzZWQgYnkgTlQ0LgogICAgIFRoZSByZWdpc3RyeSBuYW1lcyBhcmUgbGFu
Z3VhZ2UgaW5kZXBlbmRlbnQuICovCiAgcmVnX2tleSByIChIS0VZX0xPQ0FM
X01BQ0hJTkUsIEtFWV9SRUFELAoJICAgICAiU1lTVEVNIiwgIkN1cnJlbnRD
b250cm9sU2V0IiwgIlNlcnZpY2VzIiwKCSAgICAgIlRjcGlwIiwgIlBhcmFt
ZXRlcnMiLCBOVUxMKTsKCiAgaWYgKCFyLmVycm9yICgpKQogICAgewogICAg
ICBpbnQgcmVzMSwgcmVzMiA9IDA7IC8qIFN1cHByZXNzIGNvbXBpbGVyIHdh
cm5pbmcgKi8KICAgICAgcmVzMSA9IHIuZ2V0X3N0cmluZyAoIkRvbWFpbiIs
IGRvbWFpbiwgbGVuLCAiIik7CiAgICAgIGlmIChyZXMxICE9IEVSUk9SX1NV
Q0NFU1MgfHwgIWRvbWFpblswXSkKCXJlczIgPSByLmdldF9zdHJpbmcgKCJE
aGNwRG9tYWluIiwgZG9tYWluLCBsZW4sICIiKTsKICAgICAgaWYgKHJlczEg
PT0gRVJST1JfU1VDQ0VTUyB8fCByZXMyID09IEVSUk9SX1NVQ0NFU1MpCgly
ZXR1cm4gMDsKICAgIH0KICBfX3NldGVycm5vICgpOwogIHJldHVybiAtMTsK
fQoKLyogRmlsbCBvdXQgYW4gaWZjb25mIHN0cnVjdC4gKi8KCi8qIFZpc3Rh
L0xvbmdob3JuOiB1bmljYXN0IGFkZHJlc3MgaGFzIGFkZGl0aW9uYWwgT25M
aW5rUHJlZml4TGVuZ3RoIG1lbWJlci4gKi8KdHlwZWRlZiBzdHJ1Y3QgX0lQ
X0FEQVBURVJfVU5JQ0FTVF9BRERSRVNTX0xIIHsKICAgIF9BTk9OWU1PVVNf
VU5JT04gdW5pb24gewoJVUxPTkdMT05HIEFsaWdubWVudDsKCV9BTk9OWU1P
VVNfVU5JT04gc3RydWN0IHsKCSAgICBVTE9ORyBMZW5ndGg7CgkgICAgRFdP
UkQgRmxhZ3M7Cgl9IERVTU1ZU1RSVUNUTkFNRTsKICAgIH0gRFVNTVlVTklP
Tk5BTUU7CiAgICBzdHJ1Y3QgX0lQX0FEQVBURVJfVU5JQ0FTVF9BRERSRVNT
X1ZJU1RBICpOZXh0OwogICAgU09DS0VUX0FERFJFU1MgQWRkcmVzczsKICAg
IElQX1BSRUZJWF9PUklHSU4gUHJlZml4T3JpZ2luOwogICAgSVBfU1VGRklY
X09SSUdJTiBTdWZmaXhPcmlnaW47CiAgICBJUF9EQURfU1RBVEUgRGFkU3Rh
dGU7CiAgICBVTE9ORyBWYWxpZExpZmV0aW1lOwogICAgVUxPTkcgUHJlZmVy
cmVkTGlmZXRpbWU7CiAgICBVTE9ORyBMZWFzZUxpZmV0aW1lOwogICAgdW5z
aWduZWQgY2hhciBPbkxpbmtQcmVmaXhMZW5ndGg7Cn0gSVBfQURBUFRFUl9V
TklDQVNUX0FERFJFU1NfTEgsICpQSVBfQURBUFRFUl9VTklDQVNUX0FERFJF
U1NfTEg7CgovKiBWaXN0YS9Mb25naG9ybjogSVBfQURBUFRFUl9BRERSRVNT
RVMgaGFzIGEgbG90IG1vcmUgaW5mby4gIFdlIHBpY2sgb25seQogICB3aGF0
IHdlIG5lZWQgZm9yIG5vdy4gKi8KdHlwZWRlZiBzdHJ1Y3QgX0lQX0FEQVBU
RVJfQUREUkVTU0VTX0xIIHsKICBfQU5PTllNT1VTX1VOSU9OIHVuaW9uIHsK
ICAgIFVMT05HTE9ORyBBbGlnbm1lbnQ7CiAgICBfQU5PTllNT1VTX1NUUlVD
VCBzdHJ1Y3QgewogICAgICBVTE9ORyBMZW5ndGg7CiAgICAgIERXT1JEIElm
SW5kZXg7CiAgICB9IERVTU1ZU1RSVUNUTkFNRTsKICB9IERVTU1ZVU5JT05O
QU1FOwogIHN0cnVjdCBfSVBfQURBUFRFUl9BRERSRVNTRVMqIE5leHQ7CiAg
UENIQVIgQWRhcHRlck5hbWU7CiAgUElQX0FEQVBURVJfVU5JQ0FTVF9BRERS
RVNTIEZpcnN0VW5pY2FzdEFkZHJlc3M7CiAgUElQX0FEQVBURVJfQU5ZQ0FT
VF9BRERSRVNTIEZpcnN0QW55Y2FzdEFkZHJlc3M7CiAgUElQX0FEQVBURVJf
TVVMVElDQVNUX0FERFJFU1MgRmlyc3RNdWx0aWNhc3RBZGRyZXNzOwogIFBJ
UF9BREFQVEVSX0ROU19TRVJWRVJfQUREUkVTUyBGaXJzdERuc1NlcnZlckFk
ZHJlc3M7CiAgUFdDSEFSIERuc1N1ZmZpeDsKICBQV0NIQVIgRGVzY3JpcHRp
b247CiAgUFdDSEFSIEZyaWVuZGx5TmFtZTsKICBCWVRFIFBoeXNpY2FsQWRk
cmVzc1tNQVhfQURBUFRFUl9BRERSRVNTX0xFTkdUSF07CiAgRFdPUkQgUGh5
c2ljYWxBZGRyZXNzTGVuZ3RoOwogIERXT1JEIEZsYWdzOwogIERXT1JEIE10
dTsKICBEV09SRCBJZlR5cGU7CiAgSUZfT1BFUl9TVEFUVVMgT3BlclN0YXR1
czsKICBEV09SRCBJcHY2SWZJbmRleDsKICBEV09SRCBab25lSW5kaWNlc1sx
Nl07CiAgUElQX0FEQVBURVJfUFJFRklYIEZpcnN0UHJlZml4OwoKICBVTE9O
RzY0IFRyYW5zbWl0TGlua1NwZWVkOwogIFVMT05HNjQgUmVjZWl2ZUxpbmtT
cGVlZDsKICBQVk9JRCBGaXJzdFdpbnNTZXJ2ZXJBZGRyZXNzOwogIFBWT0lE
IEZpcnN0R2F0ZXdheUFkZHJlc3M7CiAgVUxPTkcgSXB2NE1ldHJpYzsKICBV
TE9ORyBJcHY2TWV0cmljOwp9IElQX0FEQVBURVJfQUREUkVTU0VTX0xILCpQ
SVBfQURBUFRFUl9BRERSRVNTRVNfTEg7CgovKiBXZSBjYW4ndCBpbmNsdWRl
IHdzMnRjcGlwLmguICovCgojZGVmaW5lIFNJT19HRVRfSU5URVJGQUNFX0xJ
U1QgIF9JT1IoJ3QnLCAxMjcsIHVfbG9uZykKCnN0cnVjdCBzb2NrYWRkcl9p
bjZfb2xkIHsKICBzaG9ydCAgIHNpbjZfZmFtaWx5OwogIHVfc2hvcnQgc2lu
Nl9wb3J0OwogIHVfbG9uZyAgc2luNl9mbG93aW5mbzsKICBzdHJ1Y3QgaW42
X2FkZHIgc2luNl9hZGRyOwp9OwoKdHlwZWRlZiB1bmlvbiBzb2NrYWRkcl9n
ZW57CiAgc3RydWN0IHNvY2thZGRyICAgICAgICAgQWRkcmVzczsKICBzdHJ1
Y3Qgc29ja2FkZHJfaW4gICAgICBBZGRyZXNzSW47CiAgc3RydWN0IHNvY2th
ZGRyX2luNl9vbGQgQWRkcmVzc0luNjsKfSBzb2NrYWRkcl9nZW47Cgp0eXBl
ZGVmIHN0cnVjdCBfSU5URVJGQUNFX0lORk8gewogIHVfbG9uZyAgICAgICAg
ICBpaUZsYWdzOwogIHNvY2thZGRyX2dlbiAgICBpaUFkZHJlc3M7CiAgc29j
a2FkZHJfZ2VuICAgIGlpQnJvYWRjYXN0QWRkcmVzczsKICBzb2NrYWRkcl9n
ZW4gICAgaWlOZXRtYXNrOwp9IElOVEVSRkFDRV9JTkZPLCAqTFBJTlRFUkZB
Q0VfSU5GTzsKCiNpZm5kZWYgSU5fTE9PUEJBQ0sKI2RlZmluZSBJTl9MT09Q
QkFDSyhhKSAgICAgICAgICAoKCgobG9uZyBpbnQpIChhKSkgJiAweGZmMDAw
MDAwKSA9PSAweDdmMDAwMDAwKQojZW5kaWYKCnN0YXRpYyBpbnQgaW42X2Fy
ZV9wcmVmaXhfZXF1YWwgKHN0cnVjdCBpbjZfYWRkciAqLCBzdHJ1Y3QgaW42
X2FkZHIgKiwgaW50KTsKCnN0YXRpYyBpbnQgaW5fYXJlX3ByZWZpeF9lcXVh
bCAoc3RydWN0IGluX2FkZHIgKnAxLCBzdHJ1Y3QgaW5fYWRkciAqcDIsIGlu
dCBsZW4pCnsKICBpZiAoMCA+IGxlbiB8fCBsZW4gPiAzMikKICAgIHJldHVy
biAwOwogIHVpbnQzMl90IHBmeG1hc2sgPSAweGZmZmZmZmZmIDw8ICgzMiAt
IGxlbik7CiAgcmV0dXJuIChudG9obCAocDEtPnNfYWRkcikgJiBwZnhtYXNr
KSA9PSAobnRvaGwgKHAyLT5zX2FkZHIpICYgcGZ4bWFzayk7Cn0KCmV4dGVy
biAiQyIgaW50CmlwX2FkZHJfcHJlZml4IChQSVBfQURBUFRFUl9VTklDQVNU
X0FERFJFU1MgcHVhLCBQSVBfQURBUFRFUl9QUkVGSVggcGFwKQp7CiAgaWYg
KHdpbmNhcC5oYXNfZ2FhX29uX2xpbmtfcHJlZml4ICgpKQogICAgcmV0dXJu
IChpbnQpICgoUElQX0FEQVBURVJfVU5JQ0FTVF9BRERSRVNTX0xIKSBwdWEp
LT5PbkxpbmtQcmVmaXhMZW5ndGg7CiAgc3dpdGNoIChwdWEtPkFkZHJlc3Mu
bHBTb2NrYWRkci0+c2FfZmFtaWx5KQogICAgewogICAgY2FzZSBBRl9JTkVU
OgogICAgICAvKiBQcmlvciB0byBWaXN0YSwgdGhlIGxvb3BiYWNrIHByZWZp
eCBpcyBub3QgYXZhaWxhYmxlLiAqLwogICAgICBpZiAoSU5fTE9PUEJBQ0sg
KG50b2hsICgoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKQoJCQkgICAgICBwdWEt
PkFkZHJlc3MubHBTb2NrYWRkciktPnNpbl9hZGRyLnNfYWRkcikpKQoJcmV0
dXJuIDg7CiAgICAgIGZvciAoIDsgcGFwOyBwYXAgPSBwYXAtPk5leHQpCglp
ZiAoaW5fYXJlX3ByZWZpeF9lcXVhbCAoCgkgICAgICAmKChzdHJ1Y3Qgc29j
a2FkZHJfaW4gKikgcHVhLT5BZGRyZXNzLmxwU29ja2FkZHIpLT5zaW5fYWRk
ciwKCSAgICAgICYoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSBwYXAtPkFkZHJl
c3MubHBTb2NrYWRkciktPnNpbl9hZGRyLAoJICAgICAgcGFwLT5QcmVmaXhM
ZW5ndGgpKQoJICByZXR1cm4gcGFwLT5QcmVmaXhMZW5ndGg7CiAgICAgIGJy
ZWFrOwogICAgY2FzZSBBRl9JTkVUNjoKICAgICAgLyogUHJpb3IgdG8gVmlz
dGEsIHRoZSBsb29wYmFjayBwcmVmaXggaXMgbm90IGF2YWlsYWJsZS4gKi8K
ICAgICAgaWYgKElONl9JU19BRERSX0xPT1BCQUNLICgmKChzdHJ1Y3Qgc29j
a2FkZHJfaW42ICopCgkJCQkgIHB1YS0+QWRkcmVzcy5scFNvY2thZGRyKS0+
c2luNl9hZGRyKSkKCXJldHVybiAxMjg7CiAgICAgIGZvciAoIDsgcGFwOyBw
YXAgPSBwYXAtPk5leHQpCglpZiAoaW42X2FyZV9wcmVmaXhfZXF1YWwgKAoJ
ICAgICAgJigoc3RydWN0IHNvY2thZGRyX2luNiAqKSBwdWEtPkFkZHJlc3Mu
bHBTb2NrYWRkciktPnNpbjZfYWRkciwKCSAgICAgICYoKHN0cnVjdCBzb2Nr
YWRkcl9pbjYgKikgcGFwLT5BZGRyZXNzLmxwU29ja2FkZHIpLT5zaW42X2Fk
ZHIsCgkgICAgICBwYXAtPlByZWZpeExlbmd0aCkpCgkgIHJldHVybiBwYXAt
PlByZWZpeExlbmd0aDsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAg
ICBicmVhazsKICAgIH0KICByZXR1cm4gMDsKfQoKI2lmbmRlZiBHQUFfRkxB
R19JTkNMVURFX0FMTF9JTlRFUkZBQ0VTCiNkZWZpbmUgR0FBX0ZMQUdfSU5D
TFVERV9BTExfSU5URVJGQUNFUyAweDAxMDAKI2VuZGlmCgpib29sCmdldF9h
ZGFwdGVyc19hZGRyZXNzZXMgKFBJUF9BREFQVEVSX0FERFJFU1NFUyAqcGFf
cmV0LCBVTE9ORyBmYW1pbHkpCnsKICBEV09SRCByZXQsIHNpemUgPSAwOwog
IFBJUF9BREFQVEVSX0FERFJFU1NFUyBwYTAgPSBOVUxMOwoKICBpZiAoIXBh
X3JldCkKICAgIHJldHVybiBFUlJPUl9CVUZGRVJfT1ZFUkZMT1cKCSAgID09
IEdldEFkYXB0ZXJzQWRkcmVzc2VzIChmYW1pbHksIEdBQV9GTEFHX0lOQ0xV
REVfUFJFRklYCgkJCQkJICAgIHwgR0FBX0ZMQUdfSU5DTFVERV9BTExfSU5U
RVJGQUNFUywKCQkJCSAgICBOVUxMLCBOVUxMLCAmc2l6ZSk7CiAgZG8KICAg
IHsKICAgICAgcmV0ID0gR2V0QWRhcHRlcnNBZGRyZXNzZXMgKGZhbWlseSwg
R0FBX0ZMQUdfSU5DTFVERV9QUkVGSVgKCQkJCQkgIHwgR0FBX0ZMQUdfSU5D
TFVERV9BTExfSU5URVJGQUNFUywKCQkJCSAgTlVMTCwgcGEwLCAmc2l6ZSk7
CiAgICAgIGlmIChyZXQgPT0gRVJST1JfQlVGRkVSX09WRVJGTE9XCgkgICYm
ICEocGEwID0gKFBJUF9BREFQVEVSX0FERFJFU1NFUykgcmVhbGxvYyAocGEw
LCBzaXplKSkpCglicmVhazsKICAgIH0KICB3aGlsZSAocmV0ID09IEVSUk9S
X0JVRkZFUl9PVkVSRkxPVyk7CiAgaWYgKHJldCAhPSBFUlJPUl9TVUNDRVNT
KQogICAgewogICAgICBpZiAocGEwKQoJZnJlZSAocGEwKTsKICAgICAgKnBh
X3JldCA9IE5VTEw7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAqcGFf
cmV0ID0gcGEwOwogIHJldHVybiB0cnVlOwp9CgojZGVmaW5lIFdTX0lGRl9V
UAkgICAgIDEKI2RlZmluZSBXU19JRkZfQlJPQURDQVNUICAgICAyCiNkZWZp
bmUgV1NfSUZGX0xPT1BCQUNLCSAgICAgNAojZGVmaW5lIFdTX0lGRl9QT0lO
VFRPUE9JTlQgIDgKI2RlZmluZSBXU19JRkZfTVVMVElDQVNUICAgIDE2Cgpz
dGF0aWMgaW5saW5lIHNob3J0CmNvbnZlcnRfaWZyX2ZsYWdzICh1X2xvbmcg
d3NfZmxhZ3MpCnsKICByZXR1cm4gKHdzX2ZsYWdzICYgKFdTX0lGRl9VUCB8
IFdTX0lGRl9CUk9BRENBU1QpKQoJIHwgKCh3c19mbGFncyAmIChXU19JRkZf
TE9PUEJBQ0sgfCBXU19JRkZfUE9JTlRUT1BPSU5UKSkgPDwgMSkKCSB8ICgo
d3NfZmxhZ3MgJiBXU19JRkZfTVVMVElDQVNUKSA8PCA4KTsKfQoKc3RhdGlj
IHVfbG9uZwpnZXRfcm91dGVkc3QgKERXT1JEIGlmX2luZGV4KQp7CiAgUE1J
Ql9JUEZPUldBUkRUQUJMRSBwaWZ0OwogIFVMT05HIHNpemUgPSAwOwogIGlm
IChHZXRJcEZvcndhcmRUYWJsZSAoTlVMTCwgJnNpemUsIEZBTFNFKSA9PSBF
UlJPUl9JTlNVRkZJQ0lFTlRfQlVGRkVSCiAgICAgICYmIChwaWZ0ID0gKFBN
SUJfSVBGT1JXQVJEVEFCTEUpIGFsbG9jYSAoc2l6ZSkpCiAgICAgICYmIEdl
dElwRm9yd2FyZFRhYmxlIChwaWZ0LCAmc2l6ZSwgRkFMU0UpID09IE5PX0VS
Uk9SKQogICAgZm9yIChEV09SRCBpID0gMDsgaSA8IHBpZnQtPmR3TnVtRW50
cmllczsgKytpKQogICAgICB7CglpZiAocGlmdC0+dGFibGVbaV0uZHdGb3J3
YXJkSWZJbmRleCA9PSBpZl9pbmRleAoJICAgICYmIHBpZnQtPnRhYmxlW2ld
LmR3Rm9yd2FyZE1hc2sgPT0gSU5BRERSX0JST0FEQ0FTVCkKCSAgcmV0dXJu
IHBpZnQtPnRhYmxlW2ldLmR3Rm9yd2FyZERlc3Q7CiAgICAgIH0KICByZXR1
cm4gSU5BRERSX0FOWTsKfQoKc3RydWN0IGlmYWxsIHsKICBzdHJ1Y3QgaWZh
ZGRycyAgICAgICAgICBpZmFfaWZhOwogIGNoYXIgICAgICAgICAgICAgICAg
ICAgIGlmYV9uYW1lW0lGTkFNU0laXTsKICBzdHJ1Y3Qgc29ja2FkZHJfc3Rv
cmFnZSBpZmFfYWRkcjsKICBzdHJ1Y3Qgc29ja2FkZHJfc3RvcmFnZSBpZmFf
YnJkZHN0YWRkcjsKICBzdHJ1Y3Qgc29ja2FkZHJfc3RvcmFnZSBpZmFfbmV0
bWFzazsKICBzdHJ1Y3Qgc29ja2FkZHIgICAgICAgICBpZmFfaHdhZGRyOwog
IGludCAgICAgICAgICAgICAgICAgICAgIGlmYV9tZXRyaWM7CiAgaW50ICAg
ICAgICAgICAgICAgICAgICAgaWZhX210dTsKICBpbnQgICAgICAgICAgICAg
ICAgICAgICBpZmFfaWZpbmRleDsKICBzdHJ1Y3QgaWZyZXFfZnJuZGx5bmFt
ZSBpZmFfZnJuZGx5bmFtZTsKfTsKCi8qCiAqIEdldCBuZXR3b3JrIGludGVy
ZmFjZXMgWFAgU1AxIGFuZCBhYm92ZS4KICogVXNlIElQIEhlbHBlciBmdW5j
dGlvbiBHZXRBZGFwdGVyc0FkZHJlc3Nlcy4KICovCnN0YXRpYyBzdHJ1Y3Qg
aWZhbGwgKgpnZXRfeHBfaWZzIChVTE9ORyBmYW1pbHkpCnsKICBQSVBfQURB
UFRFUl9BRERSRVNTRVMgcGEwID0gTlVMTCwgcGFwOwogIFBJUF9BREFQVEVS
X1VOSUNBU1RfQUREUkVTUyBwdWE7CiAgaW50IGNudCA9IDA7CiAgc3RydWN0
IGlmYWxsICppZnJldCA9IE5VTEwsICppZnA7CiAgc3RydWN0IHNvY2thZGRy
X2luICppZl9zaW47CiAgc3RydWN0IHNvY2thZGRyX2luNiAqaWZfc2luNjsK
CiAgaWYgKCFnZXRfYWRhcHRlcnNfYWRkcmVzc2VzICgmcGEwLCBmYW1pbHkp
KQogICAgZ290byBkb25lOwoKICBmb3IgKHBhcCA9IHBhMDsgcGFwOyBwYXAg
PSBwYXAtPk5leHQpCiAgICBmb3IgKHB1YSA9IHBhcC0+Rmlyc3RVbmljYXN0
QWRkcmVzczsgcHVhOyBwdWEgPSBwdWEtPk5leHQpCiAgICAgICsrY250OwoK
ICBpZiAoIShpZnJldCA9IChzdHJ1Y3QgaWZhbGwgKikgY2FsbG9jIChjbnQs
IHNpemVvZiAoc3RydWN0IGlmYWxsKSkpKQogICAgZ290byBkb25lOwogIGlm
cCA9IGlmcmV0OwoKICBmb3IgKHBhcCA9IHBhMDsgcGFwOyBwYXAgPSBwYXAt
Pk5leHQpCiAgICB7CiAgICAgIGludCBpZHggPSAwOwogICAgICBmb3IgKHB1
YSA9IHBhcC0+Rmlyc3RVbmljYXN0QWRkcmVzczsgcHVhOyBwdWEgPSBwdWEt
Pk5leHQpCgl7CgkgIHN0cnVjdCBzb2NrYWRkciAqc2EgPSAoc3RydWN0IHNv
Y2thZGRyICopIHB1YS0+QWRkcmVzcy5scFNvY2thZGRyOwojICAgICAgICAg
ZGVmaW5lIHNpbgkoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSBzYSkKIyAgICAg
ICAgIGRlZmluZSBzaW42CSgoc3RydWN0IHNvY2thZGRyX2luNiAqKSBzYSkK
CSAgc2l6ZV90IHNhX3NpemUgPSAoc2EtPnNhX2ZhbWlseSA9PSBBRl9JTkVU
NgoJCQkgICAgPyBzaXplb2YgKnNpbjYgOiBzaXplb2YgKnNpbik7CgkgIC8q
IE5leHQgaW4gY2hhaW4gKi8KCSAgaWZwLT5pZmFfaWZhLmlmYV9uZXh0ID0g
KHN0cnVjdCBpZmFkZHJzICopICZpZnBbMV0uaWZhX2lmYTsKCSAgLyogSW50
ZXJmYWNlIG5hbWUgKi8KCSAgaWYgKCFpZHgpCgkgICAgc3RyY3B5IChpZnAt
PmlmYV9uYW1lLCBwYXAtPkFkYXB0ZXJOYW1lKTsKCSAgZWxzZQoJICAgIF9f
c21hbGxfc3ByaW50ZiAoaWZwLT5pZmFfbmFtZSwgIiVzOiV1IiwgcGFwLT5B
ZGFwdGVyTmFtZSwgaWR4KTsKCSAgaWZwLT5pZmFfaWZhLmlmYV9uYW1lID0g
aWZwLT5pZmFfbmFtZTsKCSAgKytpZHg7CgkgIC8qIEZsYWdzICovCgkgIGlm
cC0+aWZhX2lmYS5pZmFfZmxhZ3MgPSBJRkZfVVA7CgkgIGlmIChwYXAtPklm
VHlwZSA9PSBJRl9UWVBFX1NPRlRXQVJFX0xPT1BCQUNLKQoJICAgIGlmcC0+
aWZhX2lmYS5pZmFfZmxhZ3MgfD0gSUZGX0xPT1BCQUNLOwoJICBlbHNlIGlm
IChwYXAtPklmVHlwZSA9PSBJRl9UWVBFX1BQUCkKCSAgICBpZnAtPmlmYV9p
ZmEuaWZhX2ZsYWdzIHw9IElGRl9QT0lOVE9QT0lOVDsKCSAgZWxzZSBpZiAo
c2EtPnNhX2ZhbWlseSA9PSBBRl9JTkVUKQoJICAgIGlmcC0+aWZhX2lmYS5p
ZmFfZmxhZ3MgfD0gSUZGX0JST0FEQ0FTVDsKCSAgaWYgKCEocGFwLT5GbGFn
cyAmIElQX0FEQVBURVJfTk9fTVVMVElDQVNUKSkKCSAgICBpZnAtPmlmYV9p
ZmEuaWZhX2ZsYWdzIHw9IElGRl9NVUxUSUNBU1Q7CgkgIGlmIChwYXAtPk9w
ZXJTdGF0dXMgPT0gSWZPcGVyU3RhdHVzVXAKCSAgICAgIHx8IHBhcC0+T3Bl
clN0YXR1cyA9PSBJZk9wZXJTdGF0dXNVbmtub3duKQoJICAgIGlmcC0+aWZh
X2lmYS5pZmFfZmxhZ3MgfD0gSUZGX1JVTk5JTkc7CgkgIGlmIChwYXAtPk9w
ZXJTdGF0dXMgIT0gSWZPcGVyU3RhdHVzTG93ZXJMYXllckRvd24pCgkgICAg
aWZwLT5pZmFfaWZhLmlmYV9mbGFncyB8PSBJRkZfTE9XRVJfVVA7CgkgIGlm
IChwYXAtPk9wZXJTdGF0dXMgPT0gSWZPcGVyU3RhdHVzRG9ybWFudCkKCSAg
ICBpZnAtPmlmYV9pZmEuaWZhX2ZsYWdzIHw9IElGRl9ET1JNQU5UOwoJICBp
ZiAoc2EtPnNhX2ZhbWlseSA9PSBBRl9JTkVUKQoJICAgIHsKCSAgICAgIFVM
T05HIGh3YWRkclsyXSwgaHdsZW4gPSA2OwoJICAgICAgaWYgKFNlbmRBUlAg
KHNpbi0+c2luX2FkZHIuc19hZGRyLCAwLCBod2FkZHIsICZod2xlbikpCgkJ
aWZwLT5pZmFfaWZhLmlmYV9mbGFncyB8PSBJRkZfTk9BUlA7CgkgICAgfQoJ
ICAvKiBBZGRyZXNzICovCgkgIG1lbWNweSAoJmlmcC0+aWZhX2FkZHIsIHNh
LCBzYV9zaXplKTsKCSAgaWZwLT5pZmFfaWZhLmlmYV9hZGRyID0gKHN0cnVj
dCBzb2NrYWRkciAqKSAmaWZwLT5pZmFfYWRkcjsKCSAgLyogTmV0bWFzayAq
LwoJICBpbnQgcHJlZml4ID0gaXBfYWRkcl9wcmVmaXggKHB1YSwgcGFwLT5G
aXJzdFByZWZpeCk7CgkgIHN3aXRjaCAoc2EtPnNhX2ZhbWlseSkKCSAgICB7
CgkgICAgY2FzZSBBRl9JTkVUOgoJICAgICAgaWZfc2luID0gKHN0cnVjdCBz
b2NrYWRkcl9pbiAqKSAmaWZwLT5pZmFfbmV0bWFzazsKCSAgICAgIGlmX3Np
bi0+c2luX2FkZHIuc19hZGRyID0gaHRvbmwgKFVJTlQzMl9NQVggPDwgKDMy
IC0gcHJlZml4KSk7CgkgICAgICBpZl9zaW4tPnNpbl9mYW1pbHkgPSBBRl9J
TkVUOwoJICAgICAgYnJlYWs7CgkgICAgY2FzZSBBRl9JTkVUNjoKCSAgICAg
IGlmX3NpbjYgPSAoc3RydWN0IHNvY2thZGRyX2luNiAqKSAmaWZwLT5pZmFf
bmV0bWFzazsKCSAgICAgIGZvciAoY250ID0gMDsgY250IDwgNCAmJiBwcmVm
aXg7ICsrY250LCBwcmVmaXggLT0gMzIpCgkJaWZfc2luNi0+c2luNl9hZGRy
LnM2X2FkZHIzMltjbnRdID0gVUlOVDMyX01BWDsKCQlpZiAocHJlZml4IDwg
MzIpCgkJICBpZl9zaW42LT5zaW42X2FkZHIuczZfYWRkcjMyW2NudF0gPDw9
IDMyIC0gcHJlZml4OwoJICAgICAgYnJlYWs7CgkgICAgfQoJICBpZnAtPmlm
YV9pZmEuaWZhX25ldG1hc2sgPSAoc3RydWN0IHNvY2thZGRyICopICZpZnAt
PmlmYV9uZXRtYXNrOwoJICBpZiAocGFwLT5JZlR5cGUgPT0gSUZfVFlQRV9Q
UFApCgkgICAgewoJICAgICAgLyogRGVzdGluYXRpb24gYWRkcmVzcyAqLwoJ
ICAgICAgaWYgKHNhLT5zYV9mYW1pbHkgPT0gQUZfSU5FVCkKCQl7CgkJICBp
Zl9zaW4gPSAoc3RydWN0IHNvY2thZGRyX2luICopICZpZnAtPmlmYV9icmRk
c3RhZGRyOwoJCSAgaWZfc2luLT5zaW5fYWRkci5zX2FkZHIgPSBnZXRfcm91
dGVkc3QgKHBhcC0+SWZJbmRleCk7CgkJICBpZl9zaW4tPnNpbl9mYW1pbHkg
PSBBRl9JTkVUOwoJCX0KCSAgICAgIGVsc2UKCQkvKiBGSVhNRTogTm8gb2Zm
aWNpYWwgd2F5IHRvIGdldCB0aGUgZHN0YWRkciBmb3IgaXB2Nj8gKi8KCQlt
ZW1jcHkgKCZpZnAtPmlmYV9hZGRyLCBzYSwgc2Ffc2l6ZSk7CgkgICAgICBp
ZnAtPmlmYV9pZmEuaWZhX2RzdGFkZHIgPSAoc3RydWN0IHNvY2thZGRyICop
CgkJCQkJICZpZnAtPmlmYV9icmRkc3RhZGRyOwoJICAgIH0KCSAgZWxzZQoJ
ICAgIHsKCSAgICAgIC8qIEJyb2FkY2FzdCBhZGRyZXNzICAqLwoJICAgICAg
aWYgKHNhLT5zYV9mYW1pbHkgPT0gQUZfSU5FVCkKCQl7CgkJICBpZl9zaW4g
PSAoc3RydWN0IHNvY2thZGRyX2luICopICZpZnAtPmlmYV9icmRkc3RhZGRy
OwoJCSAgdWludDMyX3QgbWFzayA9CgkJICAoKHN0cnVjdCBzb2NrYWRkcl9p
biAqKSAmaWZwLT5pZmFfbmV0bWFzayktPnNpbl9hZGRyLnNfYWRkcjsKCQkg
IGlmX3Npbi0+c2luX2FkZHIuc19hZGRyID0gKHNpbi0+c2luX2FkZHIuc19h
ZGRyICYgbWFzaykgfCB+bWFzazsKCQkgIGlmX3Npbi0+c2luX2ZhbWlseSA9
IEFGX0lORVQ7CgkJICBpZnAtPmlmYV9pZmEuaWZhX2Jyb2FkYWRkciA9IChz
dHJ1Y3Qgc29ja2FkZHIgKikKCQkJCQkgICAgICAgJmlmcC0+aWZhX2JyZGRz
dGFkZHI7CgkJfQoJICAgICAgZWxzZSAvKiBObyBJUHY2IGJyb2FkY2FzdCAq
LwoJCWlmcC0+aWZhX2lmYS5pZmFfYnJvYWRhZGRyID0gTlVMTDsKCSAgICB9
CgkgIC8qIEhhcmR3YXJlIGFkZHJlc3MgKi8KCSAgZm9yIChVSU5UIGkgPSAw
OyBpIDwgSUZIV0FERFJMRU47ICsraSkKCSAgICBpZiAoaSA+PSBwYXAtPlBo
eXNpY2FsQWRkcmVzc0xlbmd0aCkKCSAgICAgIGlmcC0+aWZhX2h3YWRkci5z
YV9kYXRhW2ldID0gJ1wwJzsKCSAgICBlbHNlCgkgICAgICBpZnAtPmlmYV9o
d2FkZHIuc2FfZGF0YVtpXSA9IHBhcC0+UGh5c2ljYWxBZGRyZXNzW2ldOwoJ
ICAvKiBNZXRyaWMgKi8KCSAgaWYgKHdpbmNhcC5oYXNfZ2FhX29uX2xpbmtf
cHJlZml4ICgpKQoJICAgIGlmcC0+aWZhX21ldHJpYyA9IChzYS0+c2FfZmFt
aWx5ID09IEFGX0lORVQKCQkJICAgICAgPyAoKFBJUF9BREFQVEVSX0FERFJF
U1NFU19MSCkgcGFwKS0+SXB2NE1ldHJpYwoJCQkgICAgICA6ICgoUElQX0FE
QVBURVJfQUREUkVTU0VTX0xIKSBwYXApLT5JcHY2TWV0cmljKTsKCSAgZWxz
ZQoJICAgIGlmcC0+aWZhX21ldHJpYyA9IDE7CgkgIC8qIE1UVSAqLwoJICBp
ZnAtPmlmYV9tdHUgPSBwYXAtPk10dTsKCSAgLyogSW50ZXJmYWNlIGluZGV4
ICovCgkgIGlmcC0+aWZhX2lmaW5kZXggPSBwYXAtPklmSW5kZXg7CgkgIC8q
IEZyaWVuZGx5IG5hbWUgKi8KCSAgc3RydWN0IGlmcmVxX2ZybmRseW5hbWUg
KmlmZiA9IChzdHJ1Y3QgaWZyZXFfZnJuZGx5bmFtZSAqKQoJCQkJCSAmaWZw
LT5pZmFfZnJuZGx5bmFtZTsKCSAgaWZmLT5pZnJmX2xlbiA9IHN5c193Y3N0
b21icyAoaWZmLT5pZnJmX2ZyaWVuZGx5bmFtZSwKCQkJCQlJRlJGX0ZSSUVO
RExZTkFNRVNJWiwKCQkJCQlwYXAtPkZyaWVuZGx5TmFtZSk7CgkgICsraWZw
OwojICAgICAgICAgdW5kZWYgc2luCiMgICAgICAgICB1bmRlZiBzaW42Cgl9
CiAgICB9CiAgLyogU2luY2UgZXZlcnkgZW50cnkgaXMgc2V0IHRvIHRoZSBu
ZXh0IGVudHJ5LCB0aGUgbGFzdCBlbnRyeSBwb2ludHMgdG8gYW4KICAgICBp
bnZhbGlkIG5leHQgZW50cnkgbm93LiAgRml4IGl0IHJldHJvYWN0aXZlbHku
ICovCiAgaWYgKGlmcCA+IGlmcmV0KQogICAgaWZwWy0xXS5pZmFfaWZhLmlm
YV9uZXh0ID0gTlVMTDsKCmRvbmU6CiAgaWYgKHBhMCkKICAgIGZyZWUgKHBh
MCk7CiAgcmV0dXJuIGlmcmV0Owp9CgovKgogKiBHZXQgbmV0d29yayBpbnRl
cmZhY2VzIE5UU1A0LCBXMkssIFhQIHcvbyBzZXJ2aWNlIHBhY2tzLgogKiBV
c2UgSVAgSGVscGVyIExpYnJhcnkKICovCnN0YXRpYyBzdHJ1Y3QgaWZhbGwg
KgpnZXRfMmtfaWZzICgpCnsKICBpbnQgZXRoSWQgPSAwLCBwcHBJZCA9IDAs
IHNscElkID0gMCwgdG9rSWQgPSAwOwoKICBEV09SRCBpcF9jbnQ7CiAgRFdP
UkQgc2l6X2lwX3RhYmxlID0gMDsKICBQTUlCX0lQQUREUlRBQkxFIGlwdDsK
ICBQTUlCX0lGUk9XIGlmcm93OwogIHN0cnVjdCBpZmFsbCAqaWZyZXQgPSBO
VUxMLCAqaWZwID0gTlVMTDsKICBzdHJ1Y3Qgc29ja2FkZHJfaW4gKmlmX3Np
bjsKCiAgc3RydWN0IGlmY291bnRfdAogIHsKICAgIERXT1JEIGlmSW5kZXg7
CiAgICBzaXplX3QgY291bnQ7CiAgICB1bnNpZ25lZCBpbnQgZW51bWVyYXRl
ZDsJLy8gZm9yIGV0aDA6MQogICAgdW5zaWduZWQgaW50IGNsYXNzSWQ7CS8v
IGZvciBldGgwLCB0b2swIC4uLgoKICB9OwogIGlmY291bnRfdCAqaWZsaXN0
LCAqaWZFbnRyeTsKCiAgaWYgKEdldElwQWRkclRhYmxlIChOVUxMLCAmc2l6
X2lwX3RhYmxlLCBUUlVFKSA9PSBFUlJPUl9JTlNVRkZJQ0lFTlRfQlVGRkVS
CiAgICAgICYmIChpZnJvdyA9IChQTUlCX0lGUk9XKSBhbGxvY2EgKHNpemVv
ZiAoTUlCX0lGUk9XKSkpCiAgICAgICYmIChpcHQgPSAoUE1JQl9JUEFERFJU
QUJMRSkgYWxsb2NhIChzaXpfaXBfdGFibGUpKQogICAgICAmJiAhR2V0SXBB
ZGRyVGFibGUgKGlwdCwgJnNpel9pcF90YWJsZSwgVFJVRSkpCiAgICB7CiAg
ICAgIGlmICghKGlmcmV0ID0gKHN0cnVjdCBpZmFsbCAqKSBjYWxsb2MgKGlw
dC0+ZHdOdW1FbnRyaWVzLCBzaXplb2YgKHN0cnVjdCBpZmFsbCkpKSkKCWdv
dG8gZG9uZTsKICAgICAgaWZwID0gaWZyZXQ7CgogICAgICBpZmxpc3QgPQoJ
KGlmY291bnRfdCAqKSBhbGxvY2EgKHNpemVvZiAoaWZjb3VudF90KSAqIChp
cHQtPmR3TnVtRW50cmllcyArIDEpKTsKICAgICAgbWVtc2V0IChpZmxpc3Qs
IDAsIHNpemVvZiAoaWZjb3VudF90KSAqIChpcHQtPmR3TnVtRW50cmllcyAr
IDEpKTsKICAgICAgZm9yIChpcF9jbnQgPSAwOyBpcF9jbnQgPCBpcHQtPmR3
TnVtRW50cmllczsgKytpcF9jbnQpCgl7CgkgIGlmRW50cnkgPSBpZmxpc3Q7
CgkgIC8qIHNlYXJjaCBmb3IgbWF0Y2hpbmcgZW50cnkgKGFuZCBzdG9wIGF0
IGZpcnN0IGZyZWUgZW50cnkpICovCgkgIHdoaWxlIChpZkVudHJ5LT5jb3Vu
dCAhPSAwKQoJICAgIHsKCSAgICAgIGlmIChpZkVudHJ5LT5pZkluZGV4ID09
IGlwdC0+dGFibGVbaXBfY250XS5kd0luZGV4KQoJCWJyZWFrOwoJICAgICAg
aWZFbnRyeSsrOwoJICAgIH0KCSAgaWYgKGlmRW50cnktPmNvdW50ID09IDAp
CgkgICAgewoJICAgICAgaWZFbnRyeS0+Y291bnQgPSAxOwoJICAgICAgaWZF
bnRyeS0+aWZJbmRleCA9IGlwdC0+dGFibGVbaXBfY250XS5kd0luZGV4OwoJ
ICAgIH0KCSAgZWxzZQoJICAgIHsKCSAgICAgIGlmRW50cnktPmNvdW50Kys7
CgkgICAgfQoJfQogICAgICAvKiByZXNldCB0aGUgbGFzdCBlbGVtZW50LiBU
aGlzIGlzIGp1c3QgdGhlIHN0b3BwZXIgZm9yIHRoZSBsb29wLiAqLwogICAg
ICBpZmxpc3RbaXB0LT5kd051bUVudHJpZXNdLmNvdW50ID0gMDsKCiAgICAg
IC8qIEl0ZXJhdGUgb3ZlciBhbGwgY29uZmlndXJlZCBJUC1hZGRyZXNzZXMg
Ki8KICAgICAgZm9yIChpcF9jbnQgPSAwOyBpcF9jbnQgPCBpcHQtPmR3TnVt
RW50cmllczsgKytpcF9jbnQpCgl7CgkgIG1lbXNldCAoaWZyb3csIDAsIHNp
emVvZiAoTUlCX0lGUk9XKSk7CgkgIGlmcm93LT5kd0luZGV4ID0gaXB0LT50
YWJsZVtpcF9jbnRdLmR3SW5kZXg7CgkgIGlmIChHZXRJZkVudHJ5IChpZnJv
dykgIT0gTk9fRVJST1IpCgkgICAgY29udGludWU7CgoJICBpZmNvdW50X3Qg
KmlmRW50cnkgPSBpZmxpc3Q7CgoJICAvKiBzZWFyY2ggZm9yIG1hdGNoaW5n
IGVudHJ5IChhbmQgc3RvcCBhdCBmaXJzdCBmcmVlIGVudHJ5KSAqLwoJICB3
aGlsZSAoaWZFbnRyeS0+Y291bnQgIT0gMCkKCSAgICB7CgkgICAgICBpZiAo
aWZFbnRyeS0+aWZJbmRleCA9PSBpcHQtPnRhYmxlW2lwX2NudF0uZHdJbmRl
eCkKCQlicmVhazsKCSAgICAgIGlmRW50cnkrKzsKCSAgICB9CgoJICAvKiBO
ZXh0IGluIGNoYWluICovCgkgIGlmcC0+aWZhX2lmYS5pZmFfbmV4dCA9IChz
dHJ1Y3QgaWZhZGRycyAqKSAmaWZwWzFdLmlmYV9pZmE7CgkgIC8qIEludGVy
ZmFjZSBuYW1lICovCgkgIGlmIChpZnJvdy0+ZHdUeXBlID09IElGX1RZUEVf
U09GVFdBUkVfTE9PUEJBQ0spCgkgICAgc3RyY3B5IChpZnAtPmlmYV9uYW1l
LCAibG8iKTsKCSAgZWxzZQoJICAgIHsKCSAgICAgIGNvbnN0IGNoYXIgKm5h
bWUgPSAiIjsKCSAgICAgIHN3aXRjaCAoaWZyb3ctPmR3VHlwZSkKCQl7CgkJ
ICBjYXNlIElGX1RZUEVfSVNPODgwMjVfVE9LRU5SSU5HOgoJCSAgICBuYW1l
ID0gInRvayI7CgkJICAgIGlmIChpZkVudHJ5LT5lbnVtZXJhdGVkID09IDAp
CgkJICAgICAgaWZFbnRyeS0+Y2xhc3NJZCA9IHRva0lkKys7CgkJICAgIGJy
ZWFrOwoJCSAgY2FzZSBJRl9UWVBFX0VUSEVSTkVUX0NTTUFDRDoKCQkgICAg
bmFtZSA9ICJldGgiOwoJCSAgICBpZiAoaWZFbnRyeS0+ZW51bWVyYXRlZCA9
PSAwKQoJCSAgICAgIGlmRW50cnktPmNsYXNzSWQgPSBldGhJZCsrOwoJCSAg
ICBicmVhazsKCQkgIGNhc2UgSUZfVFlQRV9QUFA6CgkJICAgIG5hbWUgPSAi
cHBwIjsKCQkgICAgaWYgKGlmRW50cnktPmVudW1lcmF0ZWQgPT0gMCkKCQkg
ICAgICBpZkVudHJ5LT5jbGFzc0lkID0gcHBwSWQrKzsKCQkgICAgYnJlYWs7
CgkJICBjYXNlIElGX1RZUEVfU0xJUDoKCQkgICAgbmFtZSA9ICJzbHAiOwoJ
CSAgICBpZiAoaWZFbnRyeS0+ZW51bWVyYXRlZCA9PSAwKQoJCSAgICAgIGlm
RW50cnktPmNsYXNzSWQgPSBzbHBJZCsrOwoJCSAgICBicmVhazsKCQkgIGRl
ZmF1bHQ6CgkJICAgIGNvbnRpbnVlOwoJCX0KCSAgICAgIF9fc21hbGxfc3By
aW50ZiAoaWZwLT5pZmFfbmFtZSwKCQkJICAgICAgIGlmRW50cnktPmVudW1l
cmF0ZWQgPyAiJXMldToldSIgOiAiJXMldSIsCgkJCSAgICAgICBuYW1lLCBp
ZkVudHJ5LT5jbGFzc0lkLCBpZkVudHJ5LT5lbnVtZXJhdGVkKTsKCSAgICAg
IGlmRW50cnktPmVudW1lcmF0ZWQrKzsKCSAgICB9CgkgIGlmcC0+aWZhX2lm
YS5pZmFfbmFtZSA9IGlmcC0+aWZhX25hbWU7CgkgIC8qIEZsYWdzICovCgkg
IGlmIChpZnJvdy0+ZHdUeXBlID09IElGX1RZUEVfU09GVFdBUkVfTE9PUEJB
Q0spCgkgICAgaWZwLT5pZmFfaWZhLmlmYV9mbGFncyB8PSBJRkZfTE9PUEJB
Q0s7CgkgIGVsc2UgaWYgKGlmcm93LT5kd1R5cGUgPT0gSUZfVFlQRV9QUFAK
CQkgICB8fCBpZnJvdy0+ZHdUeXBlID09IElGX1RZUEVfU0xJUCkKCSAgICBp
ZnAtPmlmYV9pZmEuaWZhX2ZsYWdzIHw9IElGRl9QT0lOVE9QT0lOVCB8IElG
Rl9OT0FSUDsKCSAgZWxzZQoJICAgIGlmcC0+aWZhX2lmYS5pZmFfZmxhZ3Mg
fD0gSUZGX0JST0FEQ0FTVDsKCSAgaWYgKGlmcm93LT5kd0FkbWluU3RhdHVz
ID09IElGX0FETUlOX1NUQVRVU19VUCkKCSAgICB7CgkgICAgICBpZnAtPmlm
YV9pZmEuaWZhX2ZsYWdzIHw9IElGRl9VUCB8IElGRl9MT1dFUl9VUDsKCSAg
ICAgIC8qIEJ1ZyBpbiBOVDQncyBJUCBIZWxwZXIgbGliLiAgVGhlIGR3T3Bl
clN0YXR1cyBoYXMganVzdAoJCSB0d28gdmFsdWVzLCAwIG9yIDEsIG5vbiBv
cGVyYXRpb25hbCwgb3BlcmF0aW9uYWwuICovCgkgICAgICBpZiAoaWZyb3ct
PmR3T3BlclN0YXR1cyA+PSAod2luY2FwLmhhc19icm9rZW5faWZfb3Blcl9z
dGF0dXMgKCkKCQkJCQkgID8gMSA6IElGX09QRVJfU1RBVFVTX0NPTk5FQ1RF
RCkpCgkJaWZwLT5pZmFfaWZhLmlmYV9mbGFncyB8PSBJRkZfUlVOTklORzsK
CSAgICB9CgkgIC8qIEFkZHJlc3MgKi8KCSAgaWZfc2luID0gKHN0cnVjdCBz
b2NrYWRkcl9pbiAqKSAmaWZwLT5pZmFfYWRkcjsKCSAgaWZfc2luLT5zaW5f
YWRkci5zX2FkZHIgPSBpcHQtPnRhYmxlW2lwX2NudF0uZHdBZGRyOwoJICBp
Zl9zaW4tPnNpbl9mYW1pbHkgPSBBRl9JTkVUOwoJICBpZnAtPmlmYV9pZmEu
aWZhX2FkZHIgPSAoc3RydWN0IHNvY2thZGRyICopICZpZnAtPmlmYV9hZGRy
OwoJICAvKiBOZXRtYXNrICovCgkgIGlmX3NpbiA9IChzdHJ1Y3Qgc29ja2Fk
ZHJfaW4gKikgJmlmcC0+aWZhX25ldG1hc2s7CgkgIGlmX3Npbi0+c2luX2Fk
ZHIuc19hZGRyID0gaXB0LT50YWJsZVtpcF9jbnRdLmR3TWFzazsKCSAgaWZf
c2luLT5zaW5fZmFtaWx5ID0gQUZfSU5FVDsKCSAgaWZwLT5pZmFfaWZhLmlm
YV9uZXRtYXNrID0gKHN0cnVjdCBzb2NrYWRkciAqKSAmaWZwLT5pZmFfbmV0
bWFzazsKCSAgaWZfc2luID0gKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSAmaWZw
LT5pZmFfYnJkZHN0YWRkcjsKCSAgaWYgKGlmcm93LT5kd1R5cGUgPT0gSUZf
VFlQRV9QUFAKCSAgICAgIHx8IGlmcm93LT5kd1R5cGUgPT0gSUZfVFlQRV9T
TElQKQoJICAgIHsKCSAgICAgIC8qIERlc3RpbmF0aW9uIGFkZHJlc3MgKi8K
CSAgICAgIGlmX3Npbi0+c2luX2FkZHIuc19hZGRyID0KCQlnZXRfcm91dGVk
c3QgKGlwdC0+dGFibGVbaXBfY250XS5kd0luZGV4KTsKCSAgICAgIGlmcC0+
aWZhX2lmYS5pZmFfZHN0YWRkciA9IChzdHJ1Y3Qgc29ja2FkZHIgKikKCQkJ
CQkgJmlmcC0+aWZhX2JyZGRzdGFkZHI7CgkgICAgfQoJICBlbHNlCgkgICAg
ewoJICAgICAgLyogQnJvYWRjYXN0IGFkZHJlc3MgKi8KI2lmIDAKCSAgICAg
IC8qIFVuZm9ydHVuYXRlbHksIHRoZSBmaWVsZCByZXR1cm5zIG9ubHkgY3Jh
cC4gKi8KCSAgICAgIGlmX3Npbi0+c2luX2FkZHIuc19hZGRyID0gaXB0LT50
YWJsZVtpcF9jbnRdLmR3QkNhc3RBZGRyOwojZWxzZQoJICAgICAgdWludDMy
X3QgbWFzayA9IGlwdC0+dGFibGVbaXBfY250XS5kd01hc2s7CgkgICAgICBp
Zl9zaW4tPnNpbl9hZGRyLnNfYWRkciA9IChpcHQtPnRhYmxlW2lwX2NudF0u
ZHdBZGRyICYgbWFzaykgfCB+bWFzazsKI2VuZGlmCgkgICAgICBpZnAtPmlm
YV9pZmEuaWZhX2Jyb2FkYWRkciA9IChzdHJ1Y3Qgc29ja2FkZHIgKikKCQkJ
CQkgICAmaWZwLT5pZmFfYnJkZHN0YWRkcjsKCSAgICB9CgkgIGlmX3Npbi0+
c2luX2ZhbWlseSA9IEFGX0lORVQ7CgkgIC8qIEhhcmR3YXJlIGFkZHJlc3Mg
Ki8KCSAgZm9yIChVSU5UIGkgPSAwOyBpIDwgSUZIV0FERFJMRU47ICsraSkK
CSAgICBpZiAoaSA+PSBpZnJvdy0+ZHdQaHlzQWRkckxlbikKCSAgICAgIGlm
cC0+aWZhX2h3YWRkci5zYV9kYXRhW2ldID0gJ1wwJzsKCSAgICBlbHNlCgkg
ICAgICBpZnAtPmlmYV9od2FkZHIuc2FfZGF0YVtpXSA9IGlmcm93LT5iUGh5
c0FkZHJbaV07CgkgIC8qIE1ldHJpYyAqLwoJICBpZnAtPmlmYV9tZXRyaWMg
PSAxOwoJICAvKiBNVFUgKi8KCSAgaWZwLT5pZmFfbXR1ID0gaWZyb3ctPmR3
TXR1OwoJICAvKiBJbnRlcmZhY2UgaW5kZXggKi8KCSAgaWZwLT5pZmFfaWZp
bmRleCA9IGlmcm93LT5kd0luZGV4OwoJICAvKiBGcmllbmRseSBuYW1lICov
CgkgIHN0cnVjdCBpZnJlcV9mcm5kbHluYW1lICppZmYgPSAoc3RydWN0IGlm
cmVxX2ZybmRseW5hbWUgKikKCQkJCQkgJmlmcC0+aWZhX2ZybmRseW5hbWU7
CgkgIGlmZi0+aWZyZl9sZW4gPSBzeXNfd2NzdG9tYnMgKGlmZi0+aWZyZl9m
cmllbmRseW5hbWUsCgkJCQkJSUZSRl9GUklFTkRMWU5BTUVTSVosCgkJCQkJ
aWZyb3ctPndzek5hbWUpOwoJICArK2lmcDsKCX0KICAgIH0KICAvKiBTaW5j
ZSBldmVyeSBlbnRyeSBpcyBzZXQgdG8gdGhlIG5leHQgZW50cnksIHRoZSBs
YXN0IGVudHJ5IHBvaW50cyB0byBhbgogICAgIGludmFsaWQgbmV4dCBlbnRy
eSBub3cuICBGaXggaXQgcmV0cm9hY3RpdmVseS4gKi8KICBpZiAoaWZwID4g
aWZyZXQpCiAgICBpZnBbLTFdLmlmYV9pZmEuaWZhX25leHQgPSBOVUxMOwoK
ZG9uZToKICByZXR1cm4gaWZyZXQ7Cn0KCi8qCiAqIEdldCBuZXR3b3JrIGlu
dGVyZmFjZXMgV2luZG93cyBOVCA8IFNQNDoKICogTG9vayBhdCB0aGUgQmlu
ZCB2YWx1ZSBpbgogKiBIS0VZX0xPQ0FMX01BQ0hJTkVcU1lTVEVNXEN1cnJl
bnRDb250cm9sU2V0XFNlcnZpY2VzXFRjcGlwXExpbmthZ2VcCiAqIFRoaXMg
aXMgYSBSRUdfTVVMVElfU1ogd2l0aCBzdHJpbmdzIG9mIHRoZSBmb3JtOgog
KiBcRGV2aWNlXDxOZXRjYXJkPiwgd2hlcmUgbmV0Y2FyZCBpcyB0aGUgbmFt
ZSBvZiB0aGUgbmV0IGRldmljZS4KICogVGhlbiBsb29rIHVuZGVyOgogKiBI
S0VZX0xPQ0FMX01BQ0hJTkVcU1lTVEVNXEN1cnJlbnRDb250cm9sU2V0XFNl
cnZpY2VzXDxOZXRDYXJkPlwKICoJCQkJCQkJUGFyYW1ldGVyc1xUY3BpcAog
KiBhdCB0aGUgSVBBZGRyZXNzLCBTdWJuZXRtYXNrIGFuZCBEZWZhdWx0R2F0
ZXdheSB2YWx1ZXMgZm9yIHRoZQogKiByZXF1aXJlZCB2YWx1ZXMuCiAqIEFs
c28gZmFrZSAibG8iIHNpbmNlIHRoZXJlJ3Mgbm8gcmVwcmVzZW50YXRpb24g
aW4gdGhlIHJlZ2lzdHJ5LgogKi8Kc3RhdGljIHN0cnVjdCBpZmFsbCAqCmdl
dF9udF9pZnMgKCkKewogIEhLRVkga2V5OwogIExPTkcgcmV0OwogIHN0cnVj
dCBpZmFsbCAqaWZyZXQgPSBOVUxMLCAqaWZwOwogIHVuc2lnbmVkIGxvbmcg
bGlwLCBsbnA7CiAgc3RydWN0IHNvY2thZGRyX2luICpzaW4gPSBOVUxMOwog
IERXT1JEIHNpemU7CiAgaW50IGNudCA9IDAsIGlkeDsKICBjaGFyICpiaW5k
aW5nID0gTlVMTDsKCiAgaWYgKChyZXQgPSBSZWdPcGVuS2V5RXggKEhLRVlf
TE9DQUxfTUFDSElORSwKCQkJICAgIlNZU1RFTVxcIgoJCQkgICAiQ3VycmVu
dENvbnRyb2xTZXRcXCIKCQkJICAgIlNlcnZpY2VzXFwiCgkJCSAgICJUY3Bp
cFxcIiAiTGlua2FnZSIsCgkJCSAgIDAsIEtFWV9SRUFELCAma2V5KSkgPT0g
RVJST1JfU1VDQ0VTUykKICAgIHsKICAgICAgaWYgKChyZXQgPSBSZWdRdWVy
eVZhbHVlRXggKGtleSwgIkJpbmQiLCBOVUxMLCBOVUxMLAoJCQkJICBOVUxM
LCAmc2l6ZSkpID09IEVSUk9SX1NVQ0NFU1MpCgl7CgkgIGJpbmRpbmcgPSAo
Y2hhciAqKSBhbGxvY2EgKHNpemUpOwoJICBpZiAoKHJldCA9IFJlZ1F1ZXJ5
VmFsdWVFeCAoa2V5LCAiQmluZCIsIE5VTEwsIE5VTEwsCgkJCQkgICAgICAo
dW5zaWduZWQgY2hhciAqKSBiaW5kaW5nLAoJCQkJICAgICAgJnNpemUpKSAh
PSBFUlJPUl9TVUNDRVNTKQoJICAgIGJpbmRpbmcgPSBOVUxMOwoJfQogICAg
ICBSZWdDbG9zZUtleSAoa2V5KTsKICAgIH0KCiAgaWYgKCFiaW5kaW5nKQog
ICAgewogICAgICBfX3NldGVycm5vX2Zyb21fd2luX2Vycm9yIChyZXQpOwog
ICAgICByZXR1cm4gTlVMTDsKICAgIH0KCiAgY2hhciAqYnAsIGV0aFsyXSA9
ICIvIjsKICBjaGFyIGNhcmRrZXlbMjU2XSwgaXBhZGRyZXNzWzI1Nl0sIG5l
dG1hc2tbMjU2XTsKCiAgZm9yIChicCA9IGJpbmRpbmc7ICpicDsgYnAgKz0g
c3RybGVuIChicCkgKyAxKQogICAgewogICAgICBicCArPSBzdHJsZW4gKCJc
XERldmljZVxcIik7CiAgICAgIHN0cmNweSAoY2FyZGtleSwgIlNZU1RFTVxc
Q3VycmVudENvbnRyb2xTZXRcXFNlcnZpY2VzXFwiKTsKICAgICAgc3RyY2F0
IChjYXJka2V5LCBicCk7CiAgICAgIHN0cmNhdCAoY2FyZGtleSwgIlxcUGFy
YW1ldGVyc1xcVGNwaXAiKTsKCiAgICAgIGlmIChSZWdPcGVuS2V5RXggKEhL
RVlfTE9DQUxfTUFDSElORSwgY2FyZGtleSwKCQkJMCwgS0VZX1JFQUQsICZr
ZXkpICE9IEVSUk9SX1NVQ0NFU1MpCgljb250aW51ZTsKCiAgICAgIGlmIChS
ZWdRdWVyeVZhbHVlRXggKGtleSwgIklQQWRkcmVzcyIsCgkJCSAgIE5VTEws
IE5VTEwsCgkJCSAgICh1bnNpZ25lZCBjaGFyICopIGlwYWRkcmVzcywKCQkJ
ICAgKHNpemUgPSAyNTYsICZzaXplKSkgPT0gRVJST1JfU1VDQ0VTUwoJICAm
JiBSZWdRdWVyeVZhbHVlRXggKGtleSwgIlN1Ym5ldE1hc2siLAoJCQkgICAg
ICBOVUxMLCBOVUxMLAoJCQkgICAgICAodW5zaWduZWQgY2hhciAqKSBuZXRt
YXNrLAoJCQkgICAgICAoc2l6ZSA9IDI1NiwgJnNpemUpKSA9PSBFUlJPUl9T
VUNDRVNTKQoJKytjbnQ7CiAgICAgIFJlZ0Nsb3NlS2V5IChrZXkpOwogICAg
fQogICsrY250OyAvKiBsb29wYmFjayAqLwogIGlmICghKGlmcmV0ID0gKHN0
cnVjdCBpZmFsbCAqKSBtYWxsb2MgKGNudCAqIHNpemVvZiAoc3RydWN0IGlm
YWxsKSkpKQogICAgcmV0dXJuIE5VTEw7CiAgLyogU2V0IHVwIGxvIGludGVy
ZmFjZSBmaXJzdCAqLwogIGlkeCA9IDA7CiAgaWZwID0gaWZyZXQgKyBpZHg7
CiAgbWVtc2V0IChpZnAsIDAsIHNpemVvZiAqaWZwKTsKICAvKiBOZXh0IGlu
IGNoYWluICovCiAgaWZwLT5pZmFfaWZhLmlmYV9uZXh0ID0gKHN0cnVjdCBp
ZmFkZHJzICopICZpZnBbMV0uaWZhX2lmYTsKICAvKiBJbnRlcmZhY2UgbmFt
ZSAqLwogIHN0cmNweSAoaWZwLT5pZmFfbmFtZSwgImxvIik7CiAgaWZwLT5p
ZmFfaWZhLmlmYV9uYW1lID0gaWZwLT5pZmFfbmFtZTsKICAvKiBGbGFncyAq
LwogIGlmcC0+aWZhX2lmYS5pZmFfZmxhZ3MgPSBJRkZfVVAgfCBJRkZfTE9X
RVJfVVAgfCBJRkZfUlVOTklORyB8IElGRl9MT09QQkFDSzsKICAvKiBBZGRy
ZXNzICovCiAgc2luID0gKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSAmaWZwLT5p
ZmFfYWRkcjsKICBzaW4tPnNpbl9hZGRyLnNfYWRkciA9IGh0b25sIChJTkFE
RFJfTE9PUEJBQ0spOwogIHNpbi0+c2luX2ZhbWlseSA9IEFGX0lORVQ7CiAg
aWZwLT5pZmFfaWZhLmlmYV9hZGRyID0gKHN0cnVjdCBzb2NrYWRkciAqKSAm
aWZwLT5pZmFfYWRkcjsKICAvKiBOZXRtYXNrICovCiAgc2luID0gKHN0cnVj
dCBzb2NrYWRkcl9pbiAqKSAmaWZwLT5pZmFfbmV0bWFzazsKICBzaW4tPnNp
bl9hZGRyLnNfYWRkciA9IGh0b25sIChJTl9DTEFTU0FfTkVUKTsKICBzaW4t
PnNpbl9mYW1pbHkgPSBBRl9JTkVUOwogIGlmcC0+aWZhX2lmYS5pZmFfbmV0
bWFzayA9IChzdHJ1Y3Qgc29ja2FkZHIgKikgJmlmcC0+aWZhX25ldG1hc2s7
CiAgLyogQnJvYWRjYXN0IGFkZHJlc3MgICovCiAgc2luID0gKHN0cnVjdCBz
b2NrYWRkcl9pbiAqKSAmaWZwLT5pZmFfYnJkZHN0YWRkcjsKICBzaW4tPnNp
bl9hZGRyLnNfYWRkciA9IGh0b25sIChJTkFERFJfTE9PUEJBQ0sgfCBJTl9D
TEFTU0FfSE9TVCk7CiAgc2luLT5zaW5fZmFtaWx5ID0gQUZfSU5FVDsKICBp
ZnAtPmlmYV9pZmEuaWZhX2Jyb2FkYWRkciA9IChzdHJ1Y3Qgc29ja2FkZHIg
KikgJmlmcC0+aWZhX2JyZGRzdGFkZHI7CiAgLyogSGFyZHdhcmUgYWRkcmVz
cyAqLwogIDsgLy8gTm90aGluZyB0byBkby4uLiAqLwogIC8qIE1ldHJpYyAq
LwogIGlmcC0+aWZhX21ldHJpYyA9IDE7CiAgLyogTVRVICovCiAgaWZwLT5p
ZmFfbXR1ID0gMTUyMDsgLyogRGVmYXVsdCB2YWx1ZSBmb3IgTVMgVENQIExv
b3BiYWNrIGludGVyZmFjZS4gKi8KICAvKiBJbnRlcmZhY2UgaW5kZXggKi8K
ICBpZnAtPmlmYV9pZmluZGV4ID0gLTE7CiAgLyogRnJpZW5kbHkgbmFtZSAq
LwogIHN0cnVjdCBpZnJlcV9mcm5kbHluYW1lICppZmYgPSAoc3RydWN0IGlm
cmVxX2ZybmRseW5hbWUgKikKCQkJCSAgJmlmcC0+aWZhX2ZybmRseW5hbWU7
CiAgc3RyY3B5IChpZmYtPmlmcmZfZnJpZW5kbHluYW1lLCAiRGVmYXVsdCBs
b29wYmFjayIpOwogIGlmZi0+aWZyZl9sZW4gPSAxNjsKCiAgZm9yIChicCA9
IGJpbmRpbmc7ICpicDsgYnAgKz0gc3RybGVuIChicCkgKyAxKQogICAgewog
ICAgICBicCArPSBzdHJsZW4gKCJcXERldmljZVxcIik7CiAgICAgIHN0cmNw
eSAoY2FyZGtleSwgIlNZU1RFTVxcQ3VycmVudENvbnRyb2xTZXRcXFNlcnZp
Y2VzXFwiKTsKICAgICAgc3RyY2F0IChjYXJka2V5LCBicCk7CiAgICAgIHN0
cmNhdCAoY2FyZGtleSwgIlxcUGFyYW1ldGVyc1xcVGNwaXAiKTsKCiAgICAg
IGlmIChSZWdPcGVuS2V5RXggKEhLRVlfTE9DQUxfTUFDSElORSwgY2FyZGtl
eSwKCQkJMCwgS0VZX1JFQUQsICZrZXkpICE9IEVSUk9SX1NVQ0NFU1MpCglj
b250aW51ZTsKCiAgICAgIGlmIChSZWdRdWVyeVZhbHVlRXggKGtleSwgIklQ
QWRkcmVzcyIsCgkJCSAgIE5VTEwsIE5VTEwsCgkJCSAgICh1bnNpZ25lZCBj
aGFyICopIGlwYWRkcmVzcywKCQkJICAgKHNpemUgPSAyNTYsICZzaXplKSkg
PT0gRVJST1JfU1VDQ0VTUwoJICAmJiBSZWdRdWVyeVZhbHVlRXggKGtleSwg
IlN1Ym5ldE1hc2siLAoJCQkgICAgICBOVUxMLCBOVUxMLAoJCQkgICAgICAo
dW5zaWduZWQgY2hhciAqKSBuZXRtYXNrLAoJCQkgICAgICAoc2l6ZSA9IDI1
NiwgJnNpemUpKSA9PSBFUlJPUl9TVUNDRVNTKQoJewoJICBjaGFyICppcCwg
Km5wOwoJICBjaGFyIGRoY3BhZGRyZXNzWzI1Nl0sIGRoY3BuZXRtYXNrWzI1
Nl07CgkgIGJvb2wgcHBwID0gZmFsc2U7CgoJICBmb3IgKGlwID0gaXBhZGRy
ZXNzLCBucCA9IG5ldG1hc2s7CgkgICAgICAgKmlwICYmICpucDsKCSAgICAg
ICBpcCArPSBzdHJsZW4gKGlwKSArIDEsIG5wICs9IHN0cmxlbiAobnApICsg
MSkKCSAgICB7CgkgICAgICBib29sIGRoY3AgPSBmYWxzZTsKCSAgICAgIGlm
IChjeWd3aW5faW5ldF9hZGRyIChpcCkgPT0gMEwKCQkgICYmIFJlZ1F1ZXJ5
VmFsdWVFeCAoa2V5LCAiRGhjcElQQWRkcmVzcyIsCgkJCQkgICAgICBOVUxM
LCBOVUxMLAoJCQkJICAgICAgKHVuc2lnbmVkIGNoYXIgKikgZGhjcGFkZHJl
c3MsCgkJCQkgICAgICAoc2l6ZSA9IDI1NiwgJnNpemUpKQoJCSAgPT0gRVJS
T1JfU1VDQ0VTUwoJCSAgJiYgUmVnUXVlcnlWYWx1ZUV4IChrZXksICJEaGNw
U3VibmV0TWFzayIsCgkJCQkgICAgICBOVUxMLCBOVUxMLAoJCQkJICAgICAg
KHVuc2lnbmVkIGNoYXIgKikgZGhjcG5ldG1hc2ssCgkJCQkgICAgICAoc2l6
ZSA9IDI1NiwgJnNpemUpKQoJCSAgPT0gRVJST1JfU1VDQ0VTUykKCQlkaGNw
ID0gdHJ1ZTsKCSAgICAgIGlmICgrK2lkeCA9PSBjbnQKCQkgICYmICEoaWZw
ID0gKHN0cnVjdCBpZmFsbCAqKQoJCQkgICAgIHJlYWxsb2MgKGlmcmV0LCAr
K2NudCAqIHNpemVvZiAoc3RydWN0IGlmYWxsKSkpKQoJCSAgewoJCSAgICBm
cmVlIChpZnJldCk7CgkJICAgIHJldHVybiBOVUxMOwoJCSAgfQoJICAgICAg
aWZwID0gaWZyZXQgKyBpZHg7CgkgICAgICBtZW1zZXQgKGlmcCwgMCwgc2l6
ZW9mICppZnApOwoJICAgICAgLyogTmV4dCBpbiBjaGFpbiAqLwoJICAgICAg
aWZwLT5pZmFfaWZhLmlmYV9uZXh0ID0gKHN0cnVjdCBpZmFkZHJzICopICZp
ZnBbMV0uaWZhX2lmYTsKCSAgICAgIC8qIEludGVyZmFjZSBuYW1lICovCgkg
ICAgICBpZiAoIXN0cm5jbXAgKGJwLCAiTmRpc1dhbiIsIDcpKQoJCXsKCQkg
IHN0cmNweSAoaWZwLT5pZmFfbmFtZSwgInBwcCIpOwoJCSAgc3RyY2F0IChp
ZnAtPmlmYV9uYW1lLCBicCArIDcpOwoJCSAgcHBwID0gdHJ1ZTsKCQl9Cgkg
ICAgICBlbHNlCgkJewoJCSAgKysqZXRoOwoJCSAgc3RyY3B5IChpZnAtPmlm
YV9uYW1lLCAiZXRoIik7CgkJICBzdHJjYXQgKGlmcC0+aWZhX25hbWUsIGV0
aCk7CgkJfQoJICAgICAgaWZwLT5pZmFfaWZhLmlmYV9uYW1lID0gaWZwLT5p
ZmFfbmFtZTsKCSAgICAgIC8qIEZsYWdzICovCgkgICAgICBpZnAtPmlmYV9p
ZmEuaWZhX2ZsYWdzID0gSUZGX1VQIHwgSUZGX0xPV0VSX1VQIHwgSUZGX1JV
Tk5JTkc7CgkgICAgICBpZiAocHBwKQoJCWlmcC0+aWZhX2lmYS5pZmFfZmxh
Z3MgfD0gSUZGX1BPSU5UT1BPSU5UIHwgSUZGX05PQVJQOwoJICAgICAgZWxz
ZQoJCWlmcC0+aWZhX2lmYS5pZmFfZmxhZ3MgfD0gSUZGX0JST0FEQ0FTVDsK
CSAgICAgIC8qIEFkZHJlc3MgKi8KCSAgICAgIHNpbiA9IChzdHJ1Y3Qgc29j
a2FkZHJfaW4gKikgJmlmcC0+aWZhX2FkZHI7CgkgICAgICBzaW4tPnNpbl9h
ZGRyLnNfYWRkciA9IGN5Z3dpbl9pbmV0X2FkZHIgKGRoY3AgPyBkaGNwYWRk
cmVzcyA6IGlwKTsKCSAgICAgIHNpbi0+c2luX2ZhbWlseSA9IEFGX0lORVQ7
CgkgICAgICBpZnAtPmlmYV9pZmEuaWZhX2FkZHIgPSAoc3RydWN0IHNvY2th
ZGRyICopICZpZnAtPmlmYV9hZGRyOwoJICAgICAgLyogTmV0bWFzayAqLwoJ
ICAgICAgc2luID0gKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSAmaWZwLT5pZmFf
bmV0bWFzazsKCSAgICAgIHNpbi0+c2luX2FkZHIuc19hZGRyID0gY3lnd2lu
X2luZXRfYWRkciAoZGhjcCA/IGRoY3BuZXRtYXNrIDogbnApOwoJICAgICAg
c2luLT5zaW5fZmFtaWx5ID0gQUZfSU5FVDsKCSAgICAgIGlmcC0+aWZhX2lm
YS5pZmFfbmV0bWFzayA9IChzdHJ1Y3Qgc29ja2FkZHIgKikgJmlmcC0+aWZh
X25ldG1hc2s7CgkgICAgICBpZiAocHBwKQoJCXsKCQkgIC8qIERlc3RpbmF0
aW9uIGFkZHJlc3MgKi8KCQkgIHNpbiA9IChzdHJ1Y3Qgc29ja2FkZHJfaW4g
KikgJmlmcC0+aWZhX2JyZGRzdGFkZHI7CgkJICBzaW4tPnNpbl9hZGRyLnNf
YWRkciA9CgkJICAgIGN5Z3dpbl9pbmV0X2FkZHIgKGRoY3AgPyBkaGNwYWRk
cmVzcyA6IGlwKTsKCQkgIHNpbi0+c2luX2ZhbWlseSA9IEFGX0lORVQ7CgkJ
ICBpZnAtPmlmYV9pZmEuaWZhX2RzdGFkZHIgPSAoc3RydWN0IHNvY2thZGRy
ICopCgkJCQkJICAgICAmaWZwLT5pZmFfYnJkZHN0YWRkcjsKCQl9CgkgICAg
ICBlbHNlCgkJewoJCSAgLyogQnJvYWRjYXN0IGFkZHJlc3MgKi8KCQkgIGxp
cCA9IGN5Z3dpbl9pbmV0X2FkZHIgKGRoY3AgPyBkaGNwYWRkcmVzcyA6IGlw
KTsKCQkgIGxucCA9IGN5Z3dpbl9pbmV0X2FkZHIgKGRoY3AgPyBkaGNwbmV0
bWFzayA6IG5wKTsKCQkgIHNpbiA9IChzdHJ1Y3Qgc29ja2FkZHJfaW4gKikg
JmlmcC0+aWZhX2JyZGRzdGFkZHI7CgkJICBzaW4tPnNpbl9hZGRyLnNfYWRk
ciA9IChsaXAgJiBsbnApIHwgfmxucDsKCQkgIHNpbi0+c2luX2ZhbWlseSA9
IEFGX0lORVQ7CgkJICBpZnAtPmlmYV9pZmEuaWZhX2Jyb2FkYWRkciA9IChz
dHJ1Y3Qgc29ja2FkZHIgKikKCQkJCQkgICAgICAgJmlmcC0+aWZhX2JyZGRz
dGFkZHI7CgkJfQoJICAgICAgLyogSGFyZHdhcmUgYWRkcmVzcyAqLwoJICAg
ICAgOyAvLyBOb3RoaW5nIHRvIGRvLi4uICovCgkgICAgICAvKiBNZXRyaWMg
Ki8KCSAgICAgIGlmcC0+aWZhX21ldHJpYyA9IDE7CgkgICAgICAvKiBNVFUg
Ki8KCSAgICAgIGlmcC0+aWZhX210dSA9IDE1MDA7CgkgICAgICAvKiBJbnRl
cmZhY2UgaW5kZXggKi8KCSAgICAgIGlmcC0+aWZhX2lmaW5kZXggPSAtMTsK
CSAgICAgIC8qIEZyaWVuZGx5IG5hbWUgKi8KCSAgICAgIHN0cnVjdCBpZnJl
cV9mcm5kbHluYW1lICppZmYgPSAoc3RydWN0IGlmcmVxX2ZybmRseW5hbWUg
KikKCQkJCQkgICAgICZpZnAtPmlmYV9mcm5kbHluYW1lOwoJICAgICAgc3Ry
Y3B5IChpZmYtPmlmcmZfZnJpZW5kbHluYW1lLCBicCk7CgkgICAgICBpZmYt
PmlmcmZfbGVuID0gc3RybGVuIChpZmYtPmlmcmZfZnJpZW5kbHluYW1lKTsK
CSAgICB9Cgl9CiAgICAgIFJlZ0Nsb3NlS2V5IChrZXkpOwogICAgfQogIC8q
IFNpbmNlIGV2ZXJ5IGVudHJ5IGlzIHNldCB0byB0aGUgbmV4dCBlbnRyeSwg
dGhlIGxhc3QgZW50cnkgcG9pbnRzIHRvIGFuCiAgICAgaW52YWxpZCBuZXh0
IGVudHJ5IG5vdy4gIEZpeCBpdCByZXRyb2FjdGl2ZWx5LiAqLwogIGlmIChp
ZnAgPiBpZnJldCkKICAgIGlmcC0+aWZhX2lmYS5pZmFfbmV4dCA9IE5VTEw7
CiAgcmV0dXJuIGlmcmV0Owp9CgpleHRlcm4gIkMiIGludApnZXRpZmFkZHJz
IChzdHJ1Y3QgaWZhZGRycyAqKmlmYXApCnsKICBpZiAoIWlmYXApCiAgICB7
CiAgICAgIHNldF9lcnJubyAoRUlOVkFMKTsKICAgICAgcmV0dXJuIC0xOwog
ICAgfQogIHN0cnVjdCBpZmFsbCAqaWZwOwogIGlmICh3aW5jYXAuaGFzX2dh
YV9wcmVmaXhlcyAoKSAmJiAhQ1lHV0lOX1ZFUlNJT05fQ0hFQ0tfRk9SX09M
RF9JRlJFUSkKICAgIGlmcCA9IGdldF94cF9pZnMgKEFGX1VOU1BFQyk7CiAg
ZWxzZSBpZiAod2luY2FwLmhhc19pcF9oZWxwZXJfbGliICgpKQogICAgaWZw
ID0gZ2V0XzJrX2lmcyAoKTsKICBlbHNlCiAgICBpZnAgPSBnZXRfbnRfaWZz
ICgpOwogICppZmFwID0gJmlmcC0+aWZhX2lmYTsKICByZXR1cm4gaWZwID8g
MCA6IC0xOwp9CgpleHRlcm4gIkMiIHZvaWQKZnJlZWlmYWRkcnMgKHN0cnVj
dCBpZmFkZHJzICppZnApCnsKICBpZiAoaWZwKQogICAgZnJlZSAoaWZwKTsK
fQoKaW50CmdldF9pZmNvbmYgKHN0cnVjdCBpZmNvbmYgKmlmYywgaW50IHdo
YXQpCnsKICBzaWdfZGlzcGF0Y2hfcGVuZGluZyAoKTsKICBteWZhdWx0IGVm
YXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0ZWQgKEVGQVVMVCkpCiAgICByZXR1
cm4gLTE7CgogIC8qIEVuc3VyZSB3ZSBoYXZlIHNwYWNlIGZvciBhdCBsZWFz
dCBvbmUgc3RydWN0IGlmcmVxcywgZmFpbCBpZiBub3QuICovCiAgaWYgKGlm
Yy0+aWZjX2xlbiA8IChpbnQpIHNpemVvZiAoc3RydWN0IGlmcmVxKSkKICAg
IHsKICAgICAgc2V0X2Vycm5vIChFSU5WQUwpOwogICAgICByZXR1cm4gLTE7
CiAgICB9CgogIHN0cnVjdCBpZmFsbCAqaWZyZXQsICppZnA7CiAgaWYgKHdp
bmNhcC5oYXNfZ2FhX3ByZWZpeGVzICgpICYmICFDWUdXSU5fVkVSU0lPTl9D
SEVDS19GT1JfT0xEX0lGUkVRKQogICAgaWZyZXQgPSBnZXRfeHBfaWZzIChB
Rl9JTkVUKTsKICBlbHNlIGlmICh3aW5jYXAuaGFzX2lwX2hlbHBlcl9saWIg
KCkpCiAgICBpZnJldCA9IGdldF8ya19pZnMgKCk7CiAgZWxzZQogICAgaWZy
ZXQgPSBnZXRfbnRfaWZzICgpOwogIGlmICghaWZyZXQpCiAgICByZXR1cm4g
LTE7CgogIHN0cnVjdCBzb2NrYWRkcl9pbiAqc2luOwogIHN0cnVjdCBpZnJl
cSAqaWZyID0gaWZjLT5pZmNfcmVxOwogIGludCBjbnQgPSAwOwogIGZvciAo
aWZwID0gaWZyZXQ7IGlmcDsgaWZwID0gKHN0cnVjdCBpZmFsbCAqKSBpZnAt
PmlmYV9pZmEuaWZhX25leHQpCiAgICB7CiAgICAgICsrY250OwogICAgICBz
dHJjcHkgKGlmci0+aWZyX25hbWUsIGlmcC0+aWZhX25hbWUpOwogICAgICBz
d2l0Y2ggKHdoYXQpCgl7CgljYXNlIFNJT0NHSUZGTEFHUzoKCSAgaWZyLT5p
ZnJfZmxhZ3MgPSBpZnAtPmlmYV9pZmEuaWZhX2ZsYWdzOwoJICBicmVhazsK
CWNhc2UgU0lPQ0dJRkNPTkY6CgljYXNlIFNJT0NHSUZBRERSOgoJICBzaW4g
PSAoc3RydWN0IHNvY2thZGRyX2luICopICZpZnItPmlmcl9hZGRyOwoJICBt
ZW1jcHkgKHNpbiwgJmlmcC0+aWZhX2FkZHIsIHNpemVvZiAqc2luKTsKCSAg
YnJlYWs7CgljYXNlIFNJT0NHSUZORVRNQVNLOgoJICBzaW4gPSAoc3RydWN0
IHNvY2thZGRyX2luICopICZpZnItPmlmcl9uZXRtYXNrOwoJICBtZW1jcHkg
KHNpbiwgJmlmcC0+aWZhX25ldG1hc2ssIHNpemVvZiAqc2luKTsKCSAgYnJl
YWs7CgljYXNlIFNJT0NHSUZEU1RBRERSOgoJICBzaW4gPSAoc3RydWN0IHNv
Y2thZGRyX2luICopICZpZnItPmlmcl9kc3RhZGRyOwoJICBpZiAoaWZwLT5p
ZmFfaWZhLmlmYV9mbGFncyAmIElGRl9QT0lOVE9QT0lOVCkKCSAgICBtZW1j
cHkgKHNpbiwgJmlmcC0+aWZhX2JyZGRzdGFkZHIsIHNpemVvZiAqc2luKTsK
CSAgZWxzZSAvKiBSZXR1cm4gYWRkciBhcyBvbiBMaW51eC4gKi8KCSAgICBt
ZW1jcHkgKHNpbiwgJmlmcC0+aWZhX2FkZHIsIHNpemVvZiAqc2luKTsKCSAg
YnJlYWs7CgljYXNlIFNJT0NHSUZCUkRBRERSOgoJICBzaW4gPSAoc3RydWN0
IHNvY2thZGRyX2luICopICZpZnItPmlmcl9icm9hZGFkZHI7CgkgIGlmICgh
KGlmcC0+aWZhX2lmYS5pZmFfZmxhZ3MgJiBJRkZfUE9JTlRPUE9JTlQpKQoJ
ICAgIG1lbWNweSAoc2luLCAmaWZwLT5pZmFfYnJkZHN0YWRkciwgc2l6ZW9m
ICpzaW4pOwoJICBlbHNlCgkgICAgewoJICAgICAgc2luLT5zaW5fYWRkci5z
X2FkZHIgPSBJTkFERFJfQU5ZOwoJICAgICAgc2luLT5zaW5fZmFtaWx5ID0g
QUZfSU5FVDsKCSAgICAgIHNpbi0+c2luX3BvcnQgPSAwOwoJICAgIH0KCSAg
YnJlYWs7CgljYXNlIFNJT0NHSUZIV0FERFI6CgkgIG1lbWNweSAoJmlmci0+
aWZyX2h3YWRkciwgJmlmcC0+aWZhX2h3YWRkciwgc2l6ZW9mIGlmci0+aWZy
X2h3YWRkcik7CgkgIGJyZWFrOwoJY2FzZSBTSU9DR0lGTUVUUklDOgoJICBp
ZnItPmlmcl9tZXRyaWMgPSBpZnAtPmlmYV9tZXRyaWM7CgkgIGJyZWFrOwoJ
Y2FzZSBTSU9DR0lGTVRVOgoJICBpZnItPmlmcl9tdHUgPSBpZnAtPmlmYV9t
dHU7CgkgIGJyZWFrOwoJY2FzZSBTSU9DR0lGSU5ERVg6CgkgIGlmci0+aWZy
X2lmaW5kZXggPSBpZnAtPmlmYV9pZmluZGV4OwoJICBicmVhazsKCWNhc2Ug
U0lPQ0dJRkZSTkRMWU5BTToKCSAgbWVtY3B5IChpZnItPmlmcl9mcm5kbHlu
YW1lLCAmaWZwLT5pZmFfZnJuZGx5bmFtZSwKCQkgIHNpemVvZiAoc3RydWN0
IGlmcmVxX2ZybmRseW5hbWUpKTsKCX0KICAgICAgaWYgKChjYWRkcl90KSAr
K2lmciA+CgkgIGlmYy0+aWZjX2J1ZiArIGlmYy0+aWZjX2xlbiAtIHNpemVv
ZiAoc3RydWN0IGlmcmVxKSkKCWJyZWFrOwogICAgfQogIC8qIFNldCB0aGUg
Y29ycmVjdCBsZW5ndGggKi8KICBpZmMtPmlmY19sZW4gPSBjbnQgKiBzaXpl
b2YgKHN0cnVjdCBpZnJlcSk7CiAgZnJlZSAoaWZyZXQpOwogIHJldHVybiAw
Owp9CgpleHRlcm4gIkMiIHVuc2lnbmVkCmlmX25hbWV0b2luZGV4IChjb25z
dCBjaGFyICpuYW1lKQp7CiAgUElQX0FEQVBURVJfQUREUkVTU0VTIHBhMCA9
IE5VTEwsIHBhcDsKICB1bnNpZ25lZCBpbmRleCA9IDA7CgogIG15ZmF1bHQg
ZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxUKSkKICAgIHJl
dHVybiAwOwoKICBpZiAod2luY2FwLmhhc19nYWFfcHJlZml4ZXMgKCkKICAg
ICAgJiYgZ2V0X2FkYXB0ZXJzX2FkZHJlc3NlcyAoJnBhMCwgQUZfVU5TUEVD
KSkKICAgIHsKICAgICAgY2hhciBsbmFtZVtJRl9OQU1FU0laRV0sICpjOwoK
ICAgICAgbG5hbWVbMF0gPSAnXDAnOwogICAgICBzdHJuY2F0IChsbmFtZSwg
bmFtZSwgSUZfTkFNRVNJWkUgLSAxKTsKICAgICAgaWYgKGxuYW1lWzBdID09
ICd7JyAmJiAoYyA9IHN0cmNociAobG5hbWUsICc6JykpKQoJKmMgPSAnXDAn
OwogICAgICBmb3IgKHBhcCA9IHBhMDsgcGFwOyBwYXAgPSBwYXAtPk5leHQp
CglpZiAoc3RyY2FzZW1hdGNoIChsbmFtZSwgcGFwLT5BZGFwdGVyTmFtZSkp
CgkgIHsKCSAgICBpbmRleCA9IHBhcC0+SXB2NklmSW5kZXggPzogcGFwLT5J
ZkluZGV4OwoJICAgIGJyZWFrOwoJICB9CiAgICAgIGZyZWUgKHBhMCk7CiAg
ICB9CiAgcmV0dXJuIGluZGV4Owp9CgpleHRlcm4gIkMiIGNoYXIgKgppZl9p
bmRleHRvbmFtZSAodW5zaWduZWQgaWZpbmRleCwgY2hhciAqaWZuYW1lKQp7
CiAgUElQX0FEQVBURVJfQUREUkVTU0VTIHBhMCA9IE5VTEwsIHBhcDsKICBj
aGFyICpuYW1lID0gTlVMTDsKCiAgbXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVm
YXVsdC5mYXVsdGVkIChFRkFVTFQpKQogICAgcmV0dXJuIE5VTEw7CgogIGlm
ICh3aW5jYXAuaGFzX2dhYV9wcmVmaXhlcyAoKQogICAgICAmJiBnZXRfYWRh
cHRlcnNfYWRkcmVzc2VzICgmcGEwLCBBRl9VTlNQRUMpKQogICAgewogICAg
ICBmb3IgKHBhcCA9IHBhMDsgcGFwOyBwYXAgPSBwYXAtPk5leHQpCglpZiAo
aWZpbmRleCA9PSAocGFwLT5JcHY2SWZJbmRleCA/OiBwYXAtPklmSW5kZXgp
KQoJICB7CgkgICAgLyogVW5mb3J0dW5hdGVseSB0aGUgcHJlLVZpc3RhIElQ
djYgc3RhY2sgaGFzIGEgZGlzdGluY3QgbG9vcGJhY2sKCSAgICAgICBkZXZp
Y2Ugd2l0aCB0aGUgc2FtZSBJcHY2SWZJbmRleCBhcyB0aGUgSWZJbmRleCBv
ZiB0aGUgSVB2NAoJICAgICAgIGxvb3BiYWNrIGRldmljZSwgYnV0IHdpdGgg
YSBkaWZmZXJlbnQgYWRhcHRlciBuYW1lLgoJICAgICAgIEZvciBjb25zaXN0
ZW5jeSB3aXRoIC9wcm9jL25ldC9pZl9pbmV0NiwgdHJ5IHRvIGZpbmQgdGhl
CgkgICAgICAgSVB2NiBsb29wYmFjayBkZXZpY2UgYW5kIHVzZSB0aGF0IGFk
YXB0ZXIgbmFtZSBpbnN0ZWFkLgoJICAgICAgIFdlIGlkZW50aWZ5IHRoZSBs
b29wYmFjayBkZXZpY2UgYnkgaXRzIElmSW5kZXggb2YgMS4gKi8KCSAgICBp
ZiAocGFwLT5JZkluZGV4ID09IDEgJiYgcGFwLT5JcHY2SWZJbmRleCA9PSAw
KQoJICAgICAgZm9yIChQSVBfQURBUFRFUl9BRERSRVNTRVMgcGFwMiA9IHBh
MDsgcGFwMjsgcGFwMiA9IHBhcDItPk5leHQpCgkgICAgICAgIGlmIChwYXAy
LT5JcHY2SWZJbmRleCA9PSAxKQoJCSAgewoJCSAgICBwYXAgPSBwYXAyOwoJ
CSAgICBicmVhazsKCQkgIH0KCSAgICBuYW1lID0gc3RyY3B5IChpZm5hbWUs
IHBhcC0+QWRhcHRlck5hbWUpOwoJICAgIGJyZWFrOwoJICB9CiAgICAgIGZy
ZWUgKHBhMCk7CiAgICB9CiAgZWxzZQogICAgc2V0X2Vycm5vIChFTlhJTyk7
CiAgcmV0dXJuIG5hbWU7Cn0KCmV4dGVybiAiQyIgc3RydWN0IGlmX25hbWVp
bmRleCAqCmlmX25hbWVpbmRleCAodm9pZCkKewogIFBJUF9BREFQVEVSX0FE
RFJFU1NFUyBwYTAgPSBOVUxMLCBwYXA7CiAgc3RydWN0IGlmX25hbWVpbmRl
eCAqaWZsaXN0ID0gTlVMTDsKICBjaGFyICgqaWZuYW1lbGlzdClbSUZfTkFN
RVNJWkVdOwoKICBteWZhdWx0IGVmYXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0
ZWQgKEVGQVVMVCkpCiAgICByZXR1cm4gTlVMTDsKCiAgaWYgKHdpbmNhcC5o
YXNfZ2FhX3ByZWZpeGVzICgpCiAgICAgICYmIGdldF9hZGFwdGVyc19hZGRy
ZXNzZXMgKCZwYTAsIEFGX1VOU1BFQykpCiAgICB7CiAgICAgIGludCBjbnQg
PSAwOwogICAgICBmb3IgKHBhcCA9IHBhMDsgcGFwOyBwYXAgPSBwYXAtPk5l
eHQpCgkrK2NudDsKICAgICAgaWZsaXN0ID0gKHN0cnVjdCBpZl9uYW1laW5k
ZXggKikKCSAgICAgICBtYWxsb2MgKChjbnQgKyAxKSAqIHNpemVvZiAoc3Ry
dWN0IGlmX25hbWVpbmRleCkKCQkgICAgICAgKyBjbnQgKiBJRl9OQU1FU0la
RSk7CiAgICAgIGlmICghaWZsaXN0KQoJc2V0X2Vycm5vIChFTk9CVUZTKTsK
ICAgICAgZWxzZQoJewoJICBpZm5hbWVsaXN0ID0gKGNoYXIgKCopW0lGX05B
TUVTSVpFXSkgKGlmbGlzdCArIGNudCArIDEpOwoJICBmb3IgKHBhcCA9IHBh
MCwgY250ID0gMDsgcGFwOyBwYXAgPSBwYXAtPk5leHQpCgkgICAgewoJICAg
ICAgZm9yIChpbnQgaSA9IDA7IGkgPCBjbnQ7ICsraSkKCQlpZiAoaWZsaXN0
W2ldLmlmX2luZGV4ID09IChwYXAtPklwdjZJZkluZGV4ID86IHBhcC0+SWZJ
bmRleCkpCgkJICBnb3RvIG91dGVyX2xvb3A7CgkgICAgICBpZmxpc3RbY250
XS5pZl9pbmRleCA9IHBhcC0+SXB2NklmSW5kZXggPzogcGFwLT5JZkluZGV4
OwoJICAgICAgc3RyY3B5IChpZmxpc3RbY250XS5pZl9uYW1lID0gaWZuYW1l
bGlzdFtjbnRdLCBwYXAtPkFkYXB0ZXJOYW1lKTsKCSAgICAgIC8qIFNlZSBj
b21tZW50IGluIGlmX2luZGV4dG9uYW1lLiAqLwoJICAgICAgaWYgKHBhcC0+
SWZJbmRleCA9PSAxICYmIHBhcC0+SXB2NklmSW5kZXggPT0gMCkKCQlmb3Ig
KFBJUF9BREFQVEVSX0FERFJFU1NFUyBwYXAyID0gcGEwOyBwYXAyOyBwYXAy
ID0gcGFwMi0+TmV4dCkKCQkgIGlmIChwYXAyLT5JcHY2SWZJbmRleCA9PSAx
KQoJCSAgICB7CgkJICAgICAgc3RyY3B5IChpZm5hbWVsaXN0W2NudF0sIHBh
cDItPkFkYXB0ZXJOYW1lKTsKCQkgICAgICBicmVhazsKCQkgICAgfQoJICAg
ICAgKytjbnQ7CgkgICAgb3V0ZXJfbG9vcDoKCSAgICAgIDsKCSAgICB9Cgkg
IGlmbGlzdFtjbnRdLmlmX2luZGV4ID0gMDsKCSAgaWZsaXN0W2NudF0uaWZf
bmFtZSA9IE5VTEw7Cgl9CiAgICAgIGZyZWUgKHBhMCk7CiAgICB9CiAgZWxz
ZQogICAgc2V0X2Vycm5vIChFTlhJTyk7CiAgcmV0dXJuIGlmbGlzdDsKfQoK
ZXh0ZXJuICJDIiB2b2lkCmlmX2ZyZWVuYW1laW5kZXggKHN0cnVjdCBpZl9u
YW1laW5kZXggKnB0cikKewogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1
bHQuZmF1bHRlZCAoRUZBVUxUKSkKICAgIHJldHVybjsKICBmcmVlIChwdHIp
Owp9CgojZGVmaW5lIFBPUlRfTE9XCShJUFBPUlRfRUZTU0VSVkVSICsgMSkK
I2RlZmluZSBQT1JUX0hJR0gJKElQUE9SVF9SRVNFUlZFRCAtIDEpCiNkZWZp
bmUgTlVNX1BPUlRTCShQT1JUX0hJR0ggLSBQT1JUX0xPVyArIDEpCgpleHRl
cm4gIkMiIGludApjeWd3aW5fYmluZHJlc3Zwb3J0X3NhIChpbnQgZmQsIHN0
cnVjdCBzb2NrYWRkciAqc2EpCnsKICBzdHJ1Y3Qgc29ja2FkZHJfc3RvcmFn
ZSBzc3Q7CiAgc3RydWN0IHNvY2thZGRyX2luICpzaW4gPSBOVUxMOwogIHN0
cnVjdCBzb2NrYWRkcl9pbjYgKnNpbjYgPSBOVUxMOwogIGluX3BvcnRfdCBw
b3J0OwogIHNvY2tsZW5fdCBzYWxlbjsKICBpbnQgcmV0OwoKICBzaWdfZGlz
cGF0Y2hfcGVuZGluZyAoKTsKCiAgbXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVm
YXVsdC5mYXVsdGVkIChFRkFVTFQpKQogICAgcmV0dXJuIC0xOwoKICBmaGFu
ZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7CiAgaWYgKCFmaCkKICAgIHJl
dHVybiAtMTsKCiAgaWYgKCFzYSkKICAgIHsKICAgICAgc2EgPSAoc3RydWN0
IHNvY2thZGRyICopICZzc3Q7CiAgICAgIG1lbXNldCAoJnNzdCwgMCwgc2l6
ZW9mIHNzdCk7CiAgICAgIHNhLT5zYV9mYW1pbHkgPSBmaC0+Z2V0X2FkZHJf
ZmFtaWx5ICgpOwogICAgfQoKICBzd2l0Y2ggKHNhLT5zYV9mYW1pbHkpCiAg
ICB7CiAgICBjYXNlIEFGX0lORVQ6CiAgICAgIHNhbGVuID0gc2l6ZW9mIChz
dHJ1Y3Qgc29ja2FkZHJfaW4pOwogICAgICBzaW4gPSAoc3RydWN0IHNvY2th
ZGRyX2luICopIHNhOwogICAgICBwb3J0ID0gc2luLT5zaW5fcG9ydDsKICAg
ICAgYnJlYWs7CiAgICBjYXNlIEFGX0lORVQ2OgogICAgICBzYWxlbiA9IHNp
emVvZiAoc3RydWN0IHNvY2thZGRyX2luNik7CiAgICAgIHNpbjYgPSAoc3Ry
dWN0IHNvY2thZGRyX2luNiAqKSBzYTsKICAgICAgcG9ydCA9IHNpbjYtPnNp
bjZfcG9ydDsKICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAgICBzZXRf
ZXJybm8gKEVQRk5PU1VQUE9SVCk7CiAgICAgIHJldHVybiAtMTsKICAgIH0K
CiAgLyogSWYgYSBub24temVybyBwb3J0IG51bWJlciBpcyBnaXZlbiwgdHJ5
IHRoaXMgZmlyc3QuICBJZiB0aGF0IHN1Y2NlZWRzLAogICAgIG9yIGlmIHRo
ZSBlcnJvciBtZXNzYWdlIGlzIHNlcmlvdXMsIHJldHVybi4gKi8KICBpZiAo
cG9ydCkKICAgIHsKICAgICAgcmV0ID0gZmgtPmJpbmQgKHNhLCBzYWxlbik7
CiAgICAgIGlmICghcmV0IHx8IChnZXRfZXJybm8gKCkgIT0gRUFERFJJTlVT
RSAmJiBnZXRfZXJybm8gKCkgIT0gRUlOVkFMKSkKCXJldHVybiByZXQ7CiAg
ICB9CgogIExPTkcgbXlwb3J0OwoKICBmb3IgKGludCBpID0gMDsgaSA8IE5V
TV9QT1JUUzsgaSsrKQogICAgewogICAgICB3aGlsZSAoKG15cG9ydCA9IElu
dGVybG9ja2VkRXhjaGFuZ2UgKCZjeWd3aW5fc2hhcmVkLT5sYXN0X3VzZWRf
YmluZHJlc3Zwb3J0LCAtMSkpID09IC0xKQoJbG93X3ByaW9yaXR5X3NsZWVw
ICgwKTsKICAgICAgaWYgKG15cG9ydCA9PSAwIHx8IC0tbXlwb3J0IDwgUE9S
VF9MT1cpCglteXBvcnQgPSBQT1JUX0hJR0g7CiAgICAgIEludGVybG9ja2Vk
RXhjaGFuZ2UgKCZjeWd3aW5fc2hhcmVkLT5sYXN0X3VzZWRfYmluZHJlc3Zw
b3J0LCBteXBvcnQpOwoKICAgICAgaWYgKHNhLT5zYV9mYW1pbHkgPT0gQUZf
SU5FVDYpCglzaW42LT5zaW42X3BvcnQgPSBodG9ucyAobXlwb3J0KTsKICAg
ICAgZWxzZQoJc2luLT5zaW5fcG9ydCA9IGh0b25zIChteXBvcnQpOwogICAg
ICBpZiAoIShyZXQgPSBmaC0+YmluZCAoc2EsIHNhbGVuKSkpCglicmVhazsK
ICAgICAgaWYgKGdldF9lcnJubyAoKSAhPSBFQUREUklOVVNFICYmIGdldF9l
cnJubyAoKSAhPSBFSU5WQUwpCglicmVhazsKICAgIH0KCiAgcmV0dXJuIHJl
dDsKfQoKZXh0ZXJuICJDIiBpbnQKY3lnd2luX2JpbmRyZXN2cG9ydCAoaW50
IGZkLCBzdHJ1Y3Qgc29ja2FkZHJfaW4gKnNpbikKewogIHJldHVybiBjeWd3
aW5fYmluZHJlc3Zwb3J0X3NhIChmZCwgKHN0cnVjdCBzb2NrYWRkciAqKSBz
aW4pOwp9CgovKiBzb2NrZXRwYWlyOiBzdGFuZGFyZHM/ICovCi8qIFdpbjMy
IHN1cHBvcnRzIEFGX0lORVQgb25seSwgc28gaWdub3JlIGRvbWFpbiBhbmQg
cHJvdG9jb2wgYXJndW1lbnRzICovCmV4dGVybiAiQyIgaW50CnNvY2tldHBh
aXIgKGludCBmYW1pbHksIGludCB0eXBlLCBpbnQgcHJvdG9jb2wsIGludCAq
c2IpCnsKICBpbnQgcmVzID0gLTE7CiAgU09DS0VUIGluc29jaywgb3V0c29j
aywgbmV3c29jazsKICBzdHJ1Y3Qgc29ja2FkZHJfaW4gc29ja19pbiwgc29j
a19vdXQ7CiAgaW50IGxlbjsKCiAgc2lnX2Rpc3BhdGNoX3BlbmRpbmcgKCk7
CiAgbXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVmYXVsdC5mYXVsdGVkIChFRkFV
TFQpKQogICAgcmV0dXJuIC0xOwoKICBpZiAoZmFtaWx5ICE9IEFGX0xPQ0FM
ICYmIGZhbWlseSAhPSBBRl9JTkVUKQogICAgewogICAgICBzZXRfZXJybm8g
KEVBRk5PU1VQUE9SVCk7CiAgICAgIGdvdG8gZG9uZTsKICAgIH0KICBpZiAo
dHlwZSAhPSBTT0NLX1NUUkVBTSAmJiB0eXBlICE9IFNPQ0tfREdSQU0pCiAg
ICB7CiAgICAgIHNldF9lcnJubyAoRVBST1RPVFlQRSk7CiAgICAgIGdvdG8g
ZG9uZTsKICAgIH0KICBpZiAoKGZhbWlseSA9PSBBRl9MT0NBTCAmJiBwcm90
b2NvbCAhPSBQRl9VTlNQRUMgJiYgcHJvdG9jb2wgIT0gUEZfTE9DQUwpCiAg
ICAgIHx8IChmYW1pbHkgPT0gQUZfSU5FVCAmJiBwcm90b2NvbCAhPSBQRl9V
TlNQRUMgJiYgcHJvdG9jb2wgIT0gUEZfSU5FVCkpCiAgICB7CiAgICAgIHNl
dF9lcnJubyAoRVBST1RPTk9TVVBQT1JUKTsKICAgICAgZ290byBkb25lOwog
ICAgfQoKICAvKiBjcmVhdGUgdGhlIGZpcnN0IHNvY2tldCAqLwogIG5ld3Nv
Y2sgPSBzb2NrZXQgKEFGX0lORVQsIHR5cGUsIDApOwogIGlmIChuZXdzb2Nr
ID09IElOVkFMSURfU09DS0VUKQogICAgewogICAgICBkZWJ1Z19wcmludGYg
KCJmaXJzdCBzb2NrZXQgY2FsbCBmYWlsZWQiKTsKICAgICAgc2V0X3dpbnNv
Y2tfZXJybm8gKCk7CiAgICAgIGdvdG8gZG9uZTsKICAgIH0KCiAgLyogYmlu
ZCB0aGUgc29ja2V0IHRvIGFueSB1bnVzZWQgcG9ydCAqLwogIHNvY2tfaW4u
c2luX2ZhbWlseSA9IEFGX0lORVQ7CiAgc29ja19pbi5zaW5fcG9ydCA9IDA7
CiAgc29ja19pbi5zaW5fYWRkci5zX2FkZHIgPSBJTkFERFJfQU5ZOwogIGlm
IChiaW5kIChuZXdzb2NrLCAoc3RydWN0IHNvY2thZGRyICopICZzb2NrX2lu
LCBzaXplb2YgKHNvY2tfaW4pKSA8IDApCiAgICB7CiAgICAgIGRlYnVnX3By
aW50ZiAoImJpbmQgZmFpbGVkIik7CiAgICAgIHNldF93aW5zb2NrX2Vycm5v
ICgpOwogICAgICBjbG9zZXNvY2tldCAobmV3c29jayk7CiAgICAgIGdvdG8g
ZG9uZTsKICAgIH0KICBsZW4gPSBzaXplb2YgKHNvY2tfaW4pOwogIGlmIChn
ZXRzb2NrbmFtZSAobmV3c29jaywgKHN0cnVjdCBzb2NrYWRkciAqKSAmc29j
a19pbiwgJmxlbikgPCAwKQogICAgewogICAgICBkZWJ1Z19wcmludGYgKCJn
ZXRzb2NrbmFtZSBlcnJvciIpOwogICAgICBzZXRfd2luc29ja19lcnJubyAo
KTsKICAgICAgY2xvc2Vzb2NrZXQgKG5ld3NvY2spOwogICAgICBnb3RvIGRv
bmU7CiAgICB9CgogIC8qIEZvciBzdHJlYW0gc29ja2V0cywgY3JlYXRlIGEg
bGlzdGVuZXIgKi8KICBpZiAodHlwZSA9PSBTT0NLX1NUUkVBTSkKICAgIGxp
c3RlbiAobmV3c29jaywgMik7CgogIC8qIGNyZWF0ZSBhIGNvbm5lY3Rpbmcg
c29ja2V0ICovCiAgb3V0c29jayA9IHNvY2tldCAoQUZfSU5FVCwgdHlwZSwg
MCk7CiAgaWYgKG91dHNvY2sgPT0gSU5WQUxJRF9TT0NLRVQpCiAgICB7CiAg
ICAgIGRlYnVnX3ByaW50ZiAoInNlY29uZCBzb2NrZXQgY2FsbCBmYWlsZWQi
KTsKICAgICAgc2V0X3dpbnNvY2tfZXJybm8gKCk7CiAgICAgIGNsb3Nlc29j
a2V0IChuZXdzb2NrKTsKICAgICAgZ290byBkb25lOwogICAgfQoKICAvKiBG
b3IgZGF0YWdyYW0gc29ja2V0cywgYmluZCB0aGUgMm5kIHNvY2tldCB0byBh
biB1bnVzZWQgYWRkcmVzcywgdG9vICovCiAgaWYgKHR5cGUgPT0gU09DS19E
R1JBTSkKICAgIHsKICAgICAgc29ja19vdXQuc2luX2ZhbWlseSA9IEFGX0lO
RVQ7CiAgICAgIHNvY2tfb3V0LnNpbl9wb3J0ID0gMDsKICAgICAgc29ja19v
dXQuc2luX2FkZHIuc19hZGRyID0gaHRvbmwgKElOQUREUl9MT09QQkFDSyk7
CiAgICAgIGlmIChiaW5kIChvdXRzb2NrLCAoc3RydWN0IHNvY2thZGRyICop
ICZzb2NrX291dCwgc2l6ZW9mIChzb2NrX291dCkpIDwgMCkKCXsKCSAgZGVi
dWdfcHJpbnRmICgiYmluZCBmYWlsZWQiKTsKCSAgc2V0X3dpbnNvY2tfZXJy
bm8gKCk7CgkgIGNsb3Nlc29ja2V0IChuZXdzb2NrKTsKCSAgY2xvc2Vzb2Nr
ZXQgKG91dHNvY2spOwoJICBnb3RvIGRvbmU7Cgl9CiAgICAgIGxlbiA9IHNp
emVvZiAoc29ja19vdXQpOwogICAgICBpZiAoZ2V0c29ja25hbWUgKG91dHNv
Y2ssIChzdHJ1Y3Qgc29ja2FkZHIgKikgJnNvY2tfb3V0LCAmbGVuKSA8IDAp
Cgl7CgkgIGRlYnVnX3ByaW50ZiAoImdldHNvY2tuYW1lIGVycm9yIik7Cgkg
IHNldF93aW5zb2NrX2Vycm5vICgpOwoJICBjbG9zZXNvY2tldCAobmV3c29j
ayk7CgkgIGNsb3Nlc29ja2V0IChvdXRzb2NrKTsKCSAgZ290byBkb25lOwoJ
fQogICAgfQoKICAvKiBGb3JjZSBJUCBhZGRyZXNzIHRvIGxvb3BiYWNrICov
CiAgc29ja19pbi5zaW5fYWRkci5zX2FkZHIgPSBodG9ubCAoSU5BRERSX0xP
T1BCQUNLKTsKICBpZiAodHlwZSA9PSBTT0NLX0RHUkFNKQogICAgc29ja19v
dXQuc2luX2FkZHIuc19hZGRyID0gaHRvbmwgKElOQUREUl9MT09QQkFDSyk7
CgogIC8qIERvIGEgY29ubmVjdCAqLwogIGlmIChjb25uZWN0IChvdXRzb2Nr
LCAoc3RydWN0IHNvY2thZGRyICopICZzb2NrX2luLCBzaXplb2YgKHNvY2tf
aW4pKSA8IDApCiAgICB7CiAgICAgIGRlYnVnX3ByaW50ZiAoImNvbm5lY3Qg
ZXJyb3IiKTsKICAgICAgc2V0X3dpbnNvY2tfZXJybm8gKCk7CiAgICAgIGNs
b3Nlc29ja2V0IChuZXdzb2NrKTsKICAgICAgY2xvc2Vzb2NrZXQgKG91dHNv
Y2spOwogICAgICBnb3RvIGRvbmU7CiAgICB9CgogIGlmICh0eXBlID09IFNP
Q0tfU1RSRUFNKQogICAgewogICAgICAvKiBGb3Igc3RyZWFtIHNvY2tldHMs
IGFjY2VwdCB0aGUgY29ubmVjdGlvbiBhbmQgY2xvc2UgdGhlIGxpc3RlbmVy
ICovCiAgICAgIGxlbiA9IHNpemVvZiAoc29ja19pbik7CiAgICAgIGluc29j
ayA9IGFjY2VwdCAobmV3c29jaywgKHN0cnVjdCBzb2NrYWRkciAqKSAmc29j
a19pbiwgJmxlbik7CiAgICAgIGlmIChpbnNvY2sgPT0gSU5WQUxJRF9TT0NL
RVQpCgl7CgkgIGRlYnVnX3ByaW50ZiAoImFjY2VwdCBlcnJvciIpOwoJICBz
ZXRfd2luc29ja19lcnJubyAoKTsKCSAgY2xvc2Vzb2NrZXQgKG5ld3NvY2sp
OwoJICBjbG9zZXNvY2tldCAob3V0c29jayk7CgkgIGdvdG8gZG9uZTsKCX0K
ICAgICAgY2xvc2Vzb2NrZXQgKG5ld3NvY2spOwogICAgfQogIGVsc2UKICAg
IHsKICAgICAgLyogRm9yIGRhdGFncmFtIHNvY2tldHMsIGNvbm5lY3QgdGhl
IDJuZCBzb2NrZXQgKi8KICAgICAgaWYgKGNvbm5lY3QgKG5ld3NvY2ssIChz
dHJ1Y3Qgc29ja2FkZHIgKikgJnNvY2tfb3V0LAoJCSAgIHNpemVvZiAoc29j
a19vdXQpKSA8IDApCgl7CgkgIGRlYnVnX3ByaW50ZiAoImNvbm5lY3QgZXJy
b3IiKTsKCSAgc2V0X3dpbnNvY2tfZXJybm8gKCk7CgkgIGNsb3Nlc29ja2V0
IChuZXdzb2NrKTsKCSAgY2xvc2Vzb2NrZXQgKG91dHNvY2spOwoJICBnb3Rv
IGRvbmU7Cgl9CiAgICAgIGluc29jayA9IG5ld3NvY2s7CiAgICB9CgogIHsK
ICAgIGN5Z2hlYXBfZmRuZXcgc2IwOwogICAgY29uc3QgZGV2aWNlICpkZXY7
CgogICAgaWYgKGZhbWlseSA9PSBBRl9JTkVUKQogICAgICBkZXYgPSAodHlw
ZSA9PSBTT0NLX1NUUkVBTSA/IHRjcF9kZXYgOiB1ZHBfZGV2KTsKICAgIGVs
c2UKICAgICAgZGV2ID0gKHR5cGUgPT0gU09DS19TVFJFQU0gPyBzdHJlYW1f
ZGV2IDogZGdyYW1fZGV2KTsKCiAgICBpZiAoc2IwID49IDAgJiYgZmRzb2Nr
IChzYjAsIGRldiwgaW5zb2NrKSkKICAgICAgewoJKChmaGFuZGxlcl9zb2Nr
ZXQgKikgc2IwKS0+c2V0X3N1bl9wYXRoICgiIik7CgkoKGZoYW5kbGVyX3Nv
Y2tldCAqKSBzYjApLT5zZXRfYWRkcl9mYW1pbHkgKGZhbWlseSk7CgkoKGZo
YW5kbGVyX3NvY2tldCAqKSBzYjApLT5zZXRfc29ja2V0X3R5cGUgKHR5cGUp
OwoJKChmaGFuZGxlcl9zb2NrZXQgKikgc2IwKS0+Y29ubmVjdF9zdGF0ZSAo
Y29ubmVjdGVkKTsKCWlmIChmYW1pbHkgPT0gQUZfTE9DQUwgJiYgdHlwZSA9
PSBTT0NLX1NUUkVBTSkKCSAgKChmaGFuZGxlcl9zb2NrZXQgKikgc2IwKS0+
YWZfbG9jYWxfc2V0X3NvY2twYWlyX2NyZWQgKCk7CgoJY3lnaGVhcF9mZG5l
dyBzYjEgKHNiMCwgZmFsc2UpOwoKCWlmIChzYjEgPj0gMCAmJiBmZHNvY2sg
KHNiMSwgZGV2LCBvdXRzb2NrKSkKCSAgewoJICAgICgoZmhhbmRsZXJfc29j
a2V0ICopIHNiMSktPnNldF9zdW5fcGF0aCAoIiIpOwoJICAgICgoZmhhbmRs
ZXJfc29ja2V0ICopIHNiMSktPnNldF9hZGRyX2ZhbWlseSAoZmFtaWx5KTsK
CSAgICAoKGZoYW5kbGVyX3NvY2tldCAqKSBzYjEpLT5zZXRfc29ja2V0X3R5
cGUgKHR5cGUpOwoJICAgICgoZmhhbmRsZXJfc29ja2V0ICopIHNiMSktPmNv
bm5lY3Rfc3RhdGUgKGNvbm5lY3RlZCk7CgkgICAgaWYgKGZhbWlseSA9PSBB
Rl9MT0NBTCAmJiB0eXBlID09IFNPQ0tfU1RSRUFNKQoJICAgICAgKChmaGFu
ZGxlcl9zb2NrZXQgKikgc2IxKS0+YWZfbG9jYWxfc2V0X3NvY2twYWlyX2Ny
ZWQgKCk7CgoJICAgIHNiWzBdID0gc2IwOwoJICAgIHNiWzFdID0gc2IxOwoJ
ICAgIHJlcyA9IDA7CgkgIH0KICAgICAgfQoKICAgIGlmIChyZXMgPT0gLTEp
CiAgICAgIHsKCWNsb3Nlc29ja2V0IChpbnNvY2spOwoJY2xvc2Vzb2NrZXQg
KG91dHNvY2spOwogICAgICB9CiAgfQoKZG9uZToKICBzeXNjYWxsX3ByaW50
ZiAoIiVkID0gc29ja2V0cGFpciAoLi4uKSIsIHJlcyk7CiAgcmV0dXJuIHJl
czsKfQoKLyogc2V0aG9zdGVudDogc3RhbmRhcmRzPyAqLwpleHRlcm4gIkMi
IHZvaWQKc2V0aG9zdGVudCAoaW50KQp7Cn0KCi8qIGVuZGhvc3RlbnQ6IHN0
YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiB2b2lkCmVuZGhvc3RlbnQgKHZvaWQp
CnsKfQoKLyogZXhwb3J0ZWQgYXMgcmVjdm1zZzogc3RhbmRhcmRzPyAqLwpl
eHRlcm4gIkMiIGludApjeWd3aW5fcmVjdm1zZyAoaW50IGZkLCBzdHJ1Y3Qg
bXNnaGRyICptc2csIGludCBmbGFncykKewogIGludCByZXM7CiAgc2lnX2Rp
c3BhdGNoX3BlbmRpbmcgKCk7CgogIGZoYW5kbGVyX3NvY2tldCAqZmggPSBn
ZXQgKGZkKTsKCiAgbXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVmYXVsdC5mYXVs
dGVkIChFRkFVTFQpIHx8ICFmaCkKICAgIHJlcyA9IC0xOwogIGVsc2UKICAg
IHsKICAgICAgcmVzID0gY2hlY2tfaW92ZWNfZm9yX3JlYWQgKG1zZy0+bXNn
X2lvdiwgbXNnLT5tc2dfaW92bGVuKTsKICAgICAgaWYgKHJlcyA+IDApCgly
ZXMgPSBmaC0+cmVjdm1zZyAobXNnLCBmbGFncyk7CiAgICB9CgogIHN5c2Nh
bGxfcHJpbnRmICgiJWQgPSByZWN2bXNnICglZCwgJXAsICV4KSIsIHJlcywg
ZmQsIG1zZywgZmxhZ3MpOwogIHJldHVybiByZXM7Cn0KCi8qIGV4cG9ydGVk
IGFzIHNlbmRtc2c6IHN0YW5kYXJkcz8gKi8KZXh0ZXJuICJDIiBpbnQKY3ln
d2luX3NlbmRtc2cgKGludCBmZCwgY29uc3Qgc3RydWN0IG1zZ2hkciAqbXNn
LCBpbnQgZmxhZ3MpCnsKICBpbnQgcmVzOwogIHNpZ19kaXNwYXRjaF9wZW5k
aW5nICgpOwoKICBmaGFuZGxlcl9zb2NrZXQgKmZoID0gZ2V0IChmZCk7Cgog
IG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1bHRlZCAoRUZBVUxU
KSB8fCAhZmgpCiAgICByZXMgPSAtMTsKICBlbHNlCiAgICB7CiAgICAgIHJl
cyA9IGNoZWNrX2lvdmVjX2Zvcl93cml0ZSAobXNnLT5tc2dfaW92LCBtc2ct
Pm1zZ19pb3ZsZW4pOwogICAgICBpZiAocmVzID49IDApCglyZXMgPSBmaC0+
c2VuZG1zZyAobXNnLCBmbGFncyk7CiAgICB9CgogIHN5c2NhbGxfcHJpbnRm
ICgiJWQgPSBzZW5kbXNnICglZCwgJXAsICV4KSIsIHJlcywgZmQsIG1zZywg
ZmxhZ3MpOwogIHJldHVybiByZXM7Cn0KCi8qIFRoaXMgaXMgZnJvbSB0aGUg
QklORCA0LjkuNCByZWxlYXNlLCBtb2RpZmllZCB0byBjb21waWxlIGJ5IGl0
c2VsZiAqLwoKLyogQ29weXJpZ2h0IChjKSAxOTk2IGJ5IEludGVybmV0IFNv
ZnR3YXJlIENvbnNvcnRpdW0uCiAqCiAqIFBlcm1pc3Npb24gdG8gdXNlLCBj
b3B5LCBtb2RpZnksIGFuZCBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9y
IGFueQogKiBwdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5
IGdyYW50ZWQsIHByb3ZpZGVkIHRoYXQgdGhlIGFib3ZlCiAqIGNvcHlyaWdo
dCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2UgYXBwZWFyIGlu
IGFsbCBjb3BpZXMuCiAqCiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAi
QVMgSVMiIEFORCBJTlRFUk5FVCBTT0ZUV0FSRSBDT05TT1JUSVVNIERJU0NM
QUlNUwogKiBBTEwgV0FSUkFOVElFUyBXSVRIIFJFR0FSRCBUTyBUSElTIFNP
RlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTCiAqIE9G
IE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hB
TEwgSU5URVJORVQgU09GVFdBUkUKICogQ09OU09SVElVTSBCRSBMSUFCTEUg
Rk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsIElORElSRUNULCBPUiBDT05TRVFV
RU5USUFMCiAqIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBS
RVNVTFRJTkcgRlJPTSBMT1NTIE9GIFVTRSwgREFUQSBPUgogKiBQUk9GSVRT
LCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5D
RSBPUiBPVEhFUiBUT1JUSU9VUwogKiBBQ1RJT04sIEFSSVNJTkcgT1VUIE9G
IE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SIFBFUkZPUk1BTkNF
IE9GIFRISVMKICogU09GVFdBUkUuCiAqLwoKI2RlZmluZQlJTjZBRERSU1oJ
MTYKI2RlZmluZQlJTkFERFJTWgkgNAojZGVmaW5lCUlOVDE2U1oJCSAyCgov
KiBpbnQKICogaW5ldF9wdG9uNChzcmMsIGRzdCkKICoJbGlrZSBpbmV0X2F0
b24oKSBidXQgd2l0aG91dCBhbGwgdGhlIGhleGFkZWNpbWFsIGFuZCBzaG9y
dGhhbmQuCiAqIHJldHVybjoKICoJMSBpZiBgc3JjJyBpcyBhIHZhbGlkIGRv
dHRlZCBxdWFkLCBlbHNlIDAuCiAqIG5vdGljZToKICoJZG9lcyBub3QgdG91
Y2ggYGRzdCcgdW5sZXNzIGl0J3MgcmV0dXJuaW5nIDEuCiAqIGF1dGhvcjoK
ICoJUGF1bCBWaXhpZSwgMTk5Ni4KICovCnN0YXRpYyBpbnQKaW5ldF9wdG9u
NCAoY29uc3QgY2hhciAqc3JjLCB1X2NoYXIgKmRzdCkKewogIHN0YXRpYyBj
b25zdCBjaGFyIGRpZ2l0c1tdID0gIjAxMjM0NTY3ODkiOwogIGludCBzYXdf
ZGlnaXQsIG9jdGV0cywgY2g7CiAgdV9jaGFyIHRtcFtJTkFERFJTWl0sICp0
cDsKCiAgc2F3X2RpZ2l0ID0gMDsKICBvY3RldHMgPSAwOwogICoodHAgPSB0
bXApID0gMDsKICB3aGlsZSAoKGNoID0gKnNyYysrKSAhPSAnXDAnKQogICAg
ewogICAgICBjb25zdCBjaGFyICpwY2g7CgogICAgICBpZiAoKHBjaCA9IHN0
cmNocihkaWdpdHMsIGNoKSkgIT0gTlVMTCkKCXsKCSAgdV9pbnQgcmV0ID0g
KnRwICogMTAgKyAocGNoIC0gZGlnaXRzKTsKCgkgIGlmIChyZXQgPiAyNTUp
CgkgICAgcmV0dXJuICgwKTsKCSAgKnRwID0gcmV0OwoJICBpZiAoISBzYXdf
ZGlnaXQpCgkgICAgewoJICAgICAgaWYgKCsrb2N0ZXRzID4gNCkKCQlyZXR1
cm4gKDApOwoJICAgICAgc2F3X2RpZ2l0ID0gMTsKCSAgICB9Cgl9CiAgICAg
IGVsc2UgaWYgKGNoID09ICcuJyAmJiBzYXdfZGlnaXQpCgl7CgkgIGlmIChv
Y3RldHMgPT0gNCkKCSAgICByZXR1cm4gKDApOwoJICAqKyt0cCA9IDA7Cgkg
IHNhd19kaWdpdCA9IDA7Cgl9CiAgICAgIGVsc2UKCXJldHVybiAoMCk7CiAg
ICB9CiAgaWYgKG9jdGV0cyA8IDQpCiAgICByZXR1cm4gKDApOwoKICBtZW1j
cHkoZHN0LCB0bXAsIElOQUREUlNaKTsKICByZXR1cm4gKDEpOwp9CgovKiBp
bnQKICogaW5ldF9wdG9uNihzcmMsIGRzdCkKICoJY29udmVydCBwcmVzZW50
YXRpb24gbGV2ZWwgYWRkcmVzcyB0byBuZXR3b3JrIG9yZGVyIGJpbmFyeSBm
b3JtLgogKiByZXR1cm46CiAqCTEgaWYgYHNyYycgaXMgYSB2YWxpZCBbUkZD
MTg4NCAyLjJdIGFkZHJlc3MsIGVsc2UgMC4KICogbm90aWNlOgogKgkoMSkg
ZG9lcyBub3QgdG91Y2ggYGRzdCcgdW5sZXNzIGl0J3MgcmV0dXJuaW5nIDEu
CiAqCSgyKSA6OiBpbiBhIGZ1bGwgYWRkcmVzcyBpcyBzaWxlbnRseSBpZ25v
cmVkLgogKiBjcmVkaXQ6CiAqCWluc3BpcmVkIGJ5IE1hcmsgQW5kcmV3cy4K
ICogYXV0aG9yOgogKglQYXVsIFZpeGllLCAxOTk2LgogKi8Kc3RhdGljIGlu
dAppbmV0X3B0b242IChjb25zdCBjaGFyICpzcmMsIHVfY2hhciAqZHN0KQp7
CiAgc3RhdGljIGNvbnN0IGNoYXIgeGRpZ2l0c19sW10gPSAiMDEyMzQ1Njc4
OWFiY2RlZiIsCgkJICAgIHhkaWdpdHNfdVtdID0gIjAxMjM0NTY3ODlBQkNE
RUYiOwogIHVfY2hhciB0bXBbSU42QUREUlNaXSwgKnRwLCAqZW5kcCwgKmNv
bG9ucDsKICBjb25zdCBjaGFyICp4ZGlnaXRzLCAqY3VydG9rOwogIGludCBj
aCwgc2F3X3hkaWdpdDsKICB1X2ludCB2YWw7CgogIG1lbXNldCgodHAgPSB0
bXApLCAwLCBJTjZBRERSU1opOwogIGVuZHAgPSB0cCArIElONkFERFJTWjsK
ICBjb2xvbnAgPSBOVUxMOwogIC8qIExlYWRpbmcgOjogcmVxdWlyZXMgc29t
ZSBzcGVjaWFsIGhhbmRsaW5nLiAqLwogIGlmICgqc3JjID09ICc6JykKICAg
IGlmICgqKytzcmMgIT0gJzonKQogICAgICByZXR1cm4gKDApOwogIGN1cnRv
ayA9IHNyYzsKICBzYXdfeGRpZ2l0ID0gMDsKICB2YWwgPSAwOwogIHdoaWxl
ICgoY2ggPSAqc3JjKyspICE9ICdcMCcpCiAgICB7CiAgICAgIGNvbnN0IGNo
YXIgKnBjaDsKCiAgICAgIGlmICgocGNoID0gc3RyY2hyKCh4ZGlnaXRzID0g
eGRpZ2l0c19sKSwgY2gpKSA9PSBOVUxMKQoJcGNoID0gc3RyY2hyKCh4ZGln
aXRzID0geGRpZ2l0c191KSwgY2gpOwogICAgICBpZiAocGNoICE9IE5VTEwp
Cgl7CgkgIHZhbCA8PD0gNDsKCSAgdmFsIHw9IChwY2ggLSB4ZGlnaXRzKTsK
CSAgaWYgKHZhbCA+IDB4ZmZmZikKCSAgICByZXR1cm4gKDApOwoJICBzYXdf
eGRpZ2l0ID0gMTsKCSAgY29udGludWU7Cgl9CiAgICAgIGlmIChjaCA9PSAn
OicpCgl7CgkgIGN1cnRvayA9IHNyYzsKCSAgaWYgKCFzYXdfeGRpZ2l0KQoJ
ICAgIHsKCSAgICAgIGlmIChjb2xvbnApCgkJcmV0dXJuICgwKTsKCSAgICAg
IGNvbG9ucCA9IHRwOwoJICAgICAgY29udGludWU7CgkgICAgfQoJICBpZiAo
dHAgKyBJTlQxNlNaID4gZW5kcCkKCSAgICByZXR1cm4gKDApOwoJICAqdHAr
KyA9ICh1X2NoYXIpICh2YWwgPj4gOCkgJiAweGZmOwoJICAqdHArKyA9ICh1
X2NoYXIpIHZhbCAmIDB4ZmY7CgkgIHNhd194ZGlnaXQgPSAwOwoJICB2YWwg
PSAwOwoJICBjb250aW51ZTsKCX0KICAgICAgaWYgKGNoID09ICcuJyAmJiAo
KHRwICsgSU5BRERSU1opIDw9IGVuZHApICYmIGluZXRfcHRvbjQoY3VydG9r
LCB0cCkgPiAwKQoJewoJICB0cCArPSBJTkFERFJTWjsKCSAgc2F3X3hkaWdp
dCA9IDA7CgkgIGJyZWFrOwkvKiAnXDAnIHdhcyBzZWVuIGJ5IGluZXRfcHRv
bjQoKS4gKi8KCX0KICAgICAgcmV0dXJuICgwKTsKICAgIH0KICBpZiAoc2F3
X3hkaWdpdCkKICAgIHsKICAgICAgaWYgKHRwICsgSU5UMTZTWiA+IGVuZHAp
CglyZXR1cm4gKDApOwogICAgICAqdHArKyA9ICh1X2NoYXIpICh2YWwgPj4g
OCkgJiAweGZmOwogICAgICAqdHArKyA9ICh1X2NoYXIpIHZhbCAmIDB4ZmY7
CiAgICB9CiAgaWYgKGNvbG9ucCAhPSBOVUxMKQogICAgewogICAgICAvKgog
ICAgICAgKiBTaW5jZSBzb21lIG1lbW1vdmUoKSdzIGVycm9uZW91c2x5IGZh
aWwgdG8gaGFuZGxlCiAgICAgICAqIG92ZXJsYXBwaW5nIHJlZ2lvbnMsIHdl
J2xsIGRvIHRoZSBzaGlmdCBieSBoYW5kLgogICAgICAgKi8KICAgICAgY29u
c3QgaW50IG4gPSB0cCAtIGNvbG9ucDsKICAgICAgaW50IGk7CgogICAgICBm
b3IgKGkgPSAxOyBpIDw9IG47IGkrKykKCXsKCSAgZW5kcFstIGldID0gY29s
b25wW24gLSBpXTsKCSAgY29sb25wW24gLSBpXSA9IDA7Cgl9CiAgICAgIHRw
ID0gZW5kcDsKICAgIH0KICBpZiAodHAgIT0gZW5kcCkKICAgIHJldHVybiAo
MCk7CgogIG1lbWNweShkc3QsIHRtcCwgSU42QUREUlNaKTsKICByZXR1cm4g
KDEpOwp9CgovKiBpbnQKICogaW5ldF9wdG9uKGFmLCBzcmMsIGRzdCkKICoJ
Y29udmVydCBmcm9tIHByZXNlbnRhdGlvbiBmb3JtYXQgKHdoaWNoIHVzdWFs
bHkgbWVhbnMgQVNDSUkgcHJpbnRhYmxlKQogKgl0byBuZXR3b3JrIGZvcm1h
dCAod2hpY2ggaXMgdXN1YWxseSBzb21lIGtpbmQgb2YgYmluYXJ5IGZvcm1h
dCkuCiAqIHJldHVybjoKICoJMSBpZiB0aGUgYWRkcmVzcyB3YXMgdmFsaWQg
Zm9yIHRoZSBzcGVjaWZpZWQgYWRkcmVzcyBmYW1pbHkKICoJMCBpZiB0aGUg
YWRkcmVzcyB3YXNuJ3QgdmFsaWQgKGBkc3QnIGlzIHVudG91Y2hlZCBpbiB0
aGlzIGNhc2UpCiAqCS0xIGlmIHNvbWUgb3RoZXIgZXJyb3Igb2NjdXJyZWQg
KGBkc3QnIGlzIHVudG91Y2hlZCBpbiB0aGlzIGNhc2UsIHRvbykKICogYXV0
aG9yOgogKglQYXVsIFZpeGllLCAxOTk2LgogKi8KZXh0ZXJuICJDIiBpbnQK
Y3lnd2luX2luZXRfcHRvbiAoaW50IGFmLCBjb25zdCBjaGFyICpzcmMsIHZv
aWQgKmRzdCkKewogIHN3aXRjaCAoYWYpCiAgICB7CiAgICBjYXNlIEFGX0lO
RVQ6CiAgICAgIHJldHVybiAoaW5ldF9wdG9uNChzcmMsICh1X2NoYXIgKikg
ZHN0KSk7CiAgICBjYXNlIEFGX0lORVQ2OgogICAgICByZXR1cm4gKGluZXRf
cHRvbjYoc3JjLCAodV9jaGFyICopIGRzdCkpOwogICAgZGVmYXVsdDoKICAg
ICAgZXJybm8gPSBFQUZOT1NVUFBPUlQ7CiAgICAgIHJldHVybiAoLTEpOwog
ICAgfQogIC8qIE5PVFJFQUNIRUQgKi8KfQoKLyogY29uc3QgY2hhciAqCiAq
IGluZXRfbnRvcDQoc3JjLCBkc3QsIHNpemUpCiAqCWZvcm1hdCBhbiBJUHY0
IGFkZHJlc3MsIG1vcmUgb3IgbGVzcyBsaWtlIGluZXRfbnRvYSgpCiAqIHJl
dHVybjoKICoJYGRzdCcgKGFzIGEgY29uc3QpCiAqIG5vdGVzOgogKgkoMSkg
dXNlcyBubyBzdGF0aWNzCiAqCSgyKSB0YWtlcyBhIHVfY2hhciogbm90IGFu
IGluX2FkZHIgYXMgaW5wdXQKICogYXV0aG9yOgogKglQYXVsIFZpeGllLCAx
OTk2LgogKi8Kc3RhdGljIGNvbnN0IGNoYXIgKgppbmV0X250b3A0IChjb25z
dCB1X2NoYXIgKnNyYywgY2hhciAqZHN0LCBzaXplX3Qgc2l6ZSkKewogIHN0
YXRpYyBjb25zdCBjaGFyIGZtdFtdID0gIiV1LiV1LiV1LiV1IjsKICBjaGFy
IHRtcFtzaXplb2YgIjI1NS4yNTUuMjU1LjI1NSJdOwoKICBfX3NtYWxsX3Nw
cmludGYodG1wLCBmbXQsIHNyY1swXSwgc3JjWzFdLCBzcmNbMl0sIHNyY1sz
XSk7CiAgaWYgKHN0cmxlbih0bXApID4gc2l6ZSkKICAgIHsKICAgICAgZXJy
bm8gPSBFTk9TUEM7CiAgICAgIHJldHVybiAoTlVMTCk7CiAgICB9CiAgc3Ry
Y3B5KGRzdCwgdG1wKTsKICByZXR1cm4gKGRzdCk7Cn0KCi8qIGNvbnN0IGNo
YXIgKgogKiBpbmV0X250b3A2KHNyYywgZHN0LCBzaXplKQogKgljb252ZXJ0
IElQdjYgYmluYXJ5IGFkZHJlc3MgaW50byBwcmVzZW50YXRpb24gKHByaW50
YWJsZSkgZm9ybWF0CiAqIGF1dGhvcjoKICoJUGF1bCBWaXhpZSwgMTk5Ni4K
ICovCnN0YXRpYyBjb25zdCBjaGFyICoKaW5ldF9udG9wNiAoY29uc3QgdV9j
aGFyICpzcmMsIGNoYXIgKmRzdCwgc2l6ZV90IHNpemUpCnsKICAvKgogICAq
IE5vdGUgdGhhdCBpbnQzMl90IGFuZCBpbnQxNl90IG5lZWQgb25seSBiZSAi
YXQgbGVhc3QiIGxhcmdlIGVub3VnaAogICAqIHRvIGNvbnRhaW4gYSB2YWx1
ZSBvZiB0aGUgc3BlY2lmaWVkIHNpemUuICBPbiBzb21lIHN5c3RlbXMsIGxp
a2UKICAgKiBDcmF5cywgdGhlcmUgaXMgbm8gc3VjaCB0aGluZyBhcyBhbiBp
bnRlZ2VyIHZhcmlhYmxlIHdpdGggMTYgYml0cy4KICAgKiBLZWVwIHRoaXMg
aW4gbWluZCBpZiB5b3UgdGhpbmsgdGhpcyBmdW5jdGlvbiBzaG91bGQgaGF2
ZSBiZWVuIGNvZGVkCiAgICogdG8gdXNlIHBvaW50ZXIgb3ZlcmxheXMuICBB
bGwgdGhlIHdvcmxkJ3Mgbm90IGEgVkFYLgogICAqLwogIGNoYXIgdG1wW3Np
emVvZiAiZmZmZjpmZmZmOmZmZmY6ZmZmZjpmZmZmOmZmZmY6MjU1LjI1NS4y
NTUuMjU1Il0sICp0cDsKICBzdHJ1Y3QgeyBpbnQgYmFzZSwgbGVuOyB9IGJl
c3QsIGN1cjsKICB1X2ludCB3b3Jkc1tJTjZBRERSU1ogLyBJTlQxNlNaXTsK
ICBpbnQgaTsKCiAgLyoKICAgKiBQcmVwcm9jZXNzOgogICAqCUNvcHkgdGhl
IGlucHV0IChieXRld2lzZSkgYXJyYXkgaW50byBhIHdvcmR3aXNlIGFycmF5
LgogICAqCUZpbmQgdGhlIGxvbmdlc3QgcnVuIG9mIDB4MDAncyBpbiBzcmNb
XSBmb3IgOjogc2hvcnRoYW5kaW5nLgogICAqLwogIG1lbXNldCh3b3Jkcywg
MCwgc2l6ZW9mIHdvcmRzKTsKICBmb3IgKGkgPSAwOyBpIDwgSU42QUREUlNa
OyBpKyspCiAgICB3b3Jkc1tpIC8gMl0gfD0gKHNyY1tpXSA8PCAoKDEgLSAo
aSAlIDIpKSA8PCAzKSk7CiAgYmVzdC5iYXNlID0gLTE7CiAgY3VyLmJhc2Ug
PSAtMTsKICBmb3IgKGkgPSAwOyBpIDwgKElONkFERFJTWiAvIElOVDE2U1op
OyBpKyspCiAgICB7CiAgICAgIGlmICh3b3Jkc1tpXSA9PSAwKQoJewoJICBp
ZiAoY3VyLmJhc2UgPT0gLTEpCgkgICAgY3VyLmJhc2UgPSBpLCBjdXIubGVu
ID0gMTsKCSAgZWxzZQoJICAgIGN1ci5sZW4rKzsKCX0KICAgICAgZWxzZQoJ
ewoJICBpZiAoY3VyLmJhc2UgIT0gLTEpCgkgICAgewoJICAgICAgaWYgKGJl
c3QuYmFzZSA9PSAtMSB8fCBjdXIubGVuID4gYmVzdC5sZW4pCgkJYmVzdCA9
IGN1cjsKCSAgICAgIGN1ci5iYXNlID0gLTE7CgkgICAgfQoJfQogICAgfQog
IGlmIChjdXIuYmFzZSAhPSAtMSkKICAgIHsKICAgICAgaWYgKGJlc3QuYmFz
ZSA9PSAtMSB8fCBjdXIubGVuID4gYmVzdC5sZW4pCgliZXN0ID0gY3VyOwog
ICAgfQogIGlmIChiZXN0LmJhc2UgIT0gLTEgJiYgYmVzdC5sZW4gPCAyKQog
ICAgYmVzdC5iYXNlID0gLTE7CgogIC8qCiAgICogRm9ybWF0IHRoZSByZXN1
bHQuCiAgICovCiAgdHAgPSB0bXA7CiAgZm9yIChpID0gMDsgaSA8IChJTjZB
RERSU1ogLyBJTlQxNlNaKTsgaSsrKQogICAgewogICAgICAvKiBBcmUgd2Ug
aW5zaWRlIHRoZSBiZXN0IHJ1biBvZiAweDAwJ3M/ICovCiAgICAgIGlmIChi
ZXN0LmJhc2UgIT0gLTEgJiYgaSA+PSBiZXN0LmJhc2UgJiYgaSA8IChiZXN0
LmJhc2UgKyBiZXN0LmxlbikpCgl7CgkgIGlmIChpID09IGJlc3QuYmFzZSkK
CSAgICAqdHArKyA9ICc6JzsKCSAgY29udGludWU7Cgl9CiAgICAgIC8qIEFy
ZSB3ZSBmb2xsb3dpbmcgYW4gaW5pdGlhbCBydW4gb2YgMHgwMHMgb3IgYW55
IHJlYWwgaGV4PyAqLwogICAgICBpZiAoaSAhPSAwKQoJKnRwKysgPSAnOic7
CiAgICAgIC8qIElzIHRoaXMgYWRkcmVzcyBhbiBlbmNhcHN1bGF0ZWQgSVB2
ND8gKi8KICAgICAgaWYgKGkgPT0gNiAmJiBiZXN0LmJhc2UgPT0gMCAmJgoJ
ICAoYmVzdC5sZW4gPT0gNiB8fCAoYmVzdC5sZW4gPT0gNSAmJiB3b3Jkc1s1
XSA9PSAweGZmZmYpKSkKCXsKCSAgaWYgKCFpbmV0X250b3A0KHNyYysxMiwg
dHAsIHNpemVvZiB0bXAgLSAodHAgLSB0bXApKSkKCSAgICByZXR1cm4gKE5V
TEwpOwoJICB0cCArPSBzdHJsZW4odHApOwoJICBicmVhazsKCX0KICAgICAg
X19zbWFsbF9zcHJpbnRmKHRwLCAiJXgiLCB3b3Jkc1tpXSk7CiAgICAgIHRw
ICs9IHN0cmxlbih0cCk7CiAgICB9CiAgLyogV2FzIGl0IGEgdHJhaWxpbmcg
cnVuIG9mIDB4MDAncz8gKi8KICBpZiAoYmVzdC5iYXNlICE9IC0xICYmIChi
ZXN0LmJhc2UgKyBiZXN0LmxlbikgPT0gKElONkFERFJTWiAvIElOVDE2U1op
KQogICAgKnRwKysgPSAnOic7CiAgKnRwKysgPSAnXDAnOwoKICAvKgogICAq
IENoZWNrIGZvciBvdmVyZmxvdywgY29weSwgYW5kIHdlJ3JlIGRvbmUuCiAg
ICovCiAgaWYgKChzaXplX3QpICh0cCAtIHRtcCkgPiBzaXplKQogICAgewog
ICAgICBlcnJubyA9IEVOT1NQQzsKICAgICAgcmV0dXJuIChOVUxMKTsKICAg
IH0KICBzdHJjcHkoZHN0LCB0bXApOwogIHJldHVybiAoZHN0KTsKfQoKLyog
Y2hhciAqCiAqIGluZXRfbnRvcChhZiwgc3JjLCBkc3QsIHNpemUpCiAqCWNv
bnZlcnQgYSBuZXR3b3JrIGZvcm1hdCBhZGRyZXNzIHRvIHByZXNlbnRhdGlv
biBmb3JtYXQuCiAqIHJldHVybjoKICoJcG9pbnRlciB0byBwcmVzZW50YXRp
b24gZm9ybWF0IGFkZHJlc3MgKGBkc3QnKSwgb3IgTlVMTCAoc2VlIGVycm5v
KS4KICogYXV0aG9yOgogKglQYXVsIFZpeGllLCAxOTk2LgogKi8KZXh0ZXJu
ICJDIiBjb25zdCBjaGFyICoKY3lnd2luX2luZXRfbnRvcCAoaW50IGFmLCBj
b25zdCB2b2lkICpzcmMsIGNoYXIgKmRzdCwgc29ja2xlbl90IHNpemUpCnsK
ICBzd2l0Y2ggKGFmKQogICAgewogICAgY2FzZSBBRl9JTkVUOgogICAgICBy
ZXR1cm4gKGluZXRfbnRvcDQoKGNvbnN0IHVfY2hhciAqKSBzcmMsIGRzdCwg
c2l6ZSkpOwogICAgY2FzZSBBRl9JTkVUNjoKICAgICAgcmV0dXJuIChpbmV0
X250b3A2KChjb25zdCB1X2NoYXIgKikgc3JjLCBkc3QsIHNpemUpKTsKICAg
IGRlZmF1bHQ6CiAgICAgIGVycm5vID0gRUFGTk9TVVBQT1JUOwogICAgICBy
ZXR1cm4gKE5VTEwpOwogICAgfQogIC8qIE5PVFJFQUNIRUQgKi8KfQoKLyog
Vy4gUmljaGFyZCBTVEVWRU5TIGxpYmdhaSBpbXBsZW1lbnRhdGlvbiwgc2xp
Z2h0bHkgdHdlYWtlZCBmb3IgaW5jbHVzaW9uCiAgIGludG8gQ3lnd2luIGFz
IHB1cmUgSVB2NCByZXBsYWNlbWVudC4gIFBsZWFzZSBub3RlIHRoYXQgdGhl
IGNvZGUgaXMKICAga2VwdCBpbnRhY3QgYXMgbXVjaCBhcyBwb3NzaWJsZS4g
IEVzcGVjaWFsbHkgdGhlIElQdjYgYW5kIEFGX1VOSVggY29kZQogICBpcyBr
ZXB0IGluLCBldmVuIHRob3VnaCB3ZSBjYW4gc3VwcG9ydCBuZWl0aGVyIG9m
IHRoZW0uICBQbGVhc2UgZG9uJ3QKICAgYWN0aXZhdGUgdGhlbSwgdGhleSB3
b24ndCB3b3JrIGNvcnJlY3RseS4gKi8KCiNkZWZpbmUgSVB2NAojdW5kZWYg
SVB2NgojdW5kZWYgVU5JWGRvbWFpbgoKI3VuZGVmIEhBVkVfU09DS0FERFJf
U0FfTEVOCiNkZWZpbmUgZ2V0aG9zdGJ5bmFtZTIoaG9zdCxmYW1pbHkpIGN5
Z3dpbl9nZXRob3N0YnluYW1lKChob3N0KSkKCiNkZWZpbmUgQUlfQ0xPTkUg
MHg4MDAwCQkvKiBBdm9pZCBjb2xsaXNpb24gd2l0aCBBSV8gdmFsdWVzIGlu
IG5ldGRiLmggKi8KCi8qCiAqIENyZWF0ZSBhbmQgZmlsbCBpbiBhbiBhZGRy
aW5mb3t9LgogKi8KCi8qIGluY2x1ZGUgZ2FfYWlzdHJ1Y3QxICovCnN0YXRp
YyBpbnQKZ2FfYWlzdHJ1Y3QgKHN0cnVjdCBhZGRyaW5mbyAqKipwYWlwbmV4
dCwgY29uc3Qgc3RydWN0IGFkZHJpbmZvICpoaW50c3AsCgkgICAgIGNvbnN0
IHZvaWQgKmFkZHIsIGludCBmYW1pbHkpCnsKICBzdHJ1Y3QgYWRkcmluZm8g
KmFpOwoKICBpZiAoKGFpID0gKHN0cnVjdCBhZGRyaW5mbyAqKSBjYWxsb2Mg
KDEsIHNpemVvZiAoc3RydWN0IGFkZHJpbmZvKSkpID09IE5VTEwpCiAgICBy
ZXR1cm4gKEVBSV9NRU1PUlkpOwogIGFpLT5haV9uZXh0ID0gTlVMTDsKICBh
aS0+YWlfY2Fub25uYW1lID0gTlVMTDsKICAqKnBhaXBuZXh0ID0gYWk7CiAg
KnBhaXBuZXh0ID0gJmFpLT5haV9uZXh0OwoKICBpZiAoKGFpLT5haV9zb2Nr
dHlwZSA9IGhpbnRzcC0+YWlfc29ja3R5cGUpID09IDApCiAgICBhaS0+YWlf
ZmxhZ3MgfD0gQUlfQ0xPTkU7CgogIGFpLT5haV9wcm90b2NvbCA9IGhpbnRz
cC0+YWlfcHJvdG9jb2w7Ci8qIGVuZCBnYV9haXN0cnVjdDEgKi8KCi8qIGlu
Y2x1ZGUgZ2FfYWlzdHJ1Y3QyICovCiAgc3dpdGNoICgoYWktPmFpX2ZhbWls
eSA9IGZhbWlseSkpCiAgICB7CiNpZmRlZglJUHY0CiAgICBjYXNlIEFGX0lO
RVQ6CiAgICAgIHsKCXN0cnVjdCBzb2NrYWRkcl9pbiAqc2lucHRyOwoKCS8q
IDRhbGxvY2F0ZSBzb2NrYWRkcl9pbnt9IGFuZCBmaWxsIGluIGFsbCBidXQg
cG9ydCAqLwoJaWYgKChzaW5wdHIgPSAoc3RydWN0IHNvY2thZGRyX2luICop
CgkJICAgICAgY2FsbG9jICgxLCBzaXplb2YgKHN0cnVjdCBzb2NrYWRkcl9p
bikpKSA9PSBOVUxMKQoJICByZXR1cm4gKEVBSV9NRU1PUlkpOwojaWZkZWYJ
SEFWRV9TT0NLQUREUl9TQV9MRU4KCXNpbnB0ci0+c2luX2xlbiA9IHNpemVv
ZiAoc3RydWN0IHNvY2thZGRyX2luKTsKI2VuZGlmCglzaW5wdHItPnNpbl9m
YW1pbHkgPSBBRl9JTkVUOwoJbWVtY3B5ICgmc2lucHRyLT5zaW5fYWRkciwg
YWRkciwgc2l6ZW9mIChzdHJ1Y3QgaW5fYWRkcikpOwoJYWktPmFpX2FkZHIg
PSAoc3RydWN0IHNvY2thZGRyICopIHNpbnB0cjsKCWFpLT5haV9hZGRybGVu
ID0gc2l6ZW9mIChzdHJ1Y3Qgc29ja2FkZHJfaW4pOwoJYnJlYWs7CiAgICAg
IH0KI2VuZGlmIC8qIElQVjQgKi8KI2lmZGVmCUlQdjYKICAgIGNhc2UgQUZf
SU5FVDY6CiAgICAgIHsKCXN0cnVjdCBzb2NrYWRkcl9pbjYgKnNpbjZwdHI7
CgoJLyogNGFsbG9jYXRlIHNvY2thZGRyX2luNnt9IGFuZCBmaWxsIGluIGFs
bCBidXQgcG9ydCAqLwoJaWYgKChzaW42cHRyID0gY2FsbG9jICgxLCBzaXpl
b2YgKHN0cnVjdCBzb2NrYWRkcl9pbjYpKSkgPT0gTlVMTCkKCSAgcmV0dXJu
IChFQUlfTUVNT1JZKTsKI2lmZGVmCUhBVkVfU09DS0FERFJfU0FfTEVOCglz
aW42cHRyLT5zaW42X2xlbiA9IHNpemVvZiAoc3RydWN0IHNvY2thZGRyX2lu
Nik7CiNlbmRpZgoJc2luNnB0ci0+c2luNl9mYW1pbHkgPSBBRl9JTkVUNjsK
CW1lbWNweSAoJnNpbjZwdHItPnNpbjZfYWRkciwgYWRkciwgc2l6ZW9mIChz
dHJ1Y3QgaW42X2FkZHIpKTsKCWFpLT5haV9hZGRyID0gKHN0cnVjdCBzb2Nr
YWRkciAqKSBzaW42cHRyOwoJYWktPmFpX2FkZHJsZW4gPSBzaXplb2YgKHN0
cnVjdCBzb2NrYWRkcl9pbjYpOwoJYnJlYWs7CiAgICAgIH0KI2VuZGlmIC8q
IElQVjYgKi8KI2lmZGVmCVVOSVhkb21haW4KICAgIGNhc2UgQUZfTE9DQUw6
CiAgICAgIHsKCXN0cnVjdCBzb2NrYWRkcl91biAqdW5wOwoKCS8qIDRhbGxv
Y2F0ZSBzb2NrYWRkcl91bnt9IGFuZCBmaWxsIGluICovCi8qICpJTkRFTlQt
T0ZGKiAqLwoJCQlpZiAoc3RybGVuKGFkZHIpID49IHNpemVvZih1bnAtPnN1
bl9wYXRoKSkKCQkJCXJldHVybihFQUlfU0VSVklDRSk7CgkJCWlmICggKHVu
cCA9IGNhbGxvYygxLCBzaXplb2Yoc3RydWN0IHNvY2thZGRyX3VuKSkpID09
IE5VTEwpCgkJCQlyZXR1cm4oRUFJX01FTU9SWSk7Ci8qICpJTkRFTlQtT04q
ICovCgl1bnAtPnN1bl9mYW1pbHkgPSBBRl9MT0NBTDsKCXN0cmNweSAodW5w
LT5zdW5fcGF0aCwgYWRkcik7CiNpZmRlZglIQVZFX1NPQ0tBRERSX1NBX0xF
TgoJdW5wLT5zdW5fbGVuID0gU1VOX0xFTiAodW5wKTsKI2VuZGlmCglhaS0+
YWlfYWRkciA9IChzdHJ1Y3Qgc29ja2FkZHIgKikgdW5wOwoJYWktPmFpX2Fk
ZHJsZW4gPSBzaXplb2YgKHN0cnVjdCBzb2NrYWRkcl91bik7CglpZiAoaGlu
dHNwLT5haV9mbGFncyAmIEFJX1BBU1NJVkUpCgkgIHVubGluayAodW5wLT5z
dW5fcGF0aCk7CS8qIE9LIGlmIHRoaXMgZmFpbHMgKi8KCWJyZWFrOwogICAg
ICB9CiNlbmRpZiAvKiBVTklYRE9NQUlOICovCiAgICB9CiAgcmV0dXJuICgw
KTsKfQoKLyogZW5kIGdhX2Fpc3RydWN0MiAqLwoKLyoKICogQ2xvbmUgYSBu
ZXcgYWRkcmluZm8gc3RydWN0dXJlIGZyb20gYW4gZXhpc3Rpbmcgb25lLgog
Ki8KCi8qIGluY2x1ZGUgZ2FfY2xvbmUgKi8KCi8qIEN5Z3dpbiBzcGVjaWZp
YzogVGhlIGdhX2Nsb25lIGZ1bmN0aW9uIGlzIHNwbGl0IHVwIHRvIGFsbG93
IGFuIGVhc3kKICAgZHVwbGljYXRpb24gb2YgYWRkcmluZm8gc3RydWN0cy4g
IFRoaXMgaXMgdXNlZCB0byBkdXBsaWNhdGUgdGhlCiAgIHN0cnVjdHVyZXMg
ZnJvbSBXaW5zb2NrLCBzbyB0aGF0IHdlIGhhdmUgdGhlIGFsbG9jYXRpb24g
b2YgdGhlIHN0cnVjdHMKICAgcmV0dXJuZWQgdG8gdGhlIGFwcGxpY2F0aW9u
IHVuZGVyIGNvbnRyb2wuICBUaGlzIGlzIGVzcGVjaWFsbHkgaGVscGZ1bAog
ICBmb3IgdGhlIEFJX1Y0TUFQUEVEIGNhc2UgcHJpb3IgdG8gVmlzdGEuICov
CnN0YXRpYyBzdHJ1Y3QgYWRkcmluZm8gKgpnYV9kdXAgKHN0cnVjdCBhZGRy
aW5mbyAqYWksIGJvb2wgdjRtYXBwZWQpCnsKICBzdHJ1Y3QgYWRkcmluZm8g
Km5haTsKCiAgaWYgKChuYWkgPSAoc3RydWN0IGFkZHJpbmZvICopIGNhbGxv
YyAoMSwgc2l6ZW9mIChzdHJ1Y3QgYWRkcmluZm8pKSkgPT0gTlVMTCkKICAg
IHJldHVybiAoTlVMTCk7CgogIG5haS0+YWlfZmxhZ3MgPSAwOwkJLyogbWFr
ZSBzdXJlIEFJX0NMT05FIGlzIG9mZiAqLwogIG5haS0+YWlfZmFtaWx5ID0g
djRtYXBwZWQgPyBBRl9JTkVUNiA6IGFpLT5haV9mYW1pbHk7CiAgbmFpLT5h
aV9zb2NrdHlwZSA9IGFpLT5haV9zb2NrdHlwZTsKICBuYWktPmFpX3Byb3Rv
Y29sID0gYWktPmFpX3Byb3RvY29sOwogIG5haS0+YWlfY2Fub25uYW1lID0g
TlVMTDsKICBpZiAoIShhaS0+YWlfZmxhZ3MgJiBBSV9DTE9ORSkgJiYgYWkt
PmFpX2Nhbm9ubmFtZQogICAgICAmJiAhKG5haS0+YWlfY2Fub25uYW1lID0g
c3RyZHVwIChhaS0+YWlfY2Fub25uYW1lKSkpCiAgICB7CiAgICAgIGZyZWUg
KG5haSk7CiAgICAgIHJldHVybiBOVUxMOwogICAgfQogIG5haS0+YWlfYWRk
cmxlbiA9IHY0bWFwcGVkID8gc2l6ZW9mIChzdHJ1Y3Qgc29ja2FkZHJfaW42
KSA6IGFpLT5haV9hZGRybGVuOwogIGlmICgobmFpLT5haV9hZGRyID0gKHN0
cnVjdCBzb2NrYWRkciAqKSBtYWxsb2MgKHY0bWFwcGVkCgkJCQkJCSAgPyBz
aXplb2YgKHN0cnVjdCBzb2NrYWRkcl9pbjYpCgkJCQkJCSAgOiBhaS0+YWlf
YWRkcmxlbikpID09IE5VTEwpCiAgICB7CiAgICAgIGlmIChuYWktPmFpX2Nh
bm9ubmFtZSkKCWZyZWUgKG5haS0+YWlfY2Fub25uYW1lKTsKICAgICAgZnJl
ZSAobmFpKTsKICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgaWYgKHY0bWFw
cGVkKQogICAgewogICAgICBzdHJ1Y3Qgc29ja2FkZHJfaW42ICppbiA9IChz
dHJ1Y3Qgc29ja2FkZHJfaW42ICopIG5haS0+YWlfYWRkcjsKICAgICAgaW4t
PnNpbjZfZmFtaWx5ID0gQUZfSU5FVDY7CiAgICAgIGluLT5zaW42X3BvcnQg
PSAoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSBhaS0+YWlfYWRkciktPnNpbl9w
b3J0OwogICAgICBpbi0+c2luNl9mbG93aW5mbyA9IDA7CiAgICAgIGluLT5z
aW42X2FkZHIuczZfYWRkcjMyWzBdID0gMDsKICAgICAgaW4tPnNpbjZfYWRk
ci5zNl9hZGRyMzJbMV0gPSAwOwogICAgICBpbi0+c2luNl9hZGRyLnM2X2Fk
ZHIzMlsyXSA9IGh0b25sICgweGZmZmYpOwogICAgICBpbi0+c2luNl9hZGRy
LnM2X2FkZHIzMlszXSA9ICgoc3RydWN0IHNvY2thZGRyX2luICopIGFpLT5h
aV9hZGRyKS0+c2luX2FkZHIuc19hZGRyOwogICAgICBpbi0+c2luNl9zY29w
ZV9pZCA9IDA7CiAgICB9CiAgZWxzZQogICAgbWVtY3B5IChuYWktPmFpX2Fk
ZHIsIGFpLT5haV9hZGRyLCBhaS0+YWlfYWRkcmxlbik7CgogIHJldHVybiBu
YWk7Cn0KCnN0YXRpYyBzdHJ1Y3QgYWRkcmluZm8gKgpnYV9jbG9uZSAoc3Ry
dWN0IGFkZHJpbmZvICphaSkKewogIHN0cnVjdCBhZGRyaW5mbyAqbmFpOwoK
ICBpZiAoKG5haSA9IGdhX2R1cCAoYWksIGZhbHNlKSkpCiAgICB7CiAgICAg
IG5haS0+YWlfbmV4dCA9IGFpLT5haV9uZXh0OwogICAgICBhaS0+YWlfbmV4
dCA9IG5haTsKICAgIH0KICByZXR1cm4gbmFpOwp9CgpzdGF0aWMgc3RydWN0
IGFkZHJpbmZvICoKZ2FfZHVwbGlzdCAoc3RydWN0IGFkZHJpbmZvICphaSwg
Ym9vbCB2NG1hcHBlZCkKewogIHZvaWQgaXB2NF9mcmVlYWRkcmluZm8gKHN0
cnVjdCBhZGRyaW5mbyAqYWloZWFkKTsKICBzdHJ1Y3QgYWRkcmluZm8gKnRt
cCwgKm5haSA9IE5VTEwsICpuYWkwID0gTlVMTDsKCiAgZm9yICg7IGFpOyBh
aSA9IGFpLT5haV9uZXh0LCBuYWkgPSB0bXApCiAgICB7CiAgICAgIGlmICgh
KHRtcCA9IGdhX2R1cCAoYWksIHY0bWFwcGVkKSkpCglnb3RvIGJhZDsKICAg
ICAgaWYgKCFuYWkwKQoJbmFpMCA9IHRtcDsKICAgICAgaWYgKG5haSkKCW5h
aS0+YWlfbmV4dCA9IHRtcDsKICAgIH0KICByZXR1cm4gbmFpMDsKCmJhZDoK
ICBpcHY0X2ZyZWVhZGRyaW5mbyAobmFpMCk7CiAgcmV0dXJuIE5VTEw7Cn0K
Ci8qIGVuZCBnYV9jbG9uZSAqLwoKLyoKICogQmFzaWMgZXJyb3IgY2hlY2tp
bmcgb2YgZmxhZ3MsIGZhbWlseSwgc29ja2V0IHR5cGUsIGFuZCBwcm90b2Nv
bC4KICovCgovKiBpbmNsdWRlIGdhX2VjaGVjayAqLwpzdGF0aWMgaW50Cmdh
X2VjaGVjayAoY29uc3QgY2hhciAqaG9zdG5hbWUsIGNvbnN0IGNoYXIgKnNl
cnZuYW1lLAoJICAgaW50IGZsYWdzLCBpbnQgZmFtaWx5LCBpbnQgc29ja3R5
cGUsIGludCBwcm90b2NvbCkKewojaWYgMAogIGlmIChmbGFncyAmIH4oQUlf
UEFTU0lWRSB8IEFJX0NBTk9OTkFNRSkpCiAgICByZXR1cm4gKEVBSV9CQURG
TEFHUyk7CS8qIHVua25vd24gZmxhZyBiaXRzICovCiNlbmRpZgogIGlmICho
b3N0bmFtZSA9PSBOVUxMIHx8IGhvc3RuYW1lWzBdID09ICdcMCcpCiAgICB7
CiAgICAgIGlmIChzZXJ2bmFtZSA9PSBOVUxMIHx8IHNlcnZuYW1lWzBdID09
ICdcMCcpCglyZXR1cm4gKEVBSV9OT05BTUUpOwkvKiBob3N0IG9yIHNlcnZp
Y2UgbXVzdCBiZSBzcGVjaWZpZWQgKi8KICAgIH0KCiAgc3dpdGNoIChmYW1p
bHkpCiAgICB7CiAgICBjYXNlIEFGX1VOU1BFQzoKICAgICAgYnJlYWs7CiNp
ZmRlZglJUHY0CiAgICBjYXNlIEFGX0lORVQ6CiAgICAgIGlmIChzb2NrdHlw
ZSAhPSAwICYmCgkgIChzb2NrdHlwZSAhPSBTT0NLX1NUUkVBTSAmJgoJICAg
c29ja3R5cGUgIT0gU09DS19ER1JBTSAmJiBzb2NrdHlwZSAhPSBTT0NLX1JB
VykpCglyZXR1cm4gKEVBSV9TT0NLVFlQRSk7CS8qIGludmFsaWQgc29ja2V0
IHR5cGUgKi8KICAgICAgYnJlYWs7CiNlbmRpZgojaWZkZWYJSVB2NgogICAg
Y2FzZSBBRl9JTkVUNjoKICAgICAgaWYgKHNvY2t0eXBlICE9IDAgJiYKCSAg
KHNvY2t0eXBlICE9IFNPQ0tfU1RSRUFNICYmCgkgICBzb2NrdHlwZSAhPSBT
T0NLX0RHUkFNICYmIHNvY2t0eXBlICE9IFNPQ0tfUkFXKSkKCXJldHVybiAo
RUFJX1NPQ0tUWVBFKTsJLyogaW52YWxpZCBzb2NrZXQgdHlwZSAqLwogICAg
ICBicmVhazsKI2VuZGlmCiNpZmRlZglVTklYZG9tYWluCiAgICBjYXNlIEFG
X0xPQ0FMOgogICAgICBpZiAoc29ja3R5cGUgIT0gMCAmJgoJICAoc29ja3R5
cGUgIT0gU09DS19TVFJFQU0gJiYgc29ja3R5cGUgIT0gU09DS19ER1JBTSkp
CglyZXR1cm4gKEVBSV9TT0NLVFlQRSk7CS8qIGludmFsaWQgc29ja2V0IHR5
cGUgKi8KICAgICAgYnJlYWs7CiNlbmRpZgogICAgZGVmYXVsdDoKICAgICAg
cmV0dXJuIChFQUlfRkFNSUxZKTsJLyogdW5rbm93biBwcm90b2NvbCBmYW1p
bHkgKi8KICAgIH0KICByZXR1cm4gKDApOwp9CgovKiBlbmQgZ2FfZWNoZWNr
ICovCgpzdHJ1Y3Qgc2VhcmNoIHsKICBjb25zdCBjaGFyICpob3N0OyAgLyog
aG9zdG5hbWUgb3IgYWRkcmVzcyBzdHJpbmcgKi8KICBpbnQgICAgICAgIGZh
bWlseTsgLyogQUZfeHh4ICovCn07CgovKgogKiBTZXQgdXAgdGhlIHNlYXJj
aFtdIGFycmF5IHdpdGggdGhlIGhvc3RuYW1lcyBhbmQgYWRkcmVzcyBmYW1p
bGllcwogKiB0aGF0IHdlIGFyZSB0byBsb29rIHVwLgogKi8KCi8qIGluY2x1
ZGUgZ2FfbnNlYXJjaDEgKi8Kc3RhdGljIGludApnYV9uc2VhcmNoIChjb25z
dCBjaGFyICpob3N0bmFtZSwgY29uc3Qgc3RydWN0IGFkZHJpbmZvICpoaW50
c3AsCgkgICAgc3RydWN0IHNlYXJjaCAqc2VhcmNoKQp7CiAgaW50IG5zZWFy
Y2ggPSAwOwoKICBpZiAoaG9zdG5hbWUgPT0gTlVMTCB8fCBob3N0bmFtZVsw
XSA9PSAnXDAnKQogICAgewogICAgICBpZiAoaGludHNwLT5haV9mbGFncyAm
IEFJX1BBU1NJVkUpCgl7CgkgIC8qIDRubyBob3N0bmFtZSBhbmQgQUlfUEFT
U0lWRTogaW1wbGllcyB3aWxkY2FyZCBiaW5kICovCgkgIHN3aXRjaCAoaGlu
dHNwLT5haV9mYW1pbHkpCgkgICAgewojaWZkZWYJSVB2NAoJICAgIGNhc2Ug
QUZfSU5FVDoKCSAgICAgIHNlYXJjaFtuc2VhcmNoXS5ob3N0ID0gIjAuMC4w
LjAiOwoJICAgICAgc2VhcmNoW25zZWFyY2hdLmZhbWlseSA9IEFGX0lORVQ7
CgkgICAgICBuc2VhcmNoKys7CgkgICAgICBicmVhazsKI2VuZGlmCiNpZmRl
ZglJUHY2CgkgICAgY2FzZSBBRl9JTkVUNjoKCSAgICAgIHNlYXJjaFtuc2Vh
cmNoXS5ob3N0ID0gIjA6OjAiOwoJICAgICAgc2VhcmNoW25zZWFyY2hdLmZh
bWlseSA9IEFGX0lORVQ2OwoJICAgICAgbnNlYXJjaCsrOwoJICAgICAgYnJl
YWs7CiNlbmRpZgoJICAgIGNhc2UgQUZfVU5TUEVDOgojaWZkZWYJSVB2NgoJ
ICAgICAgc2VhcmNoW25zZWFyY2hdLmhvc3QgPSAiMDo6MCI7CS8qIElQdjYg
Zmlyc3QsIHRoZW4gSVB2NCAqLwoJICAgICAgc2VhcmNoW25zZWFyY2hdLmZh
bWlseSA9IEFGX0lORVQ2OwoJICAgICAgbnNlYXJjaCsrOwojZW5kaWYKI2lm
ZGVmCUlQdjQKCSAgICAgIHNlYXJjaFtuc2VhcmNoXS5ob3N0ID0gIjAuMC4w
LjAiOwoJICAgICAgc2VhcmNoW25zZWFyY2hdLmZhbWlseSA9IEFGX0lORVQ7
CgkgICAgICBuc2VhcmNoKys7CiNlbmRpZgoJICAgICAgYnJlYWs7CgkgICAg
fQovKiBlbmQgZ2FfbnNlYXJjaDEgKi8KLyogaW5jbHVkZSBnYV9uc2VhcmNo
MiAqLwoJfQogICAgICBlbHNlCgl7CgkgIC8qIDRubyBob3N0IGFuZCBub3Qg
QUlfUEFTU0lWRTogY29ubmVjdCB0byBsb2NhbCBob3N0ICovCgkgIHN3aXRj
aCAoaGludHNwLT5haV9mYW1pbHkpCgkgICAgewojaWZkZWYJSVB2NAoJICAg
IGNhc2UgQUZfSU5FVDoKCSAgICAgIHNlYXJjaFtuc2VhcmNoXS5ob3N0ID0g
ImxvY2FsaG9zdCI7CS8qIDEyNy4wLjAuMSAqLwoJICAgICAgc2VhcmNoW25z
ZWFyY2hdLmZhbWlseSA9IEFGX0lORVQ7CgkgICAgICBuc2VhcmNoKys7Cgkg
ICAgICBicmVhazsKI2VuZGlmCiNpZmRlZglJUHY2CgkgICAgY2FzZSBBRl9J
TkVUNjoKCSAgICAgIHNlYXJjaFtuc2VhcmNoXS5ob3N0ID0gIjA6OjEiOwoJ
ICAgICAgc2VhcmNoW25zZWFyY2hdLmZhbWlseSA9IEFGX0lORVQ2OwoJICAg
ICAgbnNlYXJjaCsrOwoJICAgICAgYnJlYWs7CiNlbmRpZgoJICAgIGNhc2Ug
QUZfVU5TUEVDOgojaWZkZWYJSVB2NgoJICAgICAgc2VhcmNoW25zZWFyY2hd
Lmhvc3QgPSAiMDo6MSI7CS8qIElQdjYgZmlyc3QsIHRoZW4gSVB2NCAqLwoJ
ICAgICAgc2VhcmNoW25zZWFyY2hdLmZhbWlseSA9IEFGX0lORVQ2OwoJICAg
ICAgbnNlYXJjaCsrOwojZW5kaWYKI2lmZGVmCUlQdjQKCSAgICAgIHNlYXJj
aFtuc2VhcmNoXS5ob3N0ID0gImxvY2FsaG9zdCI7CgkgICAgICBzZWFyY2hb
bnNlYXJjaF0uZmFtaWx5ID0gQUZfSU5FVDsKCSAgICAgIG5zZWFyY2grKzsK
I2VuZGlmCgkgICAgICBicmVhazsKCSAgICB9Cgl9Ci8qIGVuZCBnYV9uc2Vh
cmNoMiAqLwovKiBpbmNsdWRlIGdhX25zZWFyY2gzICovCiAgICB9CiAgZWxz
ZQogICAgewkJCQkvKiBob3N0IGlzIHNwZWNpZmllZCAqLwogICAgICBzd2l0
Y2ggKGhpbnRzcC0+YWlfZmFtaWx5KQoJewojaWZkZWYJSVB2NAoJY2FzZSBB
Rl9JTkVUOgoJICBzZWFyY2hbbnNlYXJjaF0uaG9zdCA9IGhvc3RuYW1lOwoJ
ICBzZWFyY2hbbnNlYXJjaF0uZmFtaWx5ID0gQUZfSU5FVDsKCSAgbnNlYXJj
aCsrOwoJICBicmVhazsKI2VuZGlmCiNpZmRlZglJUHY2CgljYXNlIEFGX0lO
RVQ2OgoJICBzZWFyY2hbbnNlYXJjaF0uaG9zdCA9IGhvc3RuYW1lOwoJICBz
ZWFyY2hbbnNlYXJjaF0uZmFtaWx5ID0gQUZfSU5FVDY7CgkgIG5zZWFyY2gr
KzsKCSAgYnJlYWs7CiNlbmRpZgoJY2FzZSBBRl9VTlNQRUM6CiNpZmRlZglJ
UHY2CgkgIHNlYXJjaFtuc2VhcmNoXS5ob3N0ID0gaG9zdG5hbWU7CgkgIHNl
YXJjaFtuc2VhcmNoXS5mYW1pbHkgPSBBRl9JTkVUNjsJLyogSVB2NiBmaXJz
dCAqLwoJICBuc2VhcmNoKys7CiNlbmRpZgojaWZkZWYJSVB2NAoJICBzZWFy
Y2hbbnNlYXJjaF0uaG9zdCA9IGhvc3RuYW1lOwoJICBzZWFyY2hbbnNlYXJj
aF0uZmFtaWx5ID0gQUZfSU5FVDsJLyogdGhlbiBJUHY0ICovCgkgIG5zZWFy
Y2grKzsKI2VuZGlmCgkgIGJyZWFrOwoJfQogICAgfQogIGlmIChuc2VhcmNo
IDwgMSB8fCBuc2VhcmNoID4gMikKICAgIHJldHVybiAtMTsKICByZXR1cm4g
KG5zZWFyY2gpOwp9CgovKiBlbmQgZ2FfbnNlYXJjaDMgKi8KCi8qCiAqIEdv
IHRocm91Z2ggYWxsIHRoZSBhZGRyaW5mbyBzdHJ1Y3R1cmVzLCBjaGVja2lu
ZyBmb3IgYSBtYXRjaCBvZiB0aGUKICogc29ja2V0IHR5cGUgYW5kIGZpbGxp
bmcgaW4gdGhlIHNvY2tldCB0eXBlLCBhbmQgdGhlbiB0aGUgcG9ydCBudW1i
ZXIKICogaW4gdGhlIGNvcnJlc3BvbmRpbmcgc29ja2V0IGFkZHJlc3Mgc3Ry
dWN0dXJlcy4KICoKICogVGhlIEFJX0NMT05FIGZsYWcgd29ya3MgYXMgZm9s
bG93cy4gIENvbnNpZGVyIGEgbXVsdGlob21lZCBob3N0IHdpdGgKICogdHdv
IElQIGFkZHJlc3NlcyBhbmQgbm8gc29ja2V0IHR5cGUgc3BlY2lmaWVkIGJ5
IHRoZSBjYWxsZXIuICBBZnRlcgogKiB0aGUgImhvc3QiIHNlYXJjaCB0aGVy
ZSBhcmUgdHdvIGFkZHJpbmZvIHN0cnVjdHVyZXMsIG9uZSBwZXIgSVAgYWRk
cmVzcy4KICogQXNzdW1pbmcgYSBzZXJ2aWNlIHN1cHBvcnRlZCBieSBib3Ro
IFRDUCBhbmQgVURQIChzYXkgdGhlIGRheXRpbWUKICogc2VydmljZSkgd2Ug
bmVlZCB0byByZXR1cm4gKmZvdXIqIGFkZHJpbmZvIHN0cnVjdHVyZXM6CiAq
CQlJUCMxLCBTT0NLX1NUUkVBTSwgVENQIHBvcnQsCiAqCQlJUCMxLCBTT0NL
X0RHUkFNLCBVRFAgcG9ydCwKICoJCUlQIzIsIFNPQ0tfU1RSRUFNLCBUQ1Ag
cG9ydCwKICoJCUlQIzIsIFNPQ0tfREdSQU0sIFVEUCBwb3J0LgogKiBUbyBk
byB0aGlzLCB3aGVuIHRoZSAiaG9zdCIgbG9vcCBjcmVhdGVzIGFuIGFkZHJp
bmZvIHN0cnVjdHVyZSwgaWYgdGhlCiAqIGNhbGxlciBoYXMgbm90IHNwZWNp
ZmllZCBhIHNvY2tldCB0eXBlIChoaW50c3AtPmFpX3NvY2t0eXBlID09IDAp
LCB0aGUKICogQUlfQ0xPTkUgZmxhZyBpcyBzZXQuICBXaGVuIHRoZSBmb2xs
b3dpbmcgZnVuY3Rpb24gZmluZHMgYW4gZW50cnkgbGlrZQogKiB0aGlzIGl0
IGlzIGhhbmRsZWQgYXMgZm9sbG93czogSWYgdGhlIGVudHJ5J3MgYWlfc29j
a3R5cGUgaXMgc3RpbGwgMCwKICogdGhpcyBpcyB0aGUgZmlyc3QgdXNlIG9m
IHRoZSBzdHJ1Y3R1cmUsIGFuZCB0aGUgYWlfc29ja3R5cGUgZmllbGQgaXMg
c2V0LgogKiBCdXQsIGlmIHRoZSBlbnRyeSdzIGFpX3NvY2t0eXBlIGlzIG5v
bnplcm8sIHRoZW4gd2UgY2xvbmUgYSBuZXcgYWRkcmluZm8KICogc3RydWN0
dXJlIGFuZCBzZXQgaXQncyBhaV9zb2NrdHlwZSB0byB0aGUgbmV3IHZhbHVl
LiAgQWx0aG91Z2ggd2Ugb25seQogKiBuZWVkIHR3byBzb2NrZXQgdHlwZXMg
dG9kYXkgKFNPQ0tfU1RSRUFNIGFuZCBTT0NLX0RHUkFNKSB0aGlzIGFsZ29y
aXRobQogKiB3aWxsIGhhbmRsZSBhbnkgbnVtYmVyLiAgQWxzbyBub3RpY2Ug
dGhhdCBQb3NpeC4xZyByZXF1aXJlcyBhbGwgc29ja2V0CiAqIHR5cGVzIHRv
IGJlIG5vbnplcm8uCiAqLwoKLyogaW5jbHVkZSBnYV9wb3J0ICovCnN0YXRp
YyBpbnQKZ2FfcG9ydCAoc3RydWN0IGFkZHJpbmZvICphaWhlYWQsIGludCBw
b3J0LCBpbnQgc29ja3R5cGUpCgkJLyogcG9ydCBtdXN0IGJlIGluIG5ldHdv
cmsgYnl0ZSBvcmRlciAqLwp7CiAgaW50IG5mb3VuZCA9IDA7CiAgc3RydWN0
IGFkZHJpbmZvICphaTsKCiAgZm9yIChhaSA9IGFpaGVhZDsgYWkgIT0gTlVM
TDsgYWkgPSBhaS0+YWlfbmV4dCkKICAgIHsKICAgICAgaWYgKGFpLT5haV9m
bGFncyAmIEFJX0NMT05FKQoJewoJICBpZiAoYWktPmFpX3NvY2t0eXBlICE9
IDApCgkgICAgewoJICAgICAgaWYgKChhaSA9IGdhX2Nsb25lIChhaSkpID09
IE5VTEwpCgkJcmV0dXJuICgtMSk7CS8qIG1lbW9yeSBhbGxvY2F0aW9uIGVy
cm9yICovCgkgICAgICAvKiBhaSBwb2ludHMgdG8gbmV3bHkgY2xvbmVkIGVu
dHJ5LCB3aGljaCBpcyB3aGF0IHdlIHdhbnQgKi8KCSAgICB9Cgl9CiAgICAg
IGVsc2UgaWYgKGFpLT5haV9zb2NrdHlwZSAhPSBzb2NrdHlwZSkKCWNvbnRp
bnVlOwkJLyogaWdub3JlIGlmIG1pc21hdGNoIG9uIHNvY2tldCB0eXBlICov
CgogICAgICBhaS0+YWlfc29ja3R5cGUgPSBzb2NrdHlwZTsKCiAgICAgIHN3
aXRjaCAoYWktPmFpX2ZhbWlseSkKCXsKI2lmZGVmCUlQdjQKCWNhc2UgQUZf
SU5FVDoKCSAgKChzdHJ1Y3Qgc29ja2FkZHJfaW4gKikgYWktPmFpX2FkZHIp
LT5zaW5fcG9ydCA9IHBvcnQ7CgkgIG5mb3VuZCsrOwoJICBicmVhazsKI2Vu
ZGlmCiNpZmRlZglJUHY2CgljYXNlIEFGX0lORVQ2OgoJICAoKHN0cnVjdCBz
b2NrYWRkcl9pbjYgKikgYWktPmFpX2FkZHIpLT5zaW42X3BvcnQgPSBwb3J0
OwoJICBuZm91bmQrKzsKCSAgYnJlYWs7CiNlbmRpZgoJfQogICAgfQogIHJl
dHVybiAobmZvdW5kKTsKfQoKLyogZW5kIGdhX3BvcnQgKi8KCi8qCiAqIFRo
aXMgZnVuY3Rpb24gaGFuZGxlcyB0aGUgc2VydmljZSBzdHJpbmcuCiAqLwoK
LyogaW5jbHVkZSBnYV9zZXJ2ICovCnN0YXRpYyBpbnQKZ2Ffc2VydiAoc3Ry
dWN0IGFkZHJpbmZvICphaWhlYWQsIGNvbnN0IHN0cnVjdCBhZGRyaW5mbyAq
aGludHNwLAoJIGNvbnN0IGNoYXIgKnNlcnYpCnsKICBpbnQgcG9ydCwgcmMs
IG5mb3VuZDsKICBzdHJ1Y3Qgc2VydmVudCAqc3B0cjsKCiAgbmZvdW5kID0g
MDsKICBpZiAoaXNkaWdpdCAoc2VydlswXSkpCiAgICB7CQkJCS8qIGNoZWNr
IGZvciBwb3J0IG51bWJlciBzdHJpbmcgZmlyc3QgKi8KICAgICAgcG9ydCA9
IGh0b25zIChhdG9pIChzZXJ2KSk7CiAgICAgIGlmIChoaW50c3AtPmFpX3Nv
Y2t0eXBlKQoJewoJICAvKiA0Y2FsbGVyIHNwZWNpZmllcyBzb2NrZXQgdHlw
ZSAqLwoJICBpZiAoKHJjID0gZ2FfcG9ydCAoYWloZWFkLCBwb3J0LCBoaW50
c3AtPmFpX3NvY2t0eXBlKSkgPCAwKQoJICAgIHJldHVybiAoRUFJX01FTU9S
WSk7CgkgIG5mb3VuZCArPSByYzsKCX0KICAgICAgZWxzZQoJewoJICAvKiA0
Y2FsbGVyIGRvZXMgbm90IHNwZWNpZnkgc29ja2V0IHR5cGUgKi8KCSAgaWYg
KChyYyA9IGdhX3BvcnQgKGFpaGVhZCwgcG9ydCwgU09DS19TVFJFQU0pKSA8
IDApCgkgICAgcmV0dXJuIChFQUlfTUVNT1JZKTsKCSAgbmZvdW5kICs9IHJj
OwoJICBpZiAoKHJjID0gZ2FfcG9ydCAoYWloZWFkLCBwb3J0LCBTT0NLX0RH
UkFNKSkgPCAwKQoJICAgIHJldHVybiAoRUFJX01FTU9SWSk7CgkgIG5mb3Vu
ZCArPSByYzsKCX0KICAgIH0KICBlbHNlCiAgICB7CiAgICAgIC8qIDR0cnkg
c2VydmljZSBuYW1lLCBUQ1AgdGhlbiBVRFAgKi8KICAgICAgaWYgKGhpbnRz
cC0+YWlfc29ja3R5cGUgPT0gMCB8fCBoaW50c3AtPmFpX3NvY2t0eXBlID09
IFNPQ0tfU1RSRUFNKQoJewoJICBpZiAoKHNwdHIgPSBjeWd3aW5fZ2V0c2Vy
dmJ5bmFtZSAoc2VydiwgInRjcCIpKSAhPSBOVUxMKQoJICAgIHsKCSAgICAg
IGlmICgocmMgPSBnYV9wb3J0IChhaWhlYWQsIHNwdHItPnNfcG9ydCwgU09D
S19TVFJFQU0pKSA8IDApCgkJcmV0dXJuIChFQUlfTUVNT1JZKTsKCSAgICAg
IG5mb3VuZCArPSByYzsKCSAgICB9Cgl9CiAgICAgIGlmIChoaW50c3AtPmFp
X3NvY2t0eXBlID09IDAgfHwgaGludHNwLT5haV9zb2NrdHlwZSA9PSBTT0NL
X0RHUkFNKQoJewoJICBpZiAoKHNwdHIgPSBjeWd3aW5fZ2V0c2VydmJ5bmFt
ZSAoc2VydiwgInVkcCIpKSAhPSBOVUxMKQoJICAgIHsKCSAgICAgIGlmICgo
cmMgPSBnYV9wb3J0IChhaWhlYWQsIHNwdHItPnNfcG9ydCwgU09DS19ER1JB
TSkpIDwgMCkKCQlyZXR1cm4gKEVBSV9NRU1PUlkpOwoJICAgICAgbmZvdW5k
ICs9IHJjOwoJICAgIH0KCX0KICAgIH0KCiAgaWYgKG5mb3VuZCA9PSAwKQog
ICAgewogICAgICBpZiAoaGludHNwLT5haV9zb2NrdHlwZSA9PSAwKQoJcmV0
dXJuIChFQUlfTk9OQU1FKTsJLyogYWxsIGNhbGxzIHRvIGdldHNlcnZieW5h
bWUoKSBmYWlsZWQgKi8KICAgICAgZWxzZQoJcmV0dXJuIChFQUlfU0VSVklD
RSk7CS8qIHNlcnZpY2Ugbm90IHN1cHBvcnRlZCBmb3Igc29ja2V0IHR5cGUg
Ki8KICAgIH0KICByZXR1cm4gKDApOwp9CgovKiBlbmQgZ2Ffc2VydiAqLwoK
I2lmZGVmCVVOSVhkb21haW4KLyogaW5jbHVkZSBnYV91bml4ICovCnN0YXRp
YyBpbnQKZ2FfdW5peCAoY29uc3QgY2hhciAqcGF0aCwgc3RydWN0IGFkZHJp
bmZvICpoaW50c3AsIHN0cnVjdCBhZGRyaW5mbyAqKnJlc3VsdCkKewogIGlu
dCByYzsKICBzdHJ1Y3QgYWRkcmluZm8gKmFpaGVhZCwgKiphaXBuZXh0OwoK
ICBhaWhlYWQgPSBOVUxMOwogIGFpcG5leHQgPSAmYWloZWFkOwoKICBpZiAo
aGludHNwLT5haV9mYW1pbHkgIT0gQUZfVU5TUEVDICYmIGhpbnRzcC0+YWlf
ZmFtaWx5ICE9IEFGX0xPQ0FMKQogICAgcmV0dXJuIChFQUlfQUREUkZBTUlM
WSk7CgogIGlmIChoaW50c3AtPmFpX3NvY2t0eXBlID09IDApCiAgICB7CiAg
ICAgIC8qIDRubyBzb2NrZXQgdHlwZSBzcGVjaWZpZWQ6IHJldHVybiBzdHJl
YW0gdGhlbiBkZ3JhbSAqLwogICAgICBoaW50c3AtPmFpX3NvY2t0eXBlID0g
U09DS19TVFJFQU07CiAgICAgIGlmICgocmMgPSBnYV9haXN0cnVjdCAoJmFp
cG5leHQsIGhpbnRzcCwgcGF0aCwgQUZfTE9DQUwpKSAhPSAwKQoJcmV0dXJu
IChyYyk7CiAgICAgIGhpbnRzcC0+YWlfc29ja3R5cGUgPSBTT0NLX0RHUkFN
OwogICAgfQoKICBpZiAoKHJjID0gZ2FfYWlzdHJ1Y3QgKCZhaXBuZXh0LCBo
aW50c3AsIHBhdGgsIEFGX0xPQ0FMKSkgIT0gMCkKICAgIHJldHVybiAocmMp
OwoKICBpZiAoaGludHNwLT5haV9mbGFncyAmIEFJX0NBTk9OTkFNRSkKICAg
IHsKICAgICAgc3RydWN0IHV0c25hbWUgbXluYW1lOwoKICAgICAgaWYgKHVu
YW1lICgmbXluYW1lKSA8IDApCglyZXR1cm4gKEVBSV9TWVNURU0pOwogICAg
ICBpZiAoKGFpaGVhZC0+YWlfY2Fub25uYW1lID0gc3RyZHVwIChteW5hbWUu
bm9kZW5hbWUpKSA9PSBOVUxMKQoJcmV0dXJuIChFQUlfTUVNT1JZKTsKICAg
IH0KCiAgKnJlc3VsdCA9IGFpaGVhZDsJCS8qIHBvaW50ZXIgdG8gZmlyc3Qg
c3RydWN0dXJlIGluIGxpbmtlZCBsaXN0ICovCiAgcmV0dXJuICgwKTsKfQoK
LyogZW5kIGdhX3VuaXggKi8KI2VuZGlmIC8qIFVOSVhkb21haW4gKi8KCi8q
IGluY2x1ZGUgZ25faXB2NDYgKi8Kc3RhdGljIGludApnbl9pcHY0NiAoY2hh
ciAqaG9zdCwgc2l6ZV90IGhvc3RsZW4sIGNoYXIgKnNlcnYsIHNpemVfdCBz
ZXJ2bGVuLAoJICB2b2lkICphcHRyLCBzaXplX3QgYWxlbiwgaW50IGZhbWls
eSwgaW50IHBvcnQsIGludCBmbGFncykKewogIGNoYXIgKnB0cjsKICBzdHJ1
Y3QgaG9zdGVudCAqaHB0cjsKICBzdHJ1Y3Qgc2VydmVudCAqc3B0cjsKCiAg
aWYgKGhvc3QgJiYgaG9zdGxlbiA+IDApCiAgICB7CiAgICAgIGlmIChmbGFn
cyAmIE5JX05VTUVSSUNIT1NUKQoJewoJICBpZiAoY3lnd2luX2luZXRfbnRv
cCAoZmFtaWx5LCBhcHRyLCBob3N0LCBob3N0bGVuKSA9PSBOVUxMKQoJICAg
IHJldHVybiAoMSk7Cgl9CiAgICAgIGVsc2UKCXsKCSAgaHB0ciA9IGN5Z3dp
bl9nZXRob3N0YnlhZGRyICgoY29uc3QgY2hhciAqKSBhcHRyLCBhbGVuLCBm
YW1pbHkpOwoJICBpZiAoaHB0ciAhPSBOVUxMICYmIGhwdHItPmhfbmFtZSAh
PSBOVUxMKQoJICAgIHsKCSAgICAgIGlmIChmbGFncyAmIE5JX05PRlFETikK
CQl7CgkJICBpZiAoKHB0ciA9IHN0cmNociAoaHB0ci0+aF9uYW1lLCAnLicp
KSAhPSBOVUxMKQoJCSAgICAqcHRyID0gMDsJLyogb3ZlcndyaXRlIGZpcnN0
IGRvdCAqLwoJCX0KCSAgICAgIC8vc25wcmludGYgKGhvc3QsIGhvc3RsZW4s
ICIlcyIsIGhwdHItPmhfbmFtZSk7CgkgICAgICAqaG9zdCA9ICdcMCc7Cgkg
ICAgICBzdHJuY2F0IChob3N0LCBocHRyLT5oX25hbWUsIGhvc3RsZW4gLSAx
KTsKCSAgICB9CgkgIGVsc2UKCSAgICB7CgkgICAgICBpZiAoZmxhZ3MgJiBO
SV9OQU1FUkVRRCkKCQlyZXR1cm4gKDEpOwoJICAgICAgaWYgKGN5Z3dpbl9p
bmV0X250b3AgKGZhbWlseSwgYXB0ciwgaG9zdCwgaG9zdGxlbikgPT0gTlVM
TCkKCQlyZXR1cm4gKDEpOwoJICAgIH0KCX0KICAgIH0KCiAgaWYgKHNlcnYg
JiYgc2VydmxlbiA+IDApCiAgICB7CiAgICAgIGlmIChmbGFncyAmIE5JX05V
TUVSSUNTRVJWKQoJewoJICAvL3NucHJpbnRmIChzZXJ2LCBzZXJ2bGVuLCAi
JWQiLCBudG9ocyAocG9ydCkpOwoJICBjaGFyIGJ1ZlszMl07CgkgIF9fc21h
bGxfc3ByaW50ZiAoYnVmLCAiJWQiLCBudG9ocyAocG9ydCkpOwoJICAqc2Vy
diA9ICdcMCc7CgkgIHN0cm5jYXQgKHNlcnYsIGJ1Ziwgc2VydmxlbiAtIDEp
OwoJfQogICAgICBlbHNlCgl7CgkgIHNwdHIgPSBjeWd3aW5fZ2V0c2VydmJ5
cG9ydCAocG9ydCwgKGZsYWdzICYgTklfREdSQU0pID8gInVkcCIgOiBOVUxM
KTsKCSAgaWYgKHNwdHIgIT0gTlVMTCAmJiBzcHRyLT5zX25hbWUgIT0gTlVM
TCkKCSAgICB7CgkgICAgICAvL3NucHJpbnRmIChzZXJ2LCBzZXJ2bGVuLCAi
JXMiLCBzcHRyLT5zX25hbWUpOwoJICAgICAgKnNlcnYgPSAnXDAnOwoJICAg
ICAgc3RybmNhdCAoc2Vydiwgc3B0ci0+c19uYW1lLCBzZXJ2bGVuIC0gMSk7
CgkgICAgfQoJICBlbHNlCgkgICAgewoJICAgICAgLy9zbnByaW50ZiAoc2Vy
diwgc2VydmxlbiwgIiVkIiwgbnRvaHMgKHBvcnQpKTsKCSAgICAgIGNoYXIg
YnVmWzMyXTsKCSAgICAgIF9fc21hbGxfc3ByaW50ZiAoYnVmLCAiJWQiLCBu
dG9ocyAocG9ydCkpOwoJICAgICAgKnNlcnYgPSAnXDAnOwoJICAgICAgc3Ry
bmNhdCAoc2VydiwgYnVmLCBzZXJ2bGVuIC0gMSk7CgkgICAgfQoJfQogICAg
fQogIHJldHVybiAoMCk7Cn0KCi8qIGVuZCBnbl9pcHY0NiAqLwoKLyogaW5j
bHVkZSBmcmVlYWRkcmluZm8gKi8Kdm9pZAppcHY0X2ZyZWVhZGRyaW5mbyAo
c3RydWN0IGFkZHJpbmZvICphaWhlYWQpCnsKICBzdHJ1Y3QgYWRkcmluZm8g
KmFpLCAqYWluZXh0OwoKICBmb3IgKGFpID0gYWloZWFkOyBhaSAhPSBOVUxM
OyBhaSA9IGFpbmV4dCkKICAgIHsKICAgICAgaWYgKGFpLT5haV9hZGRyICE9
IE5VTEwpCglmcmVlIChhaS0+YWlfYWRkcik7CS8qIHNvY2tldCBhZGRyZXNz
IHN0cnVjdHVyZSAqLwoKICAgICAgaWYgKGFpLT5haV9jYW5vbm5hbWUgIT0g
TlVMTCkKCWZyZWUgKGFpLT5haV9jYW5vbm5hbWUpOwoKICAgICAgYWluZXh0
ID0gYWktPmFpX25leHQ7CS8qIGNhbid0IGZldGNoIGFpX25leHQgYWZ0ZXIg
ZnJlZSgpICovCiAgICAgIGZyZWUgKGFpKTsJCS8qIHRoZSBhZGRyaW5mb3t9
IGl0c2VsZiAqLwogICAgfQp9CgovKiBlbmQgZnJlZWFkZHJpbmZvICovCgov
KiBpbmNsdWRlIGdhMSAqLwoKaW50CmlwdjRfZ2V0YWRkcmluZm8gKGNvbnN0
IGNoYXIgKmhvc3RuYW1lLCBjb25zdCBjaGFyICpzZXJ2bmFtZSwKCQkgIGNv
bnN0IHN0cnVjdCBhZGRyaW5mbyAqaGludHNwLCBzdHJ1Y3QgYWRkcmluZm8g
KipyZXN1bHQpCnsKICBpbnQgcmMsIGVycm9yLCBuc2VhcmNoOwogIGNoYXIg
KiphcCwgKmNhbm9uOwogIHN0cnVjdCBob3N0ZW50ICpocHRyOwogIHN0cnVj
dCBzZWFyY2ggc2VhcmNoWzNdLCAqc3B0cjsKICBzdHJ1Y3QgYWRkcmluZm8g
aGludHMsICphaWhlYWQsICoqYWlwbmV4dDsKCiAgLyoKICAgKiBJZiB3ZSBl
bmNvdW50ZXIgYW4gZXJyb3Igd2Ugd2FudCB0byBmcmVlKCkgYW55IGR5bmFt
aWMgbWVtb3J5CiAgICogdGhhdCB3ZSd2ZSBhbGxvY2F0ZWQuICBUaGlzIGlz
IG91ciBoYWNrIHRvIHNpbXBsaWZ5IHRoZSBjb2RlLgogICAqLwojZGVmaW5l
CWVycm9yKGUpIHsgZXJyb3IgPSAoZSk7IGdvdG8gYmFkOyB9CgogIGFpaGVh
ZCA9IE5VTEw7CQkvKiBpbml0aWFsaXplIGF1dG9tYXRpYyB2YXJpYWJsZXMg
Ki8KICBhaXBuZXh0ID0gJmFpaGVhZDsKICBjYW5vbiA9IE5VTEw7CgogIGlm
IChoaW50c3AgPT0gTlVMTCkKICAgIHsKICAgICAgYnplcm8gKCZoaW50cywg
c2l6ZW9mIChoaW50cykpOwogICAgICBoaW50cy5haV9mYW1pbHkgPSBBRl9V
TlNQRUM7CiAgICB9CiAgZWxzZQogICAgaGludHMgPSAqaGludHNwOwkJLyog
c3RydWN0IGNvcHkgKi8KCiAgLyogNGZpcnN0IHNvbWUgYmFzaWMgZXJyb3Ig
Y2hlY2tpbmcgKi8KICBpZiAoKHJjID0gZ2FfZWNoZWNrIChob3N0bmFtZSwg
c2Vydm5hbWUsIGhpbnRzLmFpX2ZsYWdzLCBoaW50cy5haV9mYW1pbHksCgkJ
ICAgICAgIGhpbnRzLmFpX3NvY2t0eXBlLCBoaW50cy5haV9wcm90b2NvbCkp
ICE9IDApCiAgICBlcnJvciAocmMpOwoKI2lmZGVmCVVOSVhkb21haW4KICAv
KiA0c3BlY2lhbCBjYXNlIFVuaXggZG9tYWluIGZpcnN0ICovCiAgaWYgKGhv
c3RuYW1lICE9IE5VTEwgJiYKICAgICAgKHN0cmNtcCAoaG9zdG5hbWUsICIv
bG9jYWwiKSA9PSAwIHx8IHN0cmNtcCAoaG9zdG5hbWUsICIvdW5peCIpID09
IDApICYmCiAgICAgIChzZXJ2bmFtZSAhPSBOVUxMICYmIHNlcnZuYW1lWzBd
ID09ICcvJykpCiAgICByZXR1cm4gKGdhX3VuaXggKHNlcnZuYW1lLCAmaGlu
dHMsIHJlc3VsdCkpOwojZW5kaWYKLyogZW5kIGdhMSAqLwoKLyogaW5jbHVk
ZSBnYTMgKi8KICAvKiA0cmVtYWluZGVyIG9mIGZ1bmN0aW9uIGZvciBJUHY0
L0lQdjYgKi8KICBuc2VhcmNoID0gZ2FfbnNlYXJjaCAoaG9zdG5hbWUsICZo
aW50cywgJnNlYXJjaFswXSk7CiAgaWYgKG5zZWFyY2ggPT0gLTEpCiAgICBl
cnJvciAoRUFJX0ZBTUlMWSk7CiAgZm9yIChzcHRyID0gJnNlYXJjaFswXTsg
c3B0ciA8ICZzZWFyY2hbbnNlYXJjaF07IHNwdHIrKykKICAgIHsKI2lmZGVm
CUlQdjQKICAgICAgLyogNGNoZWNrIGZvciBhbiBJUHY0IGRvdHRlZC1kZWNp
bWFsIHN0cmluZyAqLwogICAgICBpZiAoaXNkaWdpdCAoc3B0ci0+aG9zdFsw
XSkpCgl7CgkgIHN0cnVjdCBpbl9hZGRyIGluYWRkcjsKCgkgIGlmIChpbmV0
X3B0b240IChzcHRyLT5ob3N0LCAodV9jaGFyICopICZpbmFkZHIpID09IDEp
CgkgICAgewoJICAgICAgaWYgKGhpbnRzLmFpX2ZhbWlseSAhPSBBRl9VTlNQ
RUMgJiYgaGludHMuYWlfZmFtaWx5ICE9IEFGX0lORVQpCgkJZXJyb3IgKEVB
SV9BRERSRkFNSUxZKTsKCSAgICAgIGlmIChzcHRyLT5mYW1pbHkgIT0gQUZf
SU5FVCkKCQljb250aW51ZTsJLyogaWdub3JlICovCgkgICAgICByYyA9IGdh
X2Fpc3RydWN0ICgmYWlwbmV4dCwgJmhpbnRzLCAmaW5hZGRyLCBBRl9JTkVU
KTsKCSAgICAgIGlmIChyYyAhPSAwKQoJCWVycm9yIChyYyk7CgkgICAgICBj
b250aW51ZTsKCSAgICB9Cgl9CiNlbmRpZgoKI2lmZGVmCUlQdjYKICAgICAg
LyogNGNoZWNrIGZvciBhbiBJUHY2IGhleCBzdHJpbmcgKi8KICAgICAgaWYg
KChpc3hkaWdpdCAoc3B0ci0+aG9zdFswXSkgfHwgc3B0ci0+aG9zdFswXSA9
PSAnOicpICYmCgkgIChzdHJjaHIgKHNwdHItPmhvc3QsICc6JykgIT0gTlVM
TCkpCgl7CgkgIHN0cnVjdCBpbjZfYWRkciBpbjZhZGRyOwoKCSAgaWYgKGlu
ZXRfcHRvbjYgKHNwdHItPmhvc3QsICZpbjZhZGRyKSA9PSAxKQoJICAgIHsK
CSAgICAgIGlmIChoaW50cy5haV9mYW1pbHkgIT0gQUZfVU5TUEVDICYmIGhp
bnRzLmFpX2ZhbWlseSAhPSBBRl9JTkVUNikKCQllcnJvciAoRUFJX0FERFJG
QU1JTFkpOwoJICAgICAgaWYgKHNwdHItPmZhbWlseSAhPSBBRl9JTkVUNikK
CQljb250aW51ZTsJLyogaWdub3JlICovCgkgICAgICByYyA9IGdhX2Fpc3Ry
dWN0ICgmYWlwbmV4dCwgJmhpbnRzLCAmaW42YWRkciwgQUZfSU5FVDYpOwoJ
ICAgICAgaWYgKHJjICE9IDApCgkJZXJyb3IgKHJjKTsKCSAgICAgIGNvbnRp
bnVlOwoJICAgIH0KCX0KI2VuZGlmCi8qIGVuZCBnYTMgKi8KLyogaW5jbHVk
ZSBnYTQgKi8KI2lmZGVmCUlQdjYKICAgICAgLyogNHJlbWFpbmRlciBvZiBm
b3IoKSB0byBsb29rIHVwIGhvc3RuYW1lICovCiAgICAgIGlmICgoX3Jlcy5v
cHRpb25zICYgUkVTX0lOSVQpID09IDApCglyZXNfaW5pdCAoKTsJCS8qIG5l
ZWQgdGhpcyB0byBzZXQgX3Jlcy5vcHRpb25zICovCiNlbmRpZgoKICAgICAg
aWYgKG5zZWFyY2ggPT0gMikKCXsKI2lmZGVmCUlQdjYKCSAgX3Jlcy5vcHRp
b25zICY9IH5SRVNfVVNFX0lORVQ2OwojZW5kaWYKCSAgaHB0ciA9IGdldGhv
c3RieW5hbWUyIChzcHRyLT5ob3N0LCBzcHRyLT5mYW1pbHkpOwoJfQogICAg
ICBlbHNlCgl7CiNpZmRlZiAgSVB2NgoJICBpZiAoc3B0ci0+ZmFtaWx5ID09
IEFGX0lORVQ2KQoJICAgIF9yZXMub3B0aW9ucyB8PSBSRVNfVVNFX0lORVQ2
OwoJICBlbHNlCgkgICAgX3Jlcy5vcHRpb25zICY9IH5SRVNfVVNFX0lORVQ2
OwojZW5kaWYKCSAgaHB0ciA9IGdldGhvc3RieW5hbWUgKHNwdHItPmhvc3Qp
OwoJfQogICAgICBpZiAoaHB0ciA9PSBOVUxMKQoJewoJICBpZiAobnNlYXJj
aCA9PSAyKQoJICAgIGNvbnRpbnVlOwkJLyogZmFpbHVyZSBPSyBpZiBtdWx0
aXBsZSBzZWFyY2hlcyAqLwoKCSAgc3dpdGNoIChoX2Vycm5vKQoJICAgIHsK
CSAgICBjYXNlIEhPU1RfTk9UX0ZPVU5EOgoJICAgICAgZXJyb3IgKEVBSV9O
T05BTUUpOwoJICAgIGNhc2UgVFJZX0FHQUlOOgoJICAgICAgZXJyb3IgKEVB
SV9BR0FJTik7CgkgICAgY2FzZSBOT19SRUNPVkVSWToKCSAgICAgIGVycm9y
IChFQUlfRkFJTCk7CgkgICAgY2FzZSBOT19EQVRBOgoJICAgICAgZXJyb3Ig
KEVBSV9OT0RBVEEpOwoJICAgIGRlZmF1bHQ6CgkgICAgICBlcnJvciAoRUFJ
X05PTkFNRSk7CgkgICAgfQoJfQoKICAgICAgLyogNGNoZWNrIGZvciBhZGRy
ZXNzIGZhbWlseSBtaXNtYXRjaCBpZiBvbmUgc3BlY2lmaWVkICovCiAgICAg
IGlmIChoaW50cy5haV9mYW1pbHkgIT0gQUZfVU5TUEVDICYmIGhpbnRzLmFp
X2ZhbWlseSAhPSBocHRyLT5oX2FkZHJ0eXBlKQoJZXJyb3IgKEVBSV9BRERS
RkFNSUxZKTsKCiAgICAgIC8qIDRzYXZlIGNhbm9uaWNhbCBuYW1lIGZpcnN0
IHRpbWUgKi8KICAgICAgaWYgKGhvc3RuYW1lICE9IE5VTEwgJiYgaG9zdG5h
bWVbMF0gIT0gJ1wwJyAmJgoJICAoaGludHMuYWlfZmxhZ3MgJiBBSV9DQU5P
Tk5BTUUpICYmIGNhbm9uID09IE5VTEwpCgl7CgkgIGlmICgoY2Fub24gPSBz
dHJkdXAgKGhwdHItPmhfbmFtZSkpID09IE5VTEwpCgkgICAgZXJyb3IgKEVB
SV9NRU1PUlkpOwoJfQoKICAgICAgLyogNGNyZWF0ZSBvbmUgYWRkcmluZm97
fSBmb3IgZWFjaCByZXR1cm5lZCBhZGRyZXNzICovCiAgICAgIGZvciAoYXAg
PSBocHRyLT5oX2FkZHJfbGlzdDsgKmFwICE9IE5VTEw7IGFwKyspCgl7Cgkg
IHJjID0gZ2FfYWlzdHJ1Y3QgKCZhaXBuZXh0LCAmaGludHMsICphcCwgaHB0
ci0+aF9hZGRydHlwZSk7CgkgIGlmIChyYyAhPSAwKQoJICAgIGVycm9yIChy
Yyk7Cgl9CiAgICB9CiAgaWYgKGFpaGVhZCA9PSBOVUxMKQogICAgZXJyb3Ig
KEVBSV9OT05BTUUpOwkJLyogbm90aGluZyBmb3VuZCAqLwovKiBlbmQgZ2E0
ICovCgovKiBpbmNsdWRlIGdhNSAqLwogIC8qIDRyZXR1cm4gY2Fub25pY2Fs
IG5hbWUgKi8KICBpZiAoaG9zdG5hbWUgIT0gTlVMTCAmJiBob3N0bmFtZVsw
XSAhPSAnXDAnICYmCiAgICAgIGhpbnRzLmFpX2ZsYWdzICYgQUlfQ0FOT05O
QU1FKQogICAgewogICAgICBpZiAoY2Fub24gIT0gTlVMTCkKCWFpaGVhZC0+
YWlfY2Fub25uYW1lID0gY2Fub247CS8qIHN0cmR1cCdlZCBlYXJsaWVyICov
CiAgICAgIGVsc2UKCXsKCSAgaWYgKChhaWhlYWQtPmFpX2Nhbm9ubmFtZSA9
IHN0cmR1cCAoc2VhcmNoWzBdLmhvc3QpKSA9PSBOVUxMKQoJICAgIGVycm9y
IChFQUlfTUVNT1JZKTsKCX0KICAgIH0KCiAgLyogNG5vdyBwcm9jZXNzIHRo
ZSBzZXJ2aWNlIG5hbWUgKi8KICBpZiAoc2Vydm5hbWUgIT0gTlVMTCAmJiBz
ZXJ2bmFtZVswXSAhPSAnXDAnKQogICAgewogICAgICBpZiAoKHJjID0gZ2Ff
c2VydiAoYWloZWFkLCAmaGludHMsIHNlcnZuYW1lKSkgIT0gMCkKCWVycm9y
IChyYyk7CiAgICB9CgogICpyZXN1bHQgPSBhaWhlYWQ7CQkvKiBwb2ludGVy
IHRvIGZpcnN0IHN0cnVjdHVyZSBpbiBsaW5rZWQgbGlzdCAqLwogIHJldHVy
biAoMCk7CgpiYWQ6CiAgaXB2NF9mcmVlYWRkcmluZm8gKGFpaGVhZCk7CS8q
IGZyZWUgYW55IGFsbG9jJ2VkIG1lbW9yeSAqLwogIHJldHVybiAoZXJyb3Ip
Owp9CgovKiBlbmQgZ2E1ICovCgovKiBpbmNsdWRlIGdldG5hbWVpbmZvICov
CmludAppcHY0X2dldG5hbWVpbmZvIChjb25zdCBzdHJ1Y3Qgc29ja2FkZHIg
KnNhLCBzb2NrbGVuX3Qgc2FsZW4sCgkJICBjaGFyICpob3N0LCBzaXplX3Qg
aG9zdGxlbiwKCQkgIGNoYXIgKnNlcnYsIHNpemVfdCBzZXJ2bGVuLCBpbnQg
ZmxhZ3MpCnsKCiAgc3dpdGNoIChzYS0+c2FfZmFtaWx5KQogICAgewojaWZk
ZWYJSVB2NAogICAgY2FzZSBBRl9JTkVUOgogICAgICB7CglzdHJ1Y3Qgc29j
a2FkZHJfaW4gKnNhaW4gPSAoc3RydWN0IHNvY2thZGRyX2luICopIHNhOwoK
CXJldHVybiAoZ25faXB2NDYgKGhvc3QsIGhvc3RsZW4sIHNlcnYsIHNlcnZs
ZW4sCgkJCSAgJnNhaW4tPnNpbl9hZGRyLCBzaXplb2YgKHN0cnVjdCBpbl9h
ZGRyKSwKCQkJICBBRl9JTkVULCBzYWluLT5zaW5fcG9ydCwgZmxhZ3MpKTsK
ICAgICAgfQojZW5kaWYKCiNpZmRlZglJUHY2CiAgICBjYXNlIEFGX0lORVQ2
OgogICAgICB7CglzdHJ1Y3Qgc29ja2FkZHJfaW42ICpzYWluID0gKHN0cnVj
dCBzb2NrYWRkcl9pbjYgKikgc2E7CgoJcmV0dXJuIChnbl9pcHY0NiAoaG9z
dCwgaG9zdGxlbiwgc2Vydiwgc2VydmxlbiwKCQkJICAmc2Fpbi0+c2luNl9h
ZGRyLCBzaXplb2YgKHN0cnVjdCBpbjZfYWRkciksCgkJCSAgQUZfSU5FVDYs
IHNhaW4tPnNpbjZfcG9ydCwgZmxhZ3MpKTsKICAgICAgfQojZW5kaWYKCiNp
ZmRlZglVTklYZG9tYWluCiAgICBjYXNlIEFGX0xPQ0FMOgogICAgICB7Cglz
dHJ1Y3Qgc29ja2FkZHJfdW4gKnVuID0gKHN0cnVjdCBzb2NrYWRkcl91biAq
KSBzYTsKCglpZiAoaG9zdGxlbiA+IDApCgkgIHNucHJpbnRmIChob3N0LCBo
b3N0bGVuLCAiJXMiLCAiL2xvY2FsIik7CglpZiAoc2VydmxlbiA+IDApCgkg
IHNucHJpbnRmIChzZXJ2LCBzZXJ2bGVuLCAiJXMiLCB1bi0+c3VuX3BhdGgp
OwoJcmV0dXJuICgwKTsKICAgICAgfQojZW5kaWYKCiAgICBkZWZhdWx0Ogog
ICAgICByZXR1cm4gKEVBSV9GQU1JTFkpOwogICAgfQp9CgovKiBlbmQgZ2V0
bmFtZWluZm8gKi8KCi8qIFN0YXJ0IG9mIGN5Z3dpbiBzcGVjaWZpYyB3cmFw
cGVycyBhcm91bmQgdGhlIGdhaSBmdW5jdGlvbnMuICovCgpzdHJ1Y3QgZ2Fp
X2Vycm1hcF90CnsKICBpbnQgdzMyX2VycnZhbDsKICBjb25zdCBjaGFyICpl
cnJ0eHQ7Cn07CgpzdGF0aWMgZ2FpX2Vycm1hcF90IGdhaV9lcnJtYXBbXSA9
CnsKICB7MCwJCQkgICJTdWNjZXNzIn0sCiAgezAsCQkJICAiQWRkcmVzcyBm
YW1pbHkgZm9yIGhvc3RuYW1lIG5vdCBzdXBwb3J0ZWQifSwKICB7V1NBVFJZ
X0FHQUlOLAkgICJUZW1wb3JhcnkgZmFpbHVyZSBpbiBuYW1lIHJlc29sdXRp
b24ifSwKICB7V1NBRUlOVkFMLAkJICAiSW52YWxpZCB2YWx1ZSBmb3IgYWlf
ZmxhZ3MifSwKICB7V1NBTk9fUkVDT1ZFUlksCSAgIk5vbi1yZWNvdmVyYWJs
ZSBmYWlsdXJlIGluIG5hbWUgcmVzb2x1dGlvbiJ9LAogIHtXU0FFQUZOT1NV
UFBPUlQsCSAgImFpX2ZhbWlseSBub3Qgc3VwcG9ydGVkIn0sCiAge1dTQV9O
T1RfRU5PVUdIX01FTU9SWSwgIk1lbW9yeSBhbGxvY2F0aW9uIGZhaWx1cmUi
fSwKICB7V1NBTk9fREFUQSwJCSAgIk5vIGFkZHJlc3MgYXNzb2NpYXRlZCB3
aXRoIGhvc3RuYW1lIn0sCiAge1dTQUhPU1RfTk9UX0ZPVU5ELAkgICJob3N0
bmFtZSBub3Igc2Vydm5hbWUgcHJvdmlkZWQsIG9yIG5vdCBrbm93biJ9LAog
IHtXU0FUWVBFX05PVF9GT1VORCwJICAic2Vydm5hbWUgbm90IHN1cHBvcnRl
ZCBmb3IgYWlfc29ja3R5cGUifSwKICB7V1NBRVNPQ0tUTk9TVVBQT1JULAkg
ICJhaV9zb2NrdHlwZSBub3Qgc3VwcG9ydGVkIn0sCiAgezAsCQkJICAiU3lz
dGVtIGVycm9yIHJldHVybmVkIGluIGVycm5vIn0sCiAgezAsCQkJICAiSW52
YWxpZCB2YWx1ZSBmb3IgaGludHMifSwKICB7MCwJCQkgICJSZXNvbHZlZCBw
cm90b2NvbCBpcyB1bmtub3duIn0sCiAge1dTQUVGQVVMVCwJCSAgIkFuIGFy
Z3VtZW50IGJ1ZmZlciBvdmVyZmxvd2VkIn0KfTsKCmV4dGVybiAiQyIgY29u
c3QgY2hhciAqCmN5Z3dpbl9nYWlfc3RyZXJyb3IgKGludCBlcnIpCnsKICBp
ZiAoZXJyID49IDAgJiYgZXJyIDwgKGludCkgKHNpemVvZiBnYWlfZXJybWFw
IC8gc2l6ZW9mICpnYWlfZXJybWFwKSkKICAgIHJldHVybiBnYWlfZXJybWFw
W2Vycl0uZXJydHh0OwogIHJldHVybiAiVW5rbm93biBlcnJvciI7Cn0KCnN0
YXRpYyBpbnQKdzMyX3RvX2dhaV9lcnIgKGludCB3MzJfZXJyKQp7CiAgaWYg
KHczMl9lcnIgPj0gV1NBQkFTRUVSUikKICAgIGZvciAodW5zaWduZWQgaSA9
IDA7IGkgPCBzaXplb2YgZ2FpX2Vycm1hcCAvIHNpemVvZiAqZ2FpX2Vycm1h
cDsgKytpKQogICAgICBpZiAoZ2FpX2Vycm1hcFtpXS53MzJfZXJydmFsID09
IHczMl9lcnIpCglyZXR1cm4gaTsKICByZXR1cm4gdzMyX2VycjsKfQoKLyog
V2UgY2FuJ3QgdXNlIGF1dG9sb2FkIGhlcmUgYmVjYXVzZSB3ZSBkb24ndCBr
bm93IHdoZXJlIHRoZSBmdW5jdGlvbnMKICAgYXJlIGxvYWRlZCBmcm9tLiAg
T24gV2luMkssIHRoZSBmdW5jdGlvbnMgYXJlIGF2YWlsYWJsZSBpbiB0aGUK
ICAgaXB2NiB0ZWNobm9sb2d5IHByZXZpZXcgbGliIGNhbGxlZCB3c2hpcDYu
ZGxsLCBpbiBYUCBhbmQgYWJvdmUgdGhleQogICBhcmUgaW1wbGVtZW50ZWQg
aW4gd3MyXzMyLmRsbC4gIEZvciBvbGRlciBzeXN0ZW1zIHdlIHVzZSB0aGUg
aXB2NC1vbmx5CiAgIHZlcnNpb24gYWJvdmUuICovCgpzdGF0aWMgdm9pZCAo
V0lOQVBJICpmcmVlYWRkcmluZm8pKGNvbnN0IHN0cnVjdCBhZGRyaW5mbyAq
KTsKc3RhdGljIGludCAoV0lOQVBJICpnZXRhZGRyaW5mbykoY29uc3QgY2hh
ciAqLCBjb25zdCBjaGFyICosCgkJCQkgIGNvbnN0IHN0cnVjdCBhZGRyaW5m
byAqLAoJCQkJICBzdHJ1Y3QgYWRkcmluZm8gKiopOwpzdGF0aWMgaW50IChX
SU5BUEkgKmdldG5hbWVpbmZvKShjb25zdCBzdHJ1Y3Qgc29ja2FkZHIgKiwg
c29ja2xlbl90LAoJCQkJICBjaGFyICosIHNpemVfdCwgY2hhciAqLCBzaXpl
X3QsIGludCk7CnN0YXRpYyBib29sCmdldF9pcHY2X2Z1bmNzIChITU9EVUxF
IGxpYikKewogIHJldHVybiAoKGZyZWVhZGRyaW5mbyA9ICh2b2lkIChXSU5B
UEkgKikoY29uc3Qgc3RydWN0IGFkZHJpbmZvICopKQoJCQkgIEdldFByb2NB
ZGRyZXNzIChsaWIsICJmcmVlYWRkcmluZm8iKSkKCSAgJiYgKGdldGFkZHJp
bmZvID0gKGludCAoV0lOQVBJICopKGNvbnN0IGNoYXIgKiwgY29uc3QgY2hh
ciAqLAoJCQkJCSAgICBjb25zdCBzdHJ1Y3QgYWRkcmluZm8gKiwKCQkJCQkg
ICAgc3RydWN0IGFkZHJpbmZvICoqKSkKCQkJICAgIEdldFByb2NBZGRyZXNz
IChsaWIsICJnZXRhZGRyaW5mbyIpKQoJICAmJiAoZ2V0bmFtZWluZm8gPSAo
aW50IChXSU5BUEkgKikoY29uc3Qgc3RydWN0IHNvY2thZGRyICosCgkJCQkJ
ICAgIHNvY2tsZW5fdCwgY2hhciAqLCBzaXplX3QsCgkJCQkJICAgIGNoYXIg
Kiwgc2l6ZV90LCBpbnQpKQoJCQkgICAgR2V0UHJvY0FkZHJlc3MgKGxpYiwg
ImdldG5hbWVpbmZvIikpKTsKfQoKc3RhdGljIE5PX0NPUFkgbXV0byBsb2Fk
X2lwdjZfZ3VhcmQ7CnN0YXRpYyBOT19DT1BZIGJvb2wgaXB2Nl9pbml0ZWQg
PSBmYWxzZTsKI2RlZmluZSBsb2FkX2lwdjYoKQlpZiAoIWlwdjZfaW5pdGVk
KSBsb2FkX2lwdjZfZnVuY3MgKCk7CgpzdGF0aWMgdm9pZApsb2FkX2lwdjZf
ZnVuY3MgKCkKewogIHRtcF9wYXRoYnVmIHRwOwogIFBXQ0hBUiBsaWJfbmFt
ZSA9IHRwLndfZ2V0ICgpOwogIHNpemVfdCBsZW47CiAgSE1PRFVMRSBsaWI7
CgogIGxvYWRfaXB2Nl9ndWFyZC5pbml0ICgia2xvZ19ndWFyZCIpLT5hY3F1
aXJlICgpOwogIGlmIChpcHY2X2luaXRlZCkKICAgIGdvdG8gb3V0OwogIFdT
QUdldExhc3RFcnJvciAoKTsJLyogS2x1ZGdlLiAgRW5mb3JjZSBXU0FTdGFy
dHVwIGNhbGwuICovCiAgaWYgKEdldFN5c3RlbURpcmVjdG9yeVcgKGxpYl9u
YW1lLCBOVF9NQVhfUEFUSCkpCiAgICB7CiAgICAgIGxlbiA9IHdjc2xlbiAo
bGliX25hbWUpOwogICAgICB3Y3BjcHkgKGxpYl9uYW1lICsgbGVuLCBMIlxc
d3MyXzMyLmRsbCIpOwogICAgICBpZiAoKGxpYiA9IExvYWRMaWJyYXJ5VyAo
bGliX25hbWUpKSkKCXsKCSAgaWYgKGdldF9pcHY2X2Z1bmNzIChsaWIpKQoJ
ICAgIGdvdG8gb3V0OwoJICBGcmVlTGlicmFyeSAobGliKTsKCX0KICAgICAg
d2NwY3B5IChsaWJfbmFtZSArIGxlbiwgTCJcXHdzaGlwNi5kbGwiKTsKICAg
ICAgaWYgKChsaWIgPSBMb2FkTGlicmFyeVcgKGxpYl9uYW1lKSkpCgl7Cgkg
IGlmIChnZXRfaXB2Nl9mdW5jcyAobGliKSkKCSAgICBnb3RvIG91dDsKCSAg
RnJlZUxpYnJhcnkgKGxpYik7Cgl9CiAgICAgIGZyZWVhZGRyaW5mbyA9IE5V
TEw7CiAgICAgIGdldGFkZHJpbmZvID0gTlVMTDsKICAgICAgZ2V0bmFtZWlu
Zm8gPSBOVUxMOwogICAgfQpvdXQ6CiAgaXB2Nl9pbml0ZWQgPSB0cnVlOwog
IGxvYWRfaXB2Nl9ndWFyZC5yZWxlYXNlICgpOwp9CgpleHRlcm4gIkMiIHZv
aWQKY3lnd2luX2ZyZWVhZGRyaW5mbyAoc3RydWN0IGFkZHJpbmZvICphZGRy
KQp7CiAgbXlmYXVsdCBlZmF1bHQ7CiAgaWYgKGVmYXVsdC5mYXVsdGVkIChF
RkFVTFQpKQogICAgcmV0dXJuOwogIGlwdjRfZnJlZWFkZHJpbmZvIChhZGRy
KTsKfQoKZXh0ZXJuICJDIiBpbnQKY3lnd2luX2dldGFkZHJpbmZvIChjb25z
dCBjaGFyICpob3N0bmFtZSwgY29uc3QgY2hhciAqc2Vydm5hbWUsCgkJICAg
IGNvbnN0IHN0cnVjdCBhZGRyaW5mbyAqaGludHMsIHN0cnVjdCBhZGRyaW5m
byAqKnJlcykKewogIG15ZmF1bHQgZWZhdWx0OwogIGlmIChlZmF1bHQuZmF1
bHRlZCAoRUZBVUxUKSkKICAgIHJldHVybiBFQUlfU1lTVEVNOwogIC8qIEJv
dGggc3Vic2VxdWVudCBnZXRhZGRyaW5mbyBpbXBsZW1lbnRhdGlvbnMgbGV0
IGFsbCBwb3NzaWJsZSB2YWx1ZXMKICAgICBpbiBhaV9mbGFncyBzbGlwIHRo
cm91Z2ggYW5kIGp1c3QgaWdub3JlIHVua25vd2VuIHZhbHVlcy4gIFNvIHdl
IGhhdmUKICAgICB0byBjaGVjayBtYW51YWxseSBoZXJlLiAqLwogIGlmICho
aW50cyAmJiAoaGludHMtPmFpX2ZsYWdzCgkJJiB+KEFJX1BBU1NJVkUgfCBB
SV9DQU5PTk5BTUUgfCBBSV9OVU1FUklDSE9TVCB8IEFJX0FMTAoJCSAgICB8
IEFJX05VTUVSSUNTRVJWIHwgQUlfQUREUkNPTkZJRyB8IEFJX1Y0TUFQUEVE
KSkpCiAgICByZXR1cm4gRUFJX0JBREZMQUdTOwogIC8qIEFJX05VTUVSSUNT
RVJWIGlzIG5vdCBzdXBwb3J0ZWQgaW4gb3VyIHJlcGxhY2VtZW50IGdldGFk
ZHJpbmZvLCBub3IKICAgICBpcyBpdCBzdXBwb3J0ZWQgYnkgV2luc29jayBw
cmlvciB0byBWaXN0YS4gIFdlIGp1c3QgY2hlY2sgdGhlIHNlcnZuYW1lCiAg
ICAgcGFyYW1ldGVyIGJ5IG91cnNlbHZlcyBoZXJlLiAqLwogIGlmIChoaW50
cyAmJiAoaGludHMtPmFpX2ZsYWdzICYgQUlfTlVNRVJJQ1NFUlYpKQogICAg
ewogICAgICBjaGFyICpwOwogICAgICBpZiAoc2Vydm5hbWUgJiYgKnNlcnZu
YW1lICYmIChzdHJ0b3VsIChzZXJ2bmFtZSwgJnAsIDEwKSwgKnApKQoJcmV0
dXJuIEVBSV9OT05BTUU7CiAgICB9CiAgbG9hZF9pcHY2ICgpOwogIGlmICgh
Z2V0YWRkcmluZm8pCiAgICByZXR1cm4gaXB2NF9nZXRhZGRyaW5mbyAoaG9z
dG5hbWUsIHNlcnZuYW1lLCBoaW50cywgcmVzKTsKCiAgc3RydWN0IGFkZHJp
bmZvIG5oaW50cywgKmR1cHJlczsKCiAgLyogQUlfQUREUkNPTkZJRyBpcyBu
b3Qgc3VwcG9ydGVkIHByaW9yIHRvIFZpc3RhLiAgUmF0aGVyIGl0J3MKICAg
ICB0aGUgZGVmYXVsdCBhbmQgb25seSBwb3NzaWJsZSBzZXR0aW5nLgogICAg
IE9uIFZpc3RhLCB0aGUgZGVmYXVsdCBiZWhhdmlvdXIgaXMgYXMgaWYgQUlf
QUREUkNPTkZJRyBpcyBzZXQsCiAgICAgYXBwYXJlbnRseSBmb3IgcGVyZm9y
bWFuY2UgcmVhc29ucy4gIFRvIGdldCB0aGUgUE9TSVggZGVmYXVsdAogICAg
IGJlaGF2aW91ciwgdGhlIEFJX0FMTCBmbGFnIGhhcyB0byBiZSBzZXQuICov
CiAgaWYgKHdpbmNhcC5zdXBwb3J0c19hbGxfcG9zaXhfYWlfZmxhZ3MgKCkK
ICAgICAgJiYgaGludHMgJiYgaGludHMtPmFpX2ZhbWlseSA9PSBQRl9VTlNQ
RUMpCiAgICB7CiAgICAgIG5oaW50cyA9ICpoaW50czsKICAgICAgaGludHMg
PSAmbmhpbnRzOwogICAgICBuaGludHMuYWlfZmxhZ3MgfD0gQUlfQUxMOwog
ICAgfQogIGludCByZXQgPSB3MzJfdG9fZ2FpX2VyciAoZ2V0YWRkcmluZm8g
KGhvc3RuYW1lLCBzZXJ2bmFtZSwgaGludHMsIHJlcykpOwogIC8qIEFsd2F5
cyBjb3B5IG92ZXIgdG8gc2VsZi1hbGxvY2F0ZWQgbWVtb3J5LiAqLwogIGlm
ICghcmV0KQogICAgewogICAgICBkdXByZXMgPSBnYV9kdXBsaXN0ICgqcmVz
LCBmYWxzZSk7CiAgICAgIGZyZWVhZGRyaW5mbyAoKnJlcyk7CiAgICAgICpy
ZXMgPSBkdXByZXM7CiAgICAgIGlmICghZHVwcmVzKQoJcmV0dXJuIEVBSV9N
RU1PUlk7CiAgICB9CiAgLyogQUlfVjRNQVBQRUQgYW5kIEFJX0FMTCBhcmUg
bm90IHN1cHBvcnRlZCBwcmlvciB0byBWaXN0YS4gIFNvLCB3aGF0CiAgICAg
d2UgZG8gaGVyZSBpcyB0byBlbXVsYXRlIEFJX1Y0TUFQUEVELiAgSWYgbm8g
SVB2NiBhZGRyZXNzZXMgYXJlCiAgICAgcmV0dXJuZWQsIG9yIHRoZSBBSV9B
TEwgZmxhZyBpcyBzZXQsIHdlIHRyeSB3aXRoIEFGX0lORVQgYWdhaW4sIGFu
ZAogICAgIGNvbnZlcnQgdGhlIHJldHVybmVkIElQdjQgYWRkcmVzc2VzIGlu
dG8gdjQtaW4tdjYgZW50cmllcy4gIFRoaXMKICAgICBpcyBkb25lIGluIGdh
X2R1cCBpZiB0aGUgdjRtYXBwZWQgZmxhZyBpcyBzZXQuICovCiAgaWYgKCF3
aW5jYXAuc3VwcG9ydHNfYWxsX3Bvc2l4X2FpX2ZsYWdzICgpCiAgICAgICYm
IGhpbnRzLT5haV9mYW1pbHkgPT0gQUZfSU5FVDYKICAgICAgJiYgKGhpbnRz
LT5haV9mbGFncyAmIEFJX1Y0TUFQUEVEKQogICAgICAmJiAocmV0ID09IEVB
SV9OT0RBVEEgfHwgcmV0ID09IEVBSV9OT05BTUUKCSAgfHwgKGhpbnRzLT5h
aV9mbGFncyAmIEFJX0FMTCkpKQogICAgewogICAgICBzdHJ1Y3QgYWRkcmlu
Zm8gKnY0cmVzOwogICAgICBuaGludHMgPSAqaGludHM7CiAgICAgIG5oaW50
cy5haV9mYW1pbHkgPSBBRl9JTkVUOwogICAgICBpbnQgcmV0MiA9IHczMl90
b19nYWlfZXJyIChnZXRhZGRyaW5mbyAoaG9zdG5hbWUsIHNlcnZuYW1lLAoJ
CQkJCSAgICAgICZuaGludHMsICZ2NHJlcykpOwogICAgICBpZiAoIXJldDIp
Cgl7CgkgIGR1cHJlcyA9IGdhX2R1cGxpc3QgKHY0cmVzLCB0cnVlKTsKCSAg
ZnJlZWFkZHJpbmZvICh2NHJlcyk7CgkgIGlmICghZHVwcmVzKQoJICAgIHsK
CSAgICAgIGlmICghcmV0KQoJCWlwdjRfZnJlZWFkZHJpbmZvICgqcmVzKTsK
CSAgICAgIHJldHVybiBFQUlfTUVNT1JZOwoJICAgIH0KCSAgLyogSWYgYSBs
aXN0IG9mIHY2IGFkZHJlc3NlcyBleGlzdHMsIGFwcGVuZCB0aGUgdjQtaW4t
djYgYWRkcmVzcwoJICAgICBsaXN0LiAgT3RoZXJ3aXNlIGp1c3QgcmV0dXJu
IHRoZSB2NC1pbi12NiBhZGRyZXNzIGxpc3QuICovCgkgIGlmICghcmV0KQoJ
ICAgIHsKCSAgICAgIHN0cnVjdCBhZGRyaW5mbyAqcHRyOwoJICAgICAgZm9y
IChwdHIgPSAqcmVzOyBwdHItPmFpX25leHQ7IHB0ciA9IHB0ci0+YWlfbmV4
dCkKCQk7CgkgICAgICBwdHItPmFpX25leHQgPSBkdXByZXM7CgkgICAgfQoJ
ICBlbHNlCgkgICAgKnJlcyA9IGR1cHJlczsKCSAgcmV0ID0gMDsKCX0KICAg
IH0KICByZXR1cm4gcmV0Owp9CgpleHRlcm4gIkMiIGludApjeWd3aW5fZ2V0
bmFtZWluZm8gKGNvbnN0IHN0cnVjdCBzb2NrYWRkciAqc2EsIHNvY2tsZW5f
dCBzYWxlbiwKCQkgICAgY2hhciAqaG9zdCwgc2l6ZV90IGhvc3RsZW4sIGNo
YXIgKnNlcnYsCgkJICAgIHNpemVfdCBzZXJ2bGVuLCBpbnQgZmxhZ3MpCnsK
ICBteWZhdWx0IGVmYXVsdDsKICBpZiAoZWZhdWx0LmZhdWx0ZWQgKEVGQVVM
VCkpCiAgICByZXR1cm4gRUFJX1NZU1RFTTsKICBsb2FkX2lwdjYgKCk7CiAg
aWYgKCFnZXRuYW1laW5mbykKICAgIHJldHVybiBpcHY0X2dldG5hbWVpbmZv
IChzYSwgc2FsZW4sIGhvc3QsIGhvc3RsZW4sIHNlcnYsIHNlcnZsZW4sIGZs
YWdzKTsKCiAgLyogV2hlbiB0aGUgaW5jb21pbmcgcG9ydCBudW1iZXIgaXMg
c2V0IHRvIDAsIFdpbnNvY2sncyBnZXRuYW1laW5mbwogICAgIHJldHVybnMg
d2l0aCBlcnJvciBXU0FOT19EQVRBIGluc3RlYWQgb2Ygc2ltcGx5IGlnbm9y
aW5nIHRoZSBwb3J0LgogICAgIFRvIGF2b2lkIHRoaXMgc3RyYW5nZSBiZWhh
dmlvdXIsIHdlIGNoZWNrIG1hbnVhbGx5LCBpZiB0aGUgcG9ydCBudW1iZXIK
ICAgICBpcyAwLiAgSWYgc28sIHNldCB0aGUgTklfTlVNRVJJQ1NFUlYgZmxh
ZyB0byBhdm9pZCB0aGlzIHByb2JsZW0uICovCiAgc3dpdGNoIChzYS0+c2Ff
ZmFtaWx5KQogICAgewogICAgY2FzZSBBRl9JTkVUOgogICAgICBpZiAoKChz
dHJ1Y3Qgc29ja2FkZHJfaW4gKikgc2EpLT5zaW5fcG9ydCA9PSAwKQoJZmxh
Z3MgfD0gTklfTlVNRVJJQ1NFUlY7CiAgICAgIGJyZWFrOwogICAgY2FzZSBB
Rl9JTkVUNjoKICAgICAgaWYgKCgoc3RydWN0IHNvY2thZGRyX2luNiAqKSBz
YSktPnNpbjZfcG9ydCA9PSAwKQoJZmxhZ3MgfD0gTklfTlVNRVJJQ1NFUlY7
CiAgICAgIGJyZWFrOwogICAgfQogIGludCByZXQgPSB3MzJfdG9fZ2FpX2Vy
ciAoZ2V0bmFtZWluZm8gKHNhLCBzYWxlbiwgaG9zdCwgaG9zdGxlbiwgc2Vy
diwKCQkJCQkgc2VydmxlbiwgZmxhZ3MpKTsKICBpZiAocmV0KQogICAgc2V0
X3dpbnNvY2tfZXJybm8gKCk7CiAgcmV0dXJuIHJldDsKfQoKLyogVGhlIGJl
bG93IGZ1bmN0aW9uIGhhcyBiZWVuIHRha2VuIGZyb20gT3BlbkJTRCdzIHNy
Yy9zeXMvbmV0aW5ldDYvaW42LmMuICovCgovKgogKiBDb3B5cmlnaHQgKEMp
IDE5OTUsIDE5OTYsIDE5OTcsIGFuZCAxOTk4IFdJREUgUHJvamVjdC4KICog
QWxsIHJpZ2h0cyByZXNlcnZlZC4KICoKICogUmVkaXN0cmlidXRpb24gYW5k
IHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRo
b3V0CiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0
aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucwogKiBhcmUgbWV0OgogKiAx
LiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4g
dGhlIGFib3ZlIGNvcHlyaWdodAogKiAgICBub3RpY2UsIHRoaXMgbGlzdCBv
ZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCiAq
IDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJv
ZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAqICAgIG5vdGljZSwgdGhpcyBs
aXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1l
ciBpbiB0aGUKICogICAgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0
ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KICogMy4g
TmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgcHJvamVjdCBub3IgdGhlIG5hbWVz
IG9mIGl0cyBjb250cmlidXRvcnMKICogICAgbWF5IGJlIHVzZWQgdG8gZW5k
b3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNv
ZnR3YXJlCiAqICAgIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBw
ZXJtaXNzaW9uLgogKgogKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZ
IFRIRSBQUk9KRUNUIEFORCBDT05UUklCVVRPUlMgYGBBUyBJUycnIEFORAog
KiBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElO
RywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUKICogSU1QTElFRCBXQVJSQU5U
SUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJU
SUNVTEFSIFBVUlBPU0UKICogQVJFIERJU0NMQUlNRUQuICBJTiBOTyBFVkVO
VCBTSEFMTCBUSEUgUFJPSkVDVCBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxF
CiAqIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BF
Q0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMCiAqIERBTUFHRVMg
KElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBP
RiBTVUJTVElUVVRFIEdPT0RTCiAqIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVT
RSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9O
KQogKiBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFC
SUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVAogKiBMSUFCSUxJ
VFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lT
RSkgQVJJU0lORyBJTiBBTlkgV0FZCiAqIE9VVCBPRiBUSEUgVVNFIE9GIFRI
SVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJ
VFkgT0YKICogU1VDSCBEQU1BR0UuCiAqLwoKLyoKICogQ29weXJpZ2h0IChj
KSAxOTgyLCAxOTg2LCAxOTkxLCAxOTkzCiAqICAgICAgVGhlIFJlZ2VudHMg
b2YgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYS4gIEFsbCByaWdodHMg
cmVzZXJ2ZWQuCiAqCiAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291
cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAogKiBtb2Rp
ZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9s
bG93aW5nIGNvbmRpdGlvbnMKICogYXJlIG1ldDoKICogMS4gUmVkaXN0cmli
dXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBj
b3B5cmlnaHQKICogICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9u
cyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgogKiAyLiBSZWRpc3Ry
aWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFi
b3ZlIGNvcHlyaWdodAogKiAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25k
aXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlCiAq
ICAgIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92
aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCiAqIDMuIE5laXRoZXIgdGhl
IG5hbWUgb2YgdGhlIFVuaXZlcnNpdHkgbm9yIHRoZSBuYW1lcyBvZiBpdHMg
Y29udHJpYnV0b3JzCiAqICAgIG1heSBiZSB1c2VkIHRvIGVuZG9yc2Ugb3Ig
cHJvbW90ZSBwcm9kdWN0cyBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZQog
KiAgICB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lv
bi4KICoKICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgUkVH
RU5UUyBBTkQgQ09OVFJJQlVUT1JTIGBgQVMgSVMnJyBBTkQKICogQU5ZIEVY
UFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBO
T1QgTElNSVRFRCBUTywgVEhFCiAqIElNUExJRUQgV0FSUkFOVElFUyBPRiBN
RVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQ
VVJQT1NFCiAqIEFSRSBESVNDTEFJTUVELiAgSU4gTk8gRVZFTlQgU0hBTEwg
VEhFIFJFR0VOVFMgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRQogKiBGT1Ig
QU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVY
RU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTAogKiBEQU1BR0VTIChJTkNMVURJ
TkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJ
VFVURSBHT09EUwogKiBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEs
IE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikKICogSE9X
RVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBX
SEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QKICogTElBQklMSVRZLCBPUiBU
T1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJ
TkcgSU4gQU5ZIFdBWQogKiBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRX
QVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GCiAq
IFNVQ0ggREFNQUdFLgogKgogKiAgICAgIEAoIylpbi5jICAgICAgICA4LjIg
KEJlcmtlbGV5KSAxMS8xNS85MwogKi8KCnN0YXRpYyBpbnQKaW42X2FyZV9w
cmVmaXhfZXF1YWwgKHN0cnVjdCBpbjZfYWRkciAqcDEsIHN0cnVjdCBpbjZf
YWRkciAqcDIsIGludCBsZW4pCnsKICBpbnQgYnl0ZWxlbiwgYml0bGVuOwoK
ICAvKiBzYW5pdHkgY2hlY2sgKi8KICBpZiAoMCA+IGxlbiB8fCBsZW4gPiAx
MjgpCiAgICByZXR1cm4gMDsKCiAgYnl0ZWxlbiA9IGxlbiAvIDg7CiAgYml0
bGVuID0gbGVuICUgODsKCiAgaWYgKG1lbWNtcCAoJnAxLT5zNl9hZGRyLCAm
cDItPnM2X2FkZHIsIGJ5dGVsZW4pKQogICAgcmV0dXJuIDA7CiAgLyogbGVu
ID09IDEyOCBpcyBvayBiZWNhdXNlIGJpdGxlbiA9PSAwIHRoZW4gKi8KICBp
ZiAoYml0bGVuICE9IDAgJiYKICAgICAgcDEtPnM2X2FkZHJbYnl0ZWxlbl0g
Pj4gKDggLSBiaXRsZW4pICE9CiAgICAgIHAyLT5zNl9hZGRyW2J5dGVsZW5d
ID4+ICg4IC0gYml0bGVuKSkKICAgIHJldHVybiAwOwoKICByZXR1cm4gMTsK
fQo=

--=====================_71629406==_--
