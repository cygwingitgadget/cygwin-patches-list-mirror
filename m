Return-Path: <cygwin-patches-return-7490-listarch-cygwin-patches=sources.redhat.com@cygwin.com>
Received: (qmail 5313 invoked by alias); 23 Aug 2011 05:02:20 -0000
Received: (qmail 5302 invoked by uid 22791); 23 Aug 2011 05:02:15 -0000
X-SWARE-Spam-Status: No, hits=1.5 required=5.0	tests=AWL,BAYES_50,DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW,SARE_OBFU_PROFILE,TW_CX,TW_DB,TW_DC,TW_DW,TW_FN,TW_LG,TW_XC,TW_XD,T_FRT_PROFILE1,T_FRT_PROFILE2,T_TO_NO_BRKTS_FREEMAIL
X-Spam-Check-By: sourceware.org
Received: from mail-yx0-f171.google.com (HELO mail-yx0-f171.google.com) (209.85.213.171)    by sourceware.org (qpsmtpd/0.43rc1) with ESMTP; Tue, 23 Aug 2011 05:01:46 +0000
Received: by yxs7 with SMTP id 7so2647666yxs.2        for <cygwin-patches@cygwin.com>; Mon, 22 Aug 2011 22:01:45 -0700 (PDT)
Received: by 10.236.179.72 with SMTP id g48mr20290587yhm.50.1314075705526;        Mon, 22 Aug 2011 22:01:45 -0700 (PDT)
Received: from [192.168.1.2] ([183.106.96.61])        by mx.google.com with ESMTPS id f48sm1079605yhh.70.2011.08.22.22.01.40        (version=SSLv3 cipher=OTHER);        Mon, 22 Aug 2011 22:01:43 -0700 (PDT)
Message-ID: <4E533502.4060207@gmail.com>
Date: Tue, 23 Aug 2011 05:02:00 -0000
From: jojelino <jojelino@gmail.com>
User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:8.0a2) Gecko/20110820 Thunderbird/8.0a2
MIME-Version: 1.0
To: cygwin-patches@cygwin.com
Subject: Re: [PATCH] profile support
References: <CADEiHqLZAuJkDJKh4pJ4AOJ1JwUwV06RSkq3GdNihSKhiUswGw@mail.gmail.com> <20110820084946.GA30978@calimero.vinschen.de>
In-Reply-To: <20110820084946.GA30978@calimero.vinschen.de>
Content-Type: multipart/mixed; boundary="------------000402000709070504070500"
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Id: <cygwin-patches.cygwin.com>
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sourceware.org/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sourceware.org/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Mail-Followup-To: cygwin-patches@cygwin.com
X-SW-Source: 2011-q3/txt/msg00066.txt.bz2

This is a multi-part message in MIME format.
--------------000402000709070504070500
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-length: 3411

On 2011-08-20 PM 5:49, Corinna Vinschen wrote:
> Hi Jin-woo,
>
> On Aug 20 06:59, jojelino wrote:
>> On 2011-08-20 AM 6:48, jojelino wrote:
>>> cd i686-pc-cygwin/winsup/cygwin;rm *.o;make profile=1
>>>
>>> it would work.
>> Please ignore attachment from 6:48, i have mistaken by attaching
>> invalid winsup-profile-support.diff
>>
>> So i am replying.
>
> Yes, but to the wrong list ;-)
>
> Would you mind to resend your patches as a reply to your original
> threada on the cygwin-patches list?  That's where the official
> patch submissions are suppsoed to go.
>
> Btw., you don't have to attach the ChangeLog.  For the lazy reader
> it's easier if the ChangeLog is just inline in your mail.  If you
> want to avoid more spam, just omit your email address from the
> ChangeLog date/name/email header.
Yes, I see.
>
> But there's something I don't grok in your patch:
>
Yes, I need to spend more time.
> In dll_crt0_0:
>
>    +  _monstartup();
>
> but
>
>    +#ifdef PROFILE
>    +  atexit (&_mcleanup);
>    +#endif
>
> Shouldn't the call to _monstartup also be guarded with #ifdef PROFILE?
> Same question for calls to profile_thread_off and any other profiling
> code in other places.
>
Yes i was supposed to do that. thanks for pointing it out.
> In gcrt0.c:
>
>    +#ifndef PROFILE
>    void _monstartup (void) __attribute__((__constructor__));
>    -
>    +#endif
>
> #if*n*def?  Is that a typo?
No, it's not typo. it is assumed that PROFILE is defined iff make is 
invoked with profile=1, and when PROFILE defined, the patch need to have 
different invocation of _monstartup. the only reason doing this is that 
the patch make use of sec_none_nih on profile_on.
and diff you mentioned in gcrt0.c doesn't exist any longer.

changelog of winsup-profile-support-2.diff
Following patch are not effective unless you 'make profile=1'
	
	* profil.h: (struct profinfo::{queue,operational}): New member.
	(struct clk): New struct.
	* gmon.h: (struct gmonparam::comm_kcount): New member.
	* gmon.c: (s_scale): Add NO_COPY_INIT.
	(_gmonparam): Ditto.
	* profil.c: (prof): Ditto.
	(profile_off): Finish profiling request.
	(apc_spawnthread): New function.
	(profile_on): Initialize init_global_security prior to use it, and 
spawn the consumer thread by issuing APC call.
	(fake_sbrk): Use LocalAlloc instead of malloc.
	(monstartup): Claim memory for comm_kcount.
	(_mcleanup): Alter formatting of cleanup filename, decide hz which 
maximizes kcount, calculate kcount using comm_kcount. 	
	* gcrt0.c (PROFILE): Define.
	(_monstartup): Use it.
	* exceptions.cc (ctrl_c_handler): Stop the consumer thread explicitly 
to avoid deadlock.
	* external.cc (exit_process): Ditto.
	* pinfo.cc (pinfo::exit): Ditto.
	* init.cc (respawn_wow64_process): Ditto.
	 (dll_entry): call __cyg_profile_{func,tls}_{ctor,dtor} to initialize 
instrument function.
	* dcrt0.cc (dll_crt0_0): call _monstartup,atexit in proper order,
	* Makefile.in (EXTRA_DEPENDENCIES_1): Define variable.
	(EXTRA_LDFLAGS_1): Ditto.
	(profile): Ditto
	(CFLAGS): Redefine.
	(gcrt1.o): use gcrt0.c as prerequisite.
	(TEST_DLL_NAME): use EXTRA_DEPENDENCIES_?, EXTRA_LDFLAGS_?.
	* sec_helper.cc (init_global_security): Check if called twice.
	* boundbuffer.c: New file.
	* boundbuffer.h: Ditto.
	* instrument.c: Ditto.
	* instrument.h: Ditto.
changelog of winsup-makefile.diff
	* Makefile.common (ALL_CFLAGS): Replace simple expansion to recursive 
expansion.

--------------000402000709070504070500
Content-Type: text/plain;
 name="winsup-profile-support-2.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="winsup-profile-support-2.diff"
Content-length: 40948

SW5kZXg6IHdpbnN1cC9jeWd3aW4vTWFrZWZpbGUuaW4KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3
aW4vTWFrZWZpbGUuaW4sdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjQ4CmRp
ZmYgLXUgLXAgLXIxLjI0OCBNYWtlZmlsZS5pbgotLS0gd2luc3VwL2N5Z3dp
bi9NYWtlZmlsZS5pbgkyIE1heSAyMDExIDE5OjE0OjM5IC0wMDAwCTEuMjQ4
CisrKyB3aW5zdXAvY3lnd2luL01ha2VmaWxlLmluCTIyIEF1ZyAyMDExIDIw
OjI3OjU3IC0wMDAwCkBAIC0yMzMsNyArMjMzLDcgQEAgRVhUUkFMSUJTOj1s
aWJhdXRvbW9kZS5hIGxpYmJpbm1vZGUuYSBsaQogSU5TVE9CSlM6PWF1dG9t
b2RlLm8gYmlubW9kZS5vIHRleHRtb2RlLm8gdGV4dHJlYWRtb2RlLm8KIFRB
UkdFVF9MSUJTOj0kKExJQl9OQU1FKSAkKENZR1dJTl9TVEFSVCkgJChHTU9O
X1NUQVJUKSAkKExJQkdNT05fQSkgJChTVUJMSUJTKSAkKElOU1RPQkpTKSAk
KEVYVFJBTElCUykKIAotaWZuZXEgIiR7ZmlsdGVyIC1PJSwkKENGTEFHUyl9
IiAiIgoraWZuZXEgIiIgIiIKIGN5Z2hlYXBfQ0ZMQUdTOj0tZm9taXQtZnJh
bWUtcG9pbnRlcgogY3lndGhyZWFkX0NGTEFHUzo9LWZvbWl0LWZyYW1lLXBv
aW50ZXIKIGN5Z3Rsc19DRkxBR1M6PS1mb21pdC1mcmFtZS1wb2ludGVyCkBA
IC0yODYsNiArMjg2LDE2IEBAIHN5c2NhbGxzX0NGTEFHUzo9LWZvbWl0LWZy
YW1lLXBvaW50ZXIKIHN5c2NvbmZfQ0ZMQUdTOj0tZm9taXQtZnJhbWUtcG9p
bnRlcgogdWluZm9fQ0ZMQUdTOj0tZm9taXQtZnJhbWUtcG9pbnRlcgogZW5k
aWYKK0VYVFJBX0RFUEVOREVOQ0lFU18xPWdjcnQxLm8gYm91bmRidWZmZXIu
byBpbnN0cnVtZW50Lm8gZ21vbi5vIG1jb3VudC5vIHByb2ZpbC5vCitFWFRS
QV9MREZMQUdTXzE9Li4vdzMyYXBpL2xpYi9saWJrZXJuZWwzMi5hCitpZmVx
ICckKHByb2ZpbGUpJyAnMScKK292ZXJyaWRlIENGTEFHUz0tTU1EIC1EUFJP
RklMRSAkeyQoKkYpX0NGTEFHU30gJHtQUk9GSUxFX0NGTEFHU18ke3NoZWxs
IGVjaG8gJChFWFRSQV9ERVBFTkRFTkNJRVNfMToubz0pIHB0aHJlYWQga2Vy
bmVsMzIgbWFsbG9jX3dyYXBwZXIgcHNldWRvLXJlbG9jIGxpYnN0ZGN4eF93
cmFwcGVyIGN4eCBzeW5jfGdyZXAgLXEgIiQoKkYpIjtyZXQ9JCQ/O2VjaG8g
JCRyZXQ7ZWNobyAkKCpGKSAkJHJldCAxPiYyfX0gLWZtZXJnZS1jb25zdGFu
dHMgLWZ0cmFjZXIgXAorICAtbW5vLXVzZS1saWJzdGRjLXdyYXBwZXJzICQo
Q0NFWFRSQSkKK1BST0ZJTEVfQ0ZMQUdTXzE9LU80IC1tYXJjaD1jb3JlMiAt
bWZwbWF0aD1zc2UgLW1zdGFja3JlYWxpZ24gLWcgLXBnIC1maW5zdHJ1bWVu
dC1mdW5jdGlvbnMKK1BST0ZJTEVfQ0ZMQUdTXzA9LU80IC1tYXJjaD1jb3Jl
MiAtbWZwbWF0aD1zc2UgLW1zdGFja3JlYWxpZ24gLWcgLWZvbWl0LWZyYW1l
LXBvaW50ZXIgLVduby1lcnJvcj11bnVzZWQtYnV0LXNldC12YXJpYWJsZQor
Z2NydDEubzogJChzcmNkaXIpL2djcnQwLmMKKwkkKENPTVBJTEVfQ0MpIC1v
ICQoQEQpLyQoKkYpJG8gJDwKK2VuZGlmCiAKIGZoYW5kbGVyX3Byb2NfQ0ZM
QUdTKz0tRFVTRVJOQU1FPSJcIiQoVVNFUilcIiIgLURIT1NUTkFNRT0iXCIk
KEhPU1ROQU1FKVwiIgogZmhhbmRsZXJfcHJvY19DRkxBR1MrPS1ER0NDX1ZF
UlNJT049IlwiYCQoQ0MpIC12IDI+JjEgfCB0YWlsIC1uIDFgXCIiCkBAIC0z
OTAsMTUgKzQwMCwxMyBAQCBtYWludGFpbmVyLWNsZWFuIHJlYWxjbGVhbjog
Y2xlYW4KIAlAZWNobyAiVGhpcyBjb21tYW5kIGlzIGludGVuZGVkIGZvciBt
YWludGFpbmVycyB0byB1c2U7IgogCUBlY2hvICJpdCBkZWxldGVzIGZpbGVz
IHRoYXQgbWF5IHJlcXVpcmUgc3BlY2lhbCB0b29scyB0byByZWJ1aWxkLiIK
IAktcm0gLWZyIGNvbmZpZ3VyZQotCi0KICMgUnVsZSB0byBidWlsZCBjeWd3
aW4uZGxsCi0kKFRFU1RfRExMX05BTUUpOiAkKExEU0NSSVBUKSBkbGxmaXhk
YmcgJChETExfT0ZJTEVTKSAkKERMTF9JTVBPUlRTKSAkKExJQlNFUlZFUikg
JChMSUJDKSAkKExJQk0pICQoQVBJX1ZFUikgTWFrZWZpbGUgd2ludmVyX3N0
YW1wCiskKFRFU1RfRExMX05BTUUpOiAkKExEU0NSSVBUKSBkbGxmaXhkYmcg
JChFWFRSQV9ERVBFTkRFTkNJRVNfJChwcm9maWxlKSkgJChETExfT0ZJTEVT
KSAkKERMTF9JTVBPUlRTKSAkKExJQlNFUlZFUikgJChMSUJDKSAkKExJQk0p
ICQoQVBJX1ZFUikgTWFrZWZpbGUgd2ludmVyX3N0YW1wCiAJJChDWFgpICQo
Q1hYRkxBR1MpIC1XbCwtLWdjLXNlY3Rpb25zICQobm9zdGRsaWIpIC1XbCwt
VCQoZmlyc3R3b3JkICReKSBcCiAJLVdsLC0taGVhcD0wIC1XbCwtLW91dC1p
bXBsaWIsY3lnZGxsLmEgLXNoYXJlZCAtbyAkQCBcCi0JLWUgJChETExfRU5U
UlkpICQoREVGX0ZJTEUpICQoRExMX09GSUxFUykgdmVyc2lvbi5vIHdpbnZl
ci5vIFwKKwktZSAkKERMTF9FTlRSWSkgJChERUZfRklMRSkgJChFWFRSQV9E
RVBFTkRFTkNJRVNfJChwcm9maWxlKSkgJChETExfT0ZJTEVTKSB2ZXJzaW9u
Lm8gd2ludmVyLm8gXAogCSQoTUFMTE9DX09CSikgJChMSUJTRVJWRVIpICQo
TElCTSkgJChMSUJDKSBcCi0JLWxnY2MgJChETExfSU1QT1JUUykgLVdsLC1N
YXAsY3lnd2luLm1hcAorCS1sZ2NjICQoRVhUUkFfTERGTEFHU18kKHByb2Zp
bGUpKSAkKERMTF9JTVBPUlRTKSAtV2wsLU1hcCxjeWd3aW4ubWFwCiAJQCQo
d29yZCAyLCReKSAkKE9CSkRVTVApICQoT0JKQ09QWSkgJEAgJHtwYXRzdWJz
dCAlMC5kbGwsJTEuZGJnLCRAfQogCUBsbiAtZiAkQCBuZXctJChETExfTkFN
RSkKIApJbmRleDogd2luc3VwL2N5Z3dpbi9kY3J0MC5jYwo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5
Z3dpbi9kY3J0MC5jYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40MDYKZGlm
ZiAtdSAtcCAtcjEuNDA2IGRjcnQwLmNjCi0tLSB3aW5zdXAvY3lnd2luL2Rj
cnQwLmNjCTE4IEF1ZyAyMDExIDE1OjU5OjE2IC0wMDAwCTEuNDA2CisrKyB3
aW5zdXAvY3lnd2luL2RjcnQwLmNjCTIyIEF1ZyAyMDExIDIwOjI3OjU3IC0w
MDAwCkBAIC0zNyw3ICszNyw5IEBAIGRldGFpbHMuICovCiAjaW5jbHVkZSAi
Y3lneGRyLmgiCiAjaW5jbHVkZSAiZmVudi5oIgogI2luY2x1ZGUgIm50ZGxs
LmgiCi0KKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVkZSAicHJvZmlsLmgiCisj
ZW5kaWYKICNkZWZpbmUgTUFYX0FUX0ZJTEVfTEVWRUwgMTAKIAogI2RlZmlu
ZSBQUkVNQUlOX0xFTiAoc2l6ZW9mICh1c2VyX2RhdGEtPnByZW1haW4pIC8g
c2l6ZW9mICh1c2VyX2RhdGEtPnByZW1haW5bMF0pKQpAQCAtNjQ4LDcgKzY1
MCwxMSBAQCBpbml0X3dpbmRvd3Nfc3lzdGVtX2RpcmVjdG9yeSAoKQogICB3
aW5kb3dzX3N5c3RlbV9kaXJlY3Rvcnlbd2luZG93c19zeXN0ZW1fZGlyZWN0
b3J5X2xlbmd0aCsrXSA9IEwnXFwnOwogICB3aW5kb3dzX3N5c3RlbV9kaXJl
Y3Rvcnlbd2luZG93c19zeXN0ZW1fZGlyZWN0b3J5X2xlbmd0aF0gPSBMJ1ww
JzsKIH0KLQorI2lmZGVmIFBST0ZJTEUKK2V4dGVybiAiQyIgeworICB2b2lk
IF9tY2xlYW51cCAodm9pZCk7Cit9CisjZW5kaWYKIHZvaWQKIGRsbF9jcnQw
XzAgKCkKIHsKQEAgLTY5NSw2ICs3MDEsMTAgQEAgZGxsX2NydDBfMCAoKQog
CSAgICBicmVhazsKIAl9CiAgICAgfQorI2lmZGVmIFBST0ZJTEUKKyAgaWYg
KCFpbl9mb3JrZWUpCisJYXRleGl0KCZfbWNsZWFudXApOworI2VuZGlmCiAK
ICAgdXNlcl9kYXRhLT50aHJlYWRpbnRlcmZhY2UtPkluaXQgKCk7CiAKSW5k
ZXg6IHdpbnN1cC9jeWd3aW4vZXhjZXB0aW9ucy5jYwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dp
bi9leGNlcHRpb25zLmNjLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjM2MApk
aWZmIC11IC1wIC1yMS4zNjAgZXhjZXB0aW9ucy5jYwotLS0gd2luc3VwL2N5
Z3dpbi9leGNlcHRpb25zLmNjCTMgQXVnIDIwMTEgMTY6NDA6NDcgLTAwMDAJ
MS4zNjAKKysrIHdpbnN1cC9jeWd3aW4vZXhjZXB0aW9ucy5jYwkyMiBBdWcg
MjAxMSAyMDoyNzo1NyAtMDAwMApAQCAtMzEsNyArMzEsOSBAQCBkZXRhaWxz
LiAqLwogI2luY2x1ZGUgImNoaWxkX2luZm8uaCIKICNpbmNsdWRlICJudGRs
bC5oIgogI2luY2x1ZGUgImV4Y2VwdGlvbi5oIgotCisjaWZkZWYgUFJPRklM
RQorI2luY2x1ZGUgInByb2ZpbC5oIgorI2VuZGlmCiAjZGVmaW5lIENBTExf
SEFORExFUl9SRVRSWV9PVVRFUiAxMAogI2RlZmluZSBDQUxMX0hBTkRMRVJf
UkVUUllfSU5ORVIgMTAKIApAQCAtOTM3LDYgKzkzOSw5IEBAIGN0cmxfY19o
YW5kbGVyIChEV09SRCB0eXBlKQogICAgICAgaWYgKG15c2VsZi0+Y3lnc3Rh
cnRlZCkJLyogV2FzIHRoaXMgcHJvY2VzcyBjcmVhdGVkIGJ5IGEgY3lnd2lu
IHByb2Nlc3M/ICovCiAJcmV0dXJuIFRSVUU7CQkvKiBZZXMuICBMZXQgdGhl
IHBhcmVudCBldmVudHVhbGx5IGhhbmRsZSBDVFJMLUMgaXNzdWVzLiAqLwog
ICAgICAgZGVidWdfcHJpbnRmICgiZXhpdGluZyB3aXRoIHN0YXR1cyAlcCIs
IFNUQVRVU19DT05UUk9MX0NfRVhJVCk7CisjaWZkZWYgUFJPRklMRQorICAg
ICAgcHJvZmlsZV90aHJlYWRfb2ZmKCk7CisjZW5kaWYKICAgICAgIEV4aXRQ
cm9jZXNzIChTVEFUVVNfQ09OVFJPTF9DX0VYSVQpOwogICAgIH0KIApJbmRl
eDogd2luc3VwL2N5Z3dpbi9leHRlcm5hbC5jYwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9l
eHRlcm5hbC5jYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMjMKZGlmZiAt
dSAtcCAtcjEuMTIzIGV4dGVybmFsLmNjCi0tLSB3aW5zdXAvY3lnd2luL2V4
dGVybmFsLmNjCTEgSnVuIDIwMTEgMDE6MjA6MjcgLTAwMDAJMS4xMjMKKysr
IHdpbnN1cC9jeWd3aW4vZXh0ZXJuYWwuY2MJMjIgQXVnIDIwMTEgMjA6Mjc6
NTcgLTAwMDAKQEAgLTMwLDcgKzMwLDkgQEAgZGV0YWlscy4gKi8KICNpbmNs
dWRlIDxzdGRsaWIuaD4KICNpbmNsdWRlIDx3Y2hhci5oPgogI2luY2x1ZGUg
PGlwdHlwZXMuaD4KLQorI2lmZGVmIFBST0ZJTEUKKyNpbmNsdWRlICJwcm9m
aWwuaCIKKyNlbmRpZgogY2hpbGRfaW5mbyAqZ2V0X2N5Z3dpbl9zdGFydHVw
X2luZm8gKCk7CiBzdGF0aWMgdm9pZCBleGl0X3Byb2Nlc3MgKFVJTlQsIGJv
b2wpIF9fYXR0cmlidXRlX18oKG5vcmV0dXJuKSk7CiAKQEAgLTE4MCw2ICsx
ODIsOSBAQCBzeW5jX3dpbmVudiAoKQogc3RhdGljIHZvaWQKIGV4aXRfcHJv
Y2VzcyAoVUlOVCBzdGF0dXMsIGJvb2wgdXNlVGVybWluYXRlUHJvY2VzcykK
IHsKKyNpZmRlZiBQUk9GSUxFCisgIHByb2ZpbGVfdGhyZWFkX29mZigpOwor
I2VuZGlmCiAgIHBpZF90IHBpZCA9IGdldHBpZCAoKTsKICAgZXh0ZXJuYWxf
cGluZm8gKiBlcCA9IGZpbGxvdXRfcGluZm8gKHBpZCwgMSk7CiAgIERXT1JE
IGR3cGlkID0gZXAgPyBlcC0+ZHdQcm9jZXNzSWQgOiBwaWQ7CkluZGV4OiB3
aW5zdXAvY3lnd2luL2djcnQwLmMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpS
Q1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3aW4vZ2NydDAuYyx2
CnJldHJpZXZpbmcgcmV2aXNpb24gMS41CmRpZmYgLXUgLXAgLXIxLjUgZ2Ny
dDAuYwotLS0gd2luc3VwL2N5Z3dpbi9nY3J0MC5jCTExIFNlcCAyMDAxIDIw
OjAxOjAwIC0wMDAwCTEuNQorKysgd2luc3VwL2N5Z3dpbi9nY3J0MC5jCTIy
IEF1ZyAyMDExIDIwOjI4OjAwIC0wMDAwCkBAIC0zMyw3ICszMyw5IEBAIF9t
b25zdGFydHVwICh2b2lkKQogICAgIHJldHVybjsKIAogICBtb25zdGFydHVw
ICgodV9sb25nKSAmZXByb2wsICh1X2xvbmcpICZldGV4dCk7CisjaWZuZGVm
IFBST0ZJTEUKICAgYXRleGl0ICgmX21jbGVhbnVwKTsKKyNlbmRpZgogfQog
CiBhc20gKCIudGV4dCIpOwpJbmRleDogd2luc3VwL2N5Z3dpbi9nbW9uLmMK
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3Jj
L3dpbnN1cC9jeWd3aW4vZ21vbi5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjcKZGlmZiAtdSAtcCAtcjEuNyBnbW9uLmMKLS0tIHdpbnN1cC9jeWd3aW4v
Z21vbi5jCTMwIEF1ZyAyMDEwIDAxOjU3OjM2IC0wMDAwCTEuNworKysgd2lu
c3VwL2N5Z3dpbi9nbW9uLmMJMjIgQXVnIDIwMTEgMjA6Mjg6MDAgLTAwMDAK
QEAgLTM0LDExICszNCwxNyBAQAogI2lmICFkZWZpbmVkKGxpbnQpICYmIGRl
ZmluZWQoTElCQ19TQ0NTKQogc3RhdGljIGNoYXIgcmNzaWRbXSA9ICIkT3Bl
bkJTRDogZ21vbi5jLHYgMS44IDE5OTcvMDcvMjMgMjE6MTE6Mjcga3N0YWls
ZXkgRXhwICQiOwogI2VuZGlmCi0KKyNpZmRlZiBQUk9GSUxFCisjaW5jbHVk
ZSAid2luc3VwLmgiCisjZW5kaWYKICNpbmNsdWRlICJ3aW5sZWFuLmgiCiAj
aW5jbHVkZSA8ZmNudGwuaD4KICNpbmNsdWRlIDxzdGRpby5oPgogI2luY2x1
ZGUgPHVuaXN0ZC5oPgorI2lmZGVmIFBST0ZJTEUKKyNpbmNsdWRlIDxzdHJp
bmcuaD4KKyNpbmNsdWRlIDxtYXRoLmg+CisjZW5kaWYKICNpbmNsdWRlIDxn
bW9uLmg+CiAjaW5jbHVkZSA8c3RkbGliLmg+CiAKQEAgLTQ3LDkgKzUzLDE3
IEBAIHN0YXRpYyBjaGFyIHJjc2lkW10gPSAiJE9wZW5CU0Q6IGdtb24uYywK
IC8qIFhYWCBuZWVkZWQ/ICovCiAvL2V4dGVybiBjaGFyICptaW5icmsgX19h
c20gKCJtaW5icmsiKTsKIAotc3RydWN0IGdtb25wYXJhbSBfZ21vbnBhcmFt
ID0geyBHTU9OX1BST0ZfT0ZGIH07CitzdHJ1Y3QgZ21vbnBhcmFtCisjaWZk
ZWYgUFJPRklMRQorTk9fQ09QWV9JTklUCisjZW5kaWYKK19nbW9ucGFyYW0g
PSB7IEdNT05fUFJPRl9PRkYgfTsKIAotc3RhdGljIGludAlzX3NjYWxlOwor
c3RhdGljIGludAorI2lmZGVmIFBST0ZJTEUKK05PX0NPUFlfSU5JVAorI2Vu
ZGlmCitzX3NjYWxlOwogLyogc2VlIHByb2ZpbCgyKSB3aGVyZSB0aGlzIGlz
IGRlc2NyaWJlIChpbmNvcnJlY3RseSkgKi8KICNkZWZpbmUJCVNDQUxFXzFf
VE9fMQkweDEwMDAwTAogCkBAIC02MCw3ICs3NCw3IEBAIHZvaWQJbW9uY29u
dHJvbCBfX1AoKGludCkpOwogc3RhdGljIHZvaWQgKgogZmFrZV9zYnJrKGlu
dCBzaXplKQogewotICAgIHZvaWQgKnJ2ID0gbWFsbG9jKHNpemUpOworICAg
IHZvaWQgKnJ2ID0gTG9jYWxBbGxvYygweDQwLHNpemUpOwogICAgIGlmIChy
dikKICAgICAgIHJldHVybiBydjsKICAgICBlbHNlCkBAIC05Miw4ICsxMDYs
MTEgQEAgbW9uc3RhcnR1cChsb3dwYywgaGlnaHBjKQogCWVsc2UgaWYgKHAt
PnRvbGltaXQgPiBNQVhBUkNTKQogCQlwLT50b2xpbWl0ID0gTUFYQVJDUzsK
IAlwLT50b3NzaXplID0gcC0+dG9saW1pdCAqIHNpemVvZihzdHJ1Y3QgdG9z
dHJ1Y3QpOwotCisjaWZkZWYgUFJPRklMRQorCWNwID0gZmFrZV9zYnJrKDUg
KiBwLT5rY291bnRzaXplICsgcC0+ZnJvbXNzaXplICsgcC0+dG9zc2l6ZSk7
CisjZWxzZQogCWNwID0gZmFrZV9zYnJrKHAtPmtjb3VudHNpemUgKyBwLT5m
cm9tc3NpemUgKyBwLT50b3NzaXplKTsKKyNlbmRpZgogCWlmIChjcCA9PSAo
Y2hhciAqKS0xKSB7CiAJCUVSUigibW9uc3RhcnR1cDogb3V0IG9mIG1lbW9y
eVxuIik7CiAJCXJldHVybjsKQEAgLTEwNSw2ICsxMjIsMTAgQEAgbW9uc3Rh
cnR1cChsb3dwYywgaGlnaHBjKQogCWNwICs9IHAtPnRvc3NpemU7CiAJcC0+
a2NvdW50ID0gKHVfc2hvcnQgKiljcDsKIAljcCArPSBwLT5rY291bnRzaXpl
OworI2lmZGVmIFBST0ZJTEUKKwlwLT5jb21tX2tjb3VudD0odV9pbnQ2NF90
KiljcDsKKwljcCArPSA0KnAtPmtjb3VudHNpemU7CisjZW5kaWYKIAlwLT5m
cm9tcyA9ICh1X3Nob3J0ICopY3A7CiAKIAkvKiBYWFggbWluYnJrIG5lZWRl
ZD8gKi8KQEAgLTEzNiw2ICsxNTcsOSBAQCBtb25zdGFydHVwKGxvd3BjLCBo
aWdocGMpCiB2b2lkCiBfbWNsZWFudXAoKQogeworI2lmZGVmIFBST0ZJTEUK
Kwl1bnNpZ25lZCBpOworI2VuZGlmCiAJaW50IGZkOwogCWludCBoejsKIAlp
bnQgZnJvbWluZGV4OwpAQCAtMjA0LDggKzIyOCwxNiBAQCBfbWNsZWFudXAo
KQogCX0KICNlbHNlCiAJeworI2lmZGVmIFBST0ZJTEUKKwkgIGNoYXIgZ21v
bl9vdXRbMTAyNF07CisJICBjaGFyIHByb2NfbW9kdWxlbmFtZVsxMDI0XTsK
KwkgIEdldE1vZHVsZUZpbGVOYW1lQSgwLCBwcm9jX21vZHVsZW5hbWUsIDEw
MjQpOworCSAgc3ByaW50ZihnbW9uX291dCwgImdtb24uJXMuJWQub3V0Iiwg
c3RycmNocihwcm9jX21vZHVsZW5hbWUsICdcXCcpICsgMSwgKGludCkgR2V0
Q3VycmVudFByb2Nlc3NJZCgpKTsKKwkgIHByb2ZmaWxlID0gZ21vbl9vdXQ7
CisjZWxzZQogCSAgY2hhciBnbW9uX291dFtdID0gImdtb24ub3V0IjsKIAkg
IHByb2ZmaWxlID0gZ21vbl9vdXQ7CisjZW5kaWYKIAl9CiAjZW5kaWYKIApA
QCAtMjI0LDYgKzI1NiwzOSBAQCBfbWNsZWFudXAoKQogCSAgICBwLT5rY291
bnQsIHAtPmtjb3VudHNpemUpOwogCXdyaXRlKGxvZywgZGJ1ZiwgbGVuKTsK
ICNlbmRpZgorI2lmZGVmIFBST0ZJTEUKKyAgdV9pbnQ2NF90IG1heGNvdW50
ID0gMDsKKyAgZm9yIChpID0gMDsgaSA8IHAtPmtjb3VudHNpemUgLyAyOyBp
KyspCisJeworCSAgaWYgKHAtPmNvbW1fa2NvdW50W2ldID4gbWF4Y291bnQp
CisJCXsKKwkJICBtYXhjb3VudCA9IHAtPmNvbW1fa2NvdW50W2ldOworCQl9
CisJfQorICB1X2ludDY0X3QgcGVyZmZyZXE7CisgIFF1ZXJ5UGVyZm9ybWFu
Y2VGcmVxdWVuY3koKFBMQVJHRV9JTlRFR0VSKSAmcGVyZmZyZXEpOworICBk
b3VibGUgbG9ncGVyZmZyZXEgPSBsb2cxMChwZXJmZnJlcSksIGxvZ21heGNv
dW50ID0gbG9nMTAobWF4Y291bnQpOworICBkb3VibGUgZmxvb3Jsb2dwZXJm
ZnJlcSA9IGZsb29yKGxvZ3BlcmZmcmVxKTsKKyAgZG91YmxlIG1heGNvdW50
dGltZXVuaXQgPSBsb2dtYXhjb3VudCAtIGxvZ3BlcmZmcmVxICsgZmxvb3Js
b2dwZXJmZnJlcTsKKyAgaWYgKG1heGNvdW50dGltZXVuaXQgPiAzKQorCW1h
eGNvdW50dGltZXVuaXQgLT0gMzsKKyAgaWYgKChsb2dwZXJmZnJlcSAtIGZs
b29ybG9ncGVyZmZyZXEpIDwgbG9nMTAoNi41NSkpCisJbWF4Y291bnR0aW1l
dW5pdC0tOworICBoeiA9IChpbnQpIHBvdygxMCwgZmxvb3IoZmxvb3Jsb2dw
ZXJmZnJlcSAtIG1heGNvdW50dGltZXVuaXQpKTsKKyAgcGVyZmZyZXEgLz0g
aHo7CisjaWYgMAorICBwcmludGYoIiVkICVkIG1heGNvdW50ICVsbGQgbG9n
bWF4Y250ICVmIG1heHByZXEgJWYgaHogJWQgcGVyZmZyZXEgJWRcbiIsIEdl
dEN1cnJlbnRQcm9jZXNzSWQoKSwgR2V0Q3VycmVudFRocmVhZElkKCksIG1h
eGNvdW50LCBsb2dtYXhjb3VudCwgbWF4Y291bnR0aW1ldW5pdCwgaHosIHBl
cmZmcmVxKTsKKyNlbmRpZgorICBmb3IgKGkgPSAwOyBpIDwgcC0+a2NvdW50
c2l6ZSAvIDI7IGkrKykKKwl7CisJICBpZiAocC0+Y29tbV9rY291bnRbaV0g
PCBwZXJmZnJlcSkKKwkJY29udGludWU7CisJICBlbHNlCisJCXsKKwkJICBw
LT5rY291bnRbaV0gPSBwLT5jb21tX2tjb3VudFtpXSAvIHBlcmZmcmVxOwor
CQl9CisJfQorI2VuZGlmCiAJaGRyID0gKHN0cnVjdCBnbW9uaGRyICopJmdt
b25oZHI7CiAJaGRyLT5scGMgPSBwLT5sb3dwYzsKIAloZHItPmhwYyA9IHAt
PmhpZ2hwYzsKSW5kZXg6IHdpbnN1cC9jeWd3aW4vZ21vbi5oCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93aW5zdXAv
Y3lnd2luL2dtb24uaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yCmRpZmYg
LXUgLXAgLXIxLjIgZ21vbi5oCi0tLSB3aW5zdXAvY3lnd2luL2dtb24uaAky
NCBKdW4gMjAwMSAyMjoyNjo1MSAtMDAwMAkxLjIKKysrIHdpbnN1cC9jeWd3
aW4vZ21vbi5oCTIyIEF1ZyAyMDExIDIwOjI4OjAwIC0wMDAwCkBAIC0xMzQs
NiArMTM0LDkgQEAgc3RydWN0IHJhd2FyYyB7CiBzdHJ1Y3QgZ21vbnBhcmFt
IHsKIAlpbnQJCXN0YXRlOwogCXVfc2hvcnQJCSprY291bnQ7CisjaWZkZWYg
UFJPRklMRQorCXVfaW50NjRfdCAqY29tbV9rY291bnQ7CisjZW5kaWYKIAl1
X2xvbmcJCWtjb3VudHNpemU7CiAJdV9zaG9ydAkJKmZyb21zOwogCXVfbG9u
ZwkJZnJvbXNzaXplOwpJbmRleDogd2luc3VwL2N5Z3dpbi9pbml0LmNjCj09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NyYy93
aW5zdXAvY3lnd2luL2luaXQuY2MsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
ODQKZGlmZiAtdSAtcCAtcjEuODQgaW5pdC5jYwotLS0gd2luc3VwL2N5Z3dp
bi9pbml0LmNjCTE4IEF1ZyAyMDExIDE1OjU5OjE2IC0wMDAwCTEuODQKKysr
IHdpbnN1cC9jeWd3aW4vaW5pdC5jYwkyMiBBdWcgMjAxMSAyMDoyODowMSAt
MDAwMApAQCAtMTMsNiArMTMsMTAgQEAgZGV0YWlscy4gKi8KICNpbmNsdWRl
ICJjeWd0bHMuaCIKICNpbmNsdWRlICJudGRsbC5oIgogI2luY2x1ZGUgInNo
YXJlZF9pbmZvLmgiCisjaWZkZWYgUFJPRklMRQorI2luY2x1ZGUgInByb2Zp
bC5oIgorI2luY2x1ZGUgImluc3RydW1lbnQuaCIKKyNlbmRpZgogCiBzdGF0
aWMgRFdPUkQgX215X29sZGZ1bmM7CiAKQEAgLTEwNiw2ICsxMTAsOSBAQCBy
ZXNwYXduX3dvdzY0X3Byb2Nlc3MgKCkKIAlhcGlfZmF0YWwgKCJXYWl0aW5n
IGZvciBwcm9jZXNzICVkIGZhaWxlZCwgJUUiLCBwaS5kd1Byb2Nlc3NJZCk7
CiAgICAgICBHZXRFeGl0Q29kZVByb2Nlc3MgKHBpLmhQcm9jZXNzLCAmcmV0
KTsKICAgICAgIENsb3NlSGFuZGxlIChwaS5oUHJvY2Vzcyk7CisjaWZkZWYg
UFJPRklMRQorICAgICAgcHJvZmlsZV90aHJlYWRfb2ZmKCk7CisjZW5kaWYK
ICAgICAgIEV4aXRQcm9jZXNzIChyZXQpOwogICAgIH0KIH0KQEAgLTEyMCw2
ICsxMjcsMTAgQEAgZGxsX2VudHJ5IChIQU5ETEUgaCwgRFdPUkQgcmVhc29u
LCB2b2lkIAogICBzd2l0Y2ggKHJlYXNvbikKICAgICB7CiAgICAgY2FzZSBE
TExfUFJPQ0VTU19BVFRBQ0g6CisjaWZkZWYgUFJPRklMRQorICAgICAgX19j
eWdfcHJvZmlsZV9mdW5jX2N0b3IoKTsKKyAgICAgIF9fY3lnX3Byb2ZpbGVf
dGxzX2N0b3IoKTsKKyNlbmRpZgogICAgICAgd2luY2FwLmluaXQgKCk7CiAg
ICAgICBpbml0X2NvbnNvbGVfaGFuZGxlciAoZmFsc2UpOwogCkBAIC0xNDMs
OCArMTU0LDE1IEBAIGRsbF9lbnRyeSAoSEFORExFIGgsIERXT1JEIHJlYXNv
biwgdm9pZCAKICAgICBjYXNlIERMTF9QUk9DRVNTX0RFVEFDSDoKICAgICAg
IGlmIChkeW5hbWljYWxseV9sb2FkZWQpCiAJc2hhcmVkX2Rlc3Ryb3kgKCk7
CisjaWZkZWYgUFJPRklMRQorICAgICAgX19jeWdfcHJvZmlsZV90bHNfZHRv
cigpOworICAgICAgX19jeWdfcHJvZmlsZV9mdW5jX2R0b3IoKTsKKyNlbmRp
ZgogICAgICAgYnJlYWs7CiAgICAgY2FzZSBETExfVEhSRUFEX0FUVEFDSDoK
KyNpZmRlZiBQUk9GSUxFCisgICAgICBfX2N5Z19wcm9maWxlX3Rsc19jdG9y
KCk7CisjZW5kaWYKICAgICAgIGlmIChkbGxfZmluaXNoZWRfbG9hZGluZykK
IAltdW5nZV90aHJlYWRmdW5jICgpOwogICAgICAgYnJlYWs7CkBAIC0xNTMs
NiArMTcxLDkgQEAgZGxsX2VudHJ5IChIQU5ETEUgaCwgRFdPUkQgcmVhc29u
LCB2b2lkIAogCSAgJiYgKFBWT0lEKSAmX215X3RscyA+IChQVk9JRCkgJndv
dzY0X3Rlc3Rfc3RhY2tfbWFya2VyCiAJICAmJiBfbXlfdGxzLmlzaW5pdGlh
bGl6ZWQgKCkpCiAJX215X3Rscy5yZW1vdmUgKDApOworI2lmZGVmIFBST0ZJ
TEUKKwlfX2N5Z19wcm9maWxlX3Rsc19kdG9yKCk7CisjZW5kaWYKICAgICAg
IC8qIFdpbmRvd3MgMjAwMCBoYXMgYSBidWcgaW4gTnRUZXJtaW5hdGVUaHJl
YWQuICBJbnN0ZWFkIG9mIHJlbGVhc2luZwogCSB0aGUgc3RhY2sgYXQgdGVi
LT5EZWFsbG9jYXRpb25TdGFjayBpdCB1c2VzIHRoZSB2YWx1ZSBvZgogCSB0
ZWItPlRpYi5TdGFja0xpbWl0IHRvIGV2YWx1YXRlIHRoZSBzdGFjayBhZGRy
ZXNzLiAgU28gd2UganVzdCBjbGFpbQpJbmRleDogd2luc3VwL2N5Z3dpbi9w
aW5mby5jYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zz
L3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9waW5mby5jYyx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS4yNzkKZGlmZiAtdSAtcCAtcjEuMjc5IHBpbmZvLmNjCi0t
LSB3aW5zdXAvY3lnd2luL3BpbmZvLmNjCTEzIEF1ZyAyMDExIDEwOjI4OjE1
IC0wMDAwCTEuMjc5CisrKyB3aW5zdXAvY3lnd2luL3BpbmZvLmNjCTIyIEF1
ZyAyMDExIDIwOjI4OjAyIC0wMDAwCkBAIC0yOSw3ICsyOSw5IEBAIGRldGFp
bHMuICovCiAjaW5jbHVkZSAiY3lndGxzLmgiCiAjaW5jbHVkZSAidGxzX3Bi
dWYuaCIKICNpbmNsdWRlICJjaGlsZF9pbmZvLmgiCi0KKyNpZmRlZiBQUk9G
SUxFCisjaW5jbHVkZSAicHJvZmlsLmgiCisjZW5kaWYKIGNsYXNzIHBpbmZv
X2Jhc2ljOiBwdWJsaWMgX3BpbmZvCiB7CiBwdWJsaWM6CkBAIC0yMDQsNiAr
MjA2LDkgQEAgcGluZm86OmV4aXQgKERXT1JEIG4pCiAgIGlmICghc2VsZi0+
Y3lnc3RhcnRlZCkKICAgICBleGl0Y29kZSA9ICgoZXhpdGNvZGUgJiAweGZm
KSA8PCA4KSB8ICgoZXhpdGNvZGUgPj4gOCkgJiAweGZmKTsKICAgc2lncHJv
Y19wcmludGYgKCJDYWxsaW5nIEV4aXRQcm9jZXNzIG4gJXAsIGV4aXRjb2Rl
ICVwIiwgbiwgZXhpdGNvZGUpOworI2lmZGVmIFBST0ZJTEUKKyAgcHJvZmls
ZV90aHJlYWRfb2ZmKCk7CisjZW5kaWYKICAgRXhpdFByb2Nlc3MgKGV4aXRj
b2RlKTsKIH0KICMgdW5kZWYgc2VsZgpJbmRleDogd2luc3VwL2N5Z3dpbi9w
cm9maWwuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zz
L3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9wcm9maWwuYyx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS44CmRpZmYgLXUgLXAgLXIxLjggcHJvZmlsLmMKLS0tIHdp
bnN1cC9jeWd3aW4vcHJvZmlsLmMJMzAgQXVnIDIwMTAgMDE6NTc6MzYgLTAw
MDAJMS44CisrKyB3aW5zdXAvY3lnd2luL3Byb2ZpbC5jCTIyIEF1ZyAyMDEx
IDIwOjI4OjAyIC0wMDAwCkBAIC03LDE4ICs3LDI3IEBACiAgICBUaGlzIHNv
ZnR3YXJlIGlzIGEgY29weXJpZ2h0ZWQgd29yayBsaWNlbnNlZCB1bmRlciB0
aGUgdGVybXMgb2YgdGhlCiAgICBDeWd3aW4gbGljZW5zZS4gIFBsZWFzZSBj
b25zdWx0IHRoZSBmaWxlICJDWUdXSU5fTElDRU5TRSIgZm9yCiAgICBkZXRh
aWxzLiAqLwotCisjaWZkZWYgUFJPRklMRQorI2luY2x1ZGUgIndpbnN1cC5o
IgorI2VuZGlmCiAjaW5jbHVkZSAid2lubGVhbi5oIgogI2luY2x1ZGUgPHN5
cy90eXBlcy5oPgogI2luY2x1ZGUgPGVycm5vLmg+Ci0KKyNpZmRlZiBQUk9G
SUxFCisjaW5jbHVkZSAiZ21vbi5oIgorI2VuZGlmCiAjaW5jbHVkZSA8cHJv
ZmlsLmg+CiAKICNkZWZpbmUgU0xFRVBUSU1FICgxMDAwIC8gUFJPRl9IWikK
LQorI2lmZGVmIFBST0ZJTEUKK2V4dGVybiBTRUNVUklUWV9BVFRSSUJVVEVT
IHNlY19ub25lX25paDsKKyNlbmRpZgogLyogZ2xvYmFsIHByb2ZpbmZvIGZv
ciBwcm9maWwoKSBjYWxsICovCisjaWZkZWYgUFJPRklMRQorc3RydWN0IHBy
b2ZpbmZvIE5PX0NPUFkgcHJvZjsKKyNlbHNlCiBzdGF0aWMgc3RydWN0IHBy
b2ZpbmZvIHByb2Y7Ci0KKyNlbmRpZgogLyogR2V0IHRoZSBwYyBmb3IgdGhy
ZWFkIFRIUiAqLwogCiBzdGF0aWMgdV9sb25nCkBAIC04NSwxOSArOTQsNTIg
QEAgcHJvZmlsZV9vZmYgKHN0cnVjdCBwcm9maW5mbyAqcCkKIHsKICAgaWYg
KHAtPnByb2Z0aHIpCiAgICAgeworI2lmZGVmIFBST0ZJTEUKKyAgICAgIGlm
IChwcm9mLnF1ZXVlLndvcmtlcl9lbmFibGVkKQorCQl7CisJCSAgcHJvZmls
ZV90aHJlYWRfb2ZmKCk7CisJCSAgYm91bmRidWZmZXJfZHRvcigmcC0+cXVl
dWUpOworCQkgIHdoaWxlIChib3VuZGJ1ZmZlcl9lbXB0eSgmcC0+cXVldWUp
KQorCQkJeworCQkJICBtZXNzYWdlIG1zZzsKKwkJCSAgYm91bmRidWZmZXJf
ZGVxdWV1ZV9ub2xvY2soJnAtPnF1ZXVlLCAmbXNnKTsKKwkJCSAgdW5zaWdu
ZWQgaWR4ID0gUFJPRklEWCAoKHVuc2lnbmVkKW1zZy5wdiwgcC0+bG93cGMs
IHAtPnNjYWxlKTsKKwkJCSAgaWYgKCFtc2cudWxsdmFsKQorCQkJICBjb250
aW51ZTsKKwkJCSAgX2dtb25wYXJhbS5jb21tX2tjb3VudFtpZHhdICs9IG1z
Zy51bGx2YWw7CisJCQl9CisJCX0KKwkgIENsb3NlSGFuZGxlKHAtPnByb2Z0
aHIpOworCSAgQ2xvc2VIYW5kbGUocHJvZi5vcGVyYXRpb25hbCk7CisJICBw
LT5wcm9mdGhyID0gMDsKKyNlbHNlCiAgICAgICBUZXJtaW5hdGVUaHJlYWQg
KHAtPnByb2Z0aHIsIDApOwogICAgICAgQ2xvc2VIYW5kbGUgKHAtPnByb2Z0
aHIpOworI2VuZGlmCiAgICAgfQorI2lmICFkZWZpbmVkKFBST0ZJTEUpCiAg
IGlmIChwLT50YXJndGhyKQogICAgIENsb3NlSGFuZGxlIChwLT50YXJndGhy
KTsKKyNlbmRpZgogICByZXR1cm4gMDsKIH0KLQorI2lmZGVmIFBST0ZJTEUK
K3N0YXRpYyB2b2lkIF9fc3RkY2FsbAorYXBjX3NwYXdudGhyZWFkKHVuc2ln
bmVkIGxvbmcgYXJnKQoreworICBzdHJ1Y3QgcHJvZmluZm8qIHAgPSAoc3Ry
dWN0IHByb2ZpbmZvKikgYXJnOworICBwLT5wcm9mdGhyID0gQ3JlYXRlVGhy
ZWFkKCZzZWNfbm9uZV9uaWgsIDAsIHdvcmtlcl9jb25zdW1lciwgKHZvaWQg
KikgcCwgMCwKKwkgIDApOworfQorI2VuZGlmCiAvKiBDcmVhdGUgYSB0aW1l
ciB0aHJlYWQgYW5kIHBhc3MgaXQgYSBwb2ludGVyIFAgdG8gdGhlIHByb2Zp
bGluZyBidWZmZXIuICovCiAKIHN0YXRpYyBpbnQKIHByb2ZpbGVfb24gKHN0
cnVjdCBwcm9maW5mbyAqcCkKIHsKKyNpZiAhZGVmaW5lZChQUk9GSUxFKQor
ICBleHRlcm4gdm9pZCBpbml0X2dsb2JhbF9zZWN1cml0eSgpIGFzbSgiX1oy
MGluaXRfZ2xvYmFsX3NlY3VyaXR5diIpOworICBpbml0X2dsb2JhbF9zZWN1
cml0eSgpOwogICBEV09SRCB0aHJpZDsKIAogICAvKiBnZXQgaGFuZGxlIGZv
ciB0aGlzIHRocmVhZCAqLwpAQCAtMTE3LDYgKzE1OSwxMSBAQCBwcm9maWxl
X29uIChzdHJ1Y3QgcHJvZmluZm8gKnApCiAgICAgICBlcnJubyA9IEVBR0FJ
TjsKICAgICAgIHJldHVybiAtMTsKICAgICB9CisjZWxzZQorICBib3VuZGJ1
ZmZlcl9pbml0aWFsKCZwcm9mLnF1ZXVlKTsKKyAgcHJvZi5vcGVyYXRpb25h
bCA9IENyZWF0ZVNlbWFwaG9yZUEoJnNlY19ub25lX25paCwgMCwgMSwgMCk7
CisgIFF1ZXVlVXNlckFQQyhhcGNfc3Bhd250aHJlYWQsIEdldEN1cnJlbnRU
aHJlYWQoKSwgKFVMT05HX1BUUikgcCk7CisjZW5kaWYKICAgcmV0dXJuIDA7
CiB9CiAKSW5kZXg6IHdpbnN1cC9jeWd3aW4vcHJvZmlsLmgKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9j
eWd3aW4vcHJvZmlsLmgsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNApkaWZm
IC11IC1wIC1yMS40IHByb2ZpbC5oCi0tLSB3aW5zdXAvY3lnd2luL3Byb2Zp
bC5oCTI4IEFwciAyMDAzIDIwOjEwOjUzIC0wMDAwCTEuNAorKysgd2luc3Vw
L2N5Z3dpbi9wcm9maWwuaAkyMiBBdWcgMjAxMSAyMDoyODowMiAtMDAwMApA
QCAtNywxMCArNywxNiBAQCBUaGlzIGZpbGUgaXMgcGFydCBvZiBDeWd3aW4u
CiBUaGlzIHNvZnR3YXJlIGlzIGEgY29weXJpZ2h0ZWQgd29yayBsaWNlbnNl
ZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlCiBDeWd3aW4gbGljZW5zZS4gIFBs
ZWFzZSBjb25zdWx0IHRoZSBmaWxlICJDWUdXSU5fTElDRU5TRSIgZm9yCiBk
ZXRhaWxzLiAqLwotCisjaWZuZGVmIFBST0ZJTF9ICisjZGVmaW5lIFBST0ZJ
TF9ICisjaWZkZWYgX19jcGx1c3BsdXMKK2V4dGVybiAiQyJ7CisjZW5kaWYK
IC8qIHByb2ZpbGluZyBmcmVxdWVuY3kuICAoTm8gbGFyZ2VyIHRoYW4gMTAw
MCkgKi8KICNkZWZpbmUgUFJPRl9IWgkJCTEwMAotCisjaWYgZGVmaW5lZChQ
Uk9GSUxFKQorI2luY2x1ZGUgImJvdW5kYnVmZmVyLmgiCisjZW5kaWYKIC8q
IGNvbnZlcnQgYW4gYWRkciB0byBhbiBpbmRleCAqLwogI2RlZmluZSBQUk9G
SURYKHBjLCBiYXNlLCBzY2FsZSkJXAogICAoewkJCQkJCQkJCVwKQEAgLTM3
LDggKzQzLDE3IEBAIHN0cnVjdCBwcm9maW5mbyB7CiAgICAgdV9zaG9ydCAq
Y291bnRlcjsJCQkvKiBwcm9maWxpbmcgY291bnRlcnMgKi8KICAgICB1X2xv
bmcgbG93cGMsIGhpZ2hwYzsJCS8qIHJhbmdlIHRvIGJlIHByb2ZpbGVkICov
CiAgICAgdV9pbnQgc2NhbGU7CQkJLyogc2NhbGUgdmFsdWUgb2YgYmlucyAq
LworI2lmZGVmIFBST0ZJTEUKKyAgICBzdHJ1Y3QgYm91bmRidWZmZXIgcXVl
dWU7CisgICAgX1dJTkhBTkRMRSBvcGVyYXRpb25hbDsKKyNlbmRpZgogfTsK
LQorI2lmZGVmIFBST0ZJTEUKK2V4dGVybiBzdHJ1Y3QgcHJvZmluZm8gcHJv
ZjsKKyNlbmRpZgogaW50IHByb2ZpbGVfY3RsKHN0cnVjdCBwcm9maW5mbyAq
LCBjaGFyICosIHNpemVfdCwgdV9sb25nLCB1X2ludCk7CiBpbnQgcHJvZmls
KGNoYXIgKiwgc2l6ZV90LCB1X2xvbmcsIHVfaW50KTsKLQorI2lmZGVmIF9f
Y3BsdXNwbHVzCit9CisjZW5kaWYKKyNlbmRpZgpJbmRleDogd2luc3VwL2N5
Z3dpbi9zZWNfaGVscGVyLmNjCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNT
IGZpbGU6IC9jdnMvc3JjL3NyYy93aW5zdXAvY3lnd2luL3NlY19oZWxwZXIu
Y2MsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOTMKZGlmZiAtdSAtcCAtcjEu
OTMgc2VjX2hlbHBlci5jYwotLS0gd2luc3VwL2N5Z3dpbi9zZWNfaGVscGVy
LmNjCTI5IEFwciAyMDExIDEwOjM4OjEyIC0wMDAwCTEuOTMKKysrIHdpbnN1
cC9jeWd3aW4vc2VjX2hlbHBlci5jYwkyMiBBdWcgMjAxMSAyMDoyODowMiAt
MDAwMApAQCAtNDc2LDYgKzQ3NiwxMSBAQCBnZXRfbnVsbF9zZCAoKQogdm9p
ZAogaW5pdF9nbG9iYWxfc2VjdXJpdHkgKCkKIHsKKyNpZmRlZiBQUk9GSUxF
CisgIHN0YXRpYyBpbnQgY2FsbGVkOworICBpZiAoY2FsbGVkKyspCisJcmV0
dXJuOworI2VuZGlmCiAgIHNlY19ub25lLm5MZW5ndGggPSBzZWNfbm9uZV9u
aWgubkxlbmd0aCA9CiAgIHNlY19hbGwubkxlbmd0aCA9IHNlY19hbGxfbmlo
Lm5MZW5ndGggPSBzaXplb2YgKFNFQ1VSSVRZX0FUVFJJQlVURVMpOwogICBz
ZWNfbm9uZS5iSW5oZXJpdEhhbmRsZSA9IHNlY19hbGwuYkluaGVyaXRIYW5k
bGUgPSBUUlVFOwotLS0gL2Rldi9udWxsCTIwMTEtMDgtMjMgMTM6NTY6MDYu
MDAwMDAwMDAwICswOTAwCisrKyB3aW5zdXAvY3lnd2luL2JvdW5kYnVmZmVy
LmgJMjAxMS0wOC0yMiAwNTo1NzowNS4xMDkzNzUwMDAgKzA5MDAKQEAgLTAs
MCArMSw2NyBAQAorLyogYm91bmRidWZmZXIuaAorCisgVEhJUyBTT0ZUV0FS
RSBJUyBOT1QgQ09QWVJJR0hURUQKKworIFRoaXMgc291cmNlIGNvZGUgaXMg
b2ZmZXJlZCBmb3IgdXNlIGluIHRoZSBwdWJsaWMgZG9tYWluLiBZb3UgbWF5
CisgdXNlLCBtb2RpZnkgb3IgZGlzdHJpYnV0ZSBpdCBmcmVlbHkuCisKKyBU
aGlzIGNvZGUgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCBidXQKKyBXSVRIT1VUIEFOWSBXQVJSQU5UWS4gQUxM
IFdBUlJFTlRJRVMsIEVYUFJFU1MgT1IgSU1QTElFRCBBUkUgSEVSRUJZCisg
RElTQ0xBTUVELiBUaGlzIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0
byB3YXJyZW50aWVzIG9mCisgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1Mg
Rk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLgorICovCisjaWZuZGVmIEJPVU5E
QlVGRkVSX0hfCisjZGVmaW5lIEJPVU5EQlVGRkVSX0hfCisjaW5jbHVkZSA8
c3RkaW8uaD4KKyNpZmRlZiBfX2NwbHVzcGx1cworZXh0ZXJuICJDIgorewor
I2VuZGlmCisgIGV4dGVybiB2b2lkCisgIHByb2ZpbGVfdGhyZWFkX29mZigp
OworICBzdHJ1Y3QgbWVzc2FnZQorICB7CisjaWYgMAorCXVuc2lnbmVkIGxv
bmcgbG9uZyBsZGF0YTsKKwl1bnNpZ25lZCBsb25nIGlkYXRhWzJdOworI2Vu
ZGlmCisJdm9pZCogcHY7CisJdW5zaWduZWQgbG9uZyBsb25nIHVsbHZhbDsK
KyAgfTsKKyAgdHlwZWRlZiBzdHJ1Y3QgbWVzc2FnZSBtZXNzYWdlOworICBl
eHRlcm4gRFdPUkQgX19zdGRjYWxsCisgIHdvcmtlcl9jb25zdW1lcih2b2lk
KiBhcmcpOworICB1bmlvbiBhdm9pZHR5cGVjaGVjaworICB7CisJSEFORExF
IGg7CisJQ1JJVElDQUxfU0VDVElPTiBzOworCWludCBpOworICB9OworICBl
bnVtIGJjb25zdAorICB7CisJTVVURVgsIEZJTEwsIEVNUFRZLCBGUk9OVCwg
QkFDSywgU1pNRU1CRVIsIFNaQlVGID0gMTYzODQKKyAgfTsKKyAgc3RydWN0
IGJvdW5kYnVmZmVyCisgIHsKKwl1bmlvbiBhdm9pZHR5cGVjaGVjayBtZW1i
ZXJbU1pNRU1CRVJdOworCW1lc3NhZ2UgYnVmZmVyW1NaQlVGXTsKKwlpbnQg
d29ya2VyX2VuYWJsZWQ7CisJaW50IGluaXRpYWw7CisgIH07CisjZGVmaW5l
IHJlZyh4KSBfX2F0dHJpYnV0ZV9fKChyZWdwYXJtKCh4KSkpKQorI2RlZmlu
ZSBidWZmZXJtZXRob2QoeCkgYm91bmRidWZmZXJfIyN4CisgIGV4dGVybiB2
b2lkIGJ1ZmZlcm1ldGhvZChjdG9yKShzdHJ1Y3QgYm91bmRidWZmZXIqKTsK
KyAgZXh0ZXJuIHZvaWQgYnVmZmVybWV0aG9kKGluaXRpYWwpKHN0cnVjdCBi
b3VuZGJ1ZmZlciopOworICBleHRlcm4gdm9pZCBidWZmZXJtZXRob2QoZHRv
cikoc3RydWN0IGJvdW5kYnVmZmVyKik7CisgIGV4dGVybiByZWcoMikgaW50
IGJ1ZmZlcm1ldGhvZChlbnF1ZXVlKShzdHJ1Y3QgYm91bmRidWZmZXIqLCBt
ZXNzYWdlKTsKKyAgZXh0ZXJuIHJlZygyKSBpbnQgYnVmZmVybWV0aG9kKGRl
cXVldWUpKHN0cnVjdCBib3VuZGJ1ZmZlciosIG1lc3NhZ2UqKTsKKyAgZXh0
ZXJuIHJlZygyKSB2b2lkIGJ1ZmZlcm1ldGhvZChkZXF1ZXVlX25vbG9jayko
c3RydWN0IGJvdW5kYnVmZmVyKiwKKwkgIG1lc3NhZ2UqKTsKKyAgZXh0ZXJu
IGludCBidWZmZXJtZXRob2QoZW1wdHkpKHN0cnVjdCBib3VuZGJ1ZmZlciop
OworICBleHRlcm4gaW50IGJ1ZmZlcm1ldGhvZChmdWxsKShzdHJ1Y3QgYm91
bmRidWZmZXIqKTsKKyN1bmRlZiBidWZmZXJtZXRob2QKKyN1bmRlZiByZWcK
KyNpZmRlZiBfX2NwbHVzcGx1cworfQorI2VuZGlmCisjZW5kaWYgLyogQk9V
TkRCVUZGRVJfSF8gKi8KLS0tIC9kZXYvbnVsbAkyMDExLTA4LTIzIDEzOjU2
OjA2LjAwMDAwMDAwMCArMDkwMAorKysgd2luc3VwL2N5Z3dpbi9ib3VuZGJ1
ZmZlci5jCTIwMTEtMDgtMjMgMTM6MjI6MzEuNzgxMjUwMDAwICswOTAwCkBA
IC0wLDAgKzEsMjAxIEBACisvKiBib3VuZGJ1ZmZlci5jCisKKyBUSElTIFNP
RlRXQVJFIElTIE5PVCBDT1BZUklHSFRFRAorCisgVGhpcyBzb3VyY2UgY29k
ZSBpcyBvZmZlcmVkIGZvciB1c2UgaW4gdGhlIHB1YmxpYyBkb21haW4uIFlv
dSBtYXkKKyB1c2UsIG1vZGlmeSBvciBkaXN0cmlidXRlIGl0IGZyZWVseS4K
KworIFRoaXMgY29kZSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0
IGl0IHdpbGwgYmUgdXNlZnVsIGJ1dAorIFdJVEhPVVQgQU5ZIFdBUlJBTlRZ
LiBBTEwgV0FSUkVOVElFUywgRVhQUkVTUyBPUiBJTVBMSUVEIEFSRSBIRVJF
QlkKKyBESVNDTEFNRUQuIFRoaXMgaW5jbHVkZXMgYnV0IGlzIG5vdCBsaW1p
dGVkIHRvIHdhcnJlbnRpZXMgb2YKKyBNRVJDSEFOVEFCSUxJVFkgb3IgRklU
TkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuCisgKi8KKyNpbmNsdWRl
ICJ3aW5zdXAuaCIKKyNpbmNsdWRlICJ3aW5sZWFuLmgiCisjaW5jbHVkZSAi
cHJvZmlsLmgiCisjaW5jbHVkZSAiZ21vbi5oIgorI2luY2x1ZGUgPHN0ZGlu
dC5oPgorI2luY2x1ZGUgPHN0ZGxpYi5oPgorI2luY2x1ZGUgPHN0ZGJvb2wu
aD4KKyNpbmNsdWRlICJib3VuZGJ1ZmZlci5oIgorLyogVXNlCisgKiAwOiBz
ZW1hcGhvcmUKKyAqIDE6IGV2ZW50CisgKi8KKyNkZWZpbmUgVVNFX0VWRU5U
IDEKKy8qCisgKiBUaGVyZSBhcmUgY2FzZXMgd2hlcmUgdGhlIGJvdW5kZWQg
YnVmZmVyIGlzIGJsb2NrZWQgYW5kIG5vdCBvcGVyYXRpb25hbC4KKyAqIGFz
IGEgd29ya2Fyb3VuZCwgZ2l2ZSBtYXhpbXVtIHRpbWVvdXQgdG8gV0ZTTy4K
KyAqLworI2RlZmluZSBXRlNPX1RJTUVPVVRfTVMgSU5GSU5JVEUKKy8qCisg
KiBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM2
ODcwMzIuYXNweAorICogIEN1cnJlbnQgdGhyZWFkIGFuZCBwcm9jZXNzIGhh
bmRsZXMgYXJlIHNwZWNpYWwgY2FzZWQKKyAqLworI2RlZmluZSBJTlZBTElE
X0ZPUl9TVVJFIC0zCitleHRlcm4gU0VDVVJJVFlfQVRUUklCVVRFUyBzZWNf
bm9uZV9uaWg7CitEV09SRCBfX3N0ZGNhbGwKK3dvcmtlcl9jb25zdW1lcih2
b2lkKiBhcmcpCit7CisgIGlmIChwcm9mLnF1ZXVlLmluaXRpYWwpCisJewor
CSAgYm91bmRidWZmZXJfY3RvcigmcHJvZi5xdWV1ZSk7CisJICBwcm9mLnF1
ZXVlLmluaXRpYWwgPSAwOworCX0KKyAgLy9XYWl0Rm9yU2luZ2xlT2JqZWN0
KHByb2YucXVldWUubWVtYmVyW01VVEVYXS5oLCBJTkZJTklURSk7CisgIEVu
dGVyQ3JpdGljYWxTZWN0aW9uKCZwcm9mLnF1ZXVlLm1lbWJlcltNVVRFWF0u
cyk7CisgIHByb2YucXVldWUud29ya2VyX2VuYWJsZWQgPSAxOworICBSZWxl
YXNlU2VtYXBob3JlKHByb2Yub3BlcmF0aW9uYWwsIDEsIDApOworICAvL1Jl
bGVhc2VNdXRleChwcm9mLnF1ZXVlLm1lbWJlcltNVVRFWF0uaCk7CisgIExl
YXZlQ3JpdGljYWxTZWN0aW9uKCZwcm9mLnF1ZXVlLm1lbWJlcltNVVRFWF0u
cyk7CisgIHdoaWxlIChwcm9mLnF1ZXVlLndvcmtlcl9lbmFibGVkKQorCXsK
KwkgIG1lc3NhZ2UgbXNnOworCSAgaWYgKCFib3VuZGJ1ZmZlcl9kZXF1ZXVl
KCZwcm9mLnF1ZXVlLCAmbXNnKSkKKwkJY29udGludWU7CisJICB1bnNpZ25l
ZCBpZHggPSBQUk9GSURYICgodW5zaWduZWQpbXNnLnB2LCBwcm9mLmxvd3Bj
LCBwcm9mLgorCQkgIHNjYWxlKTsKKwkgIGlmICghbXNnLnVsbHZhbCkKKwkJ
Y29udGludWU7CisJICBfZ21vbnBhcmFtLmNvbW1fa2NvdW50W2lkeF0gKz0g
bXNnLnVsbHZhbDsKKwl9CisgIHJldHVybiAwOworfQorI2lmZGVmIFBST0ZJ
TEUKK3ZvaWQKK3Byb2ZpbGVfdGhyZWFkX29mZigpCit7CisgIGludCBlbmFi
bGVkID0gX19zeW5jX2ZldGNoX2FuZF9hbmQoJnByb2YucXVldWUud29ya2Vy
X2VuYWJsZWQsIDApOworICBpZiAoZW5hYmxlZCkKKwl7CisJICBSZWxlYXNl
U2VtYXBob3JlKHByb2YucXVldWUubWVtYmVyW0ZJTExdLmgsIDEsIDApOwor
CSAgV2FpdEZvclNpbmdsZU9iamVjdChwcm9mLnByb2Z0aHIsIElORklOSVRF
KTsKKwl9Cit9CisjZW5kaWYKKyNkZWZpbmUgYnVmZmVybWV0aG9kKHgpIGJv
dW5kYnVmZmVyXyMjeAordm9pZCBidWZmZXJtZXRob2QoY3Rvcikoc3RydWN0
IGJvdW5kYnVmZmVyKiB0aGlzKQoreworICB0aGlzLT5tZW1iZXJbRlJPTlRd
LmkgPSB0aGlzLT5tZW1iZXJbQkFDS10uaSA9IDA7CisgIEluaXRpYWxpemVD
cml0aWNhbFNlY3Rpb25BbmRTcGluQ291bnQoJnRoaXMtPm1lbWJlcltNVVRF
WF0ucywgMHgwODAwMDAwMCk7CisgIC8vdGhpcy0+bWVtYmVyW01VVEVYXS5o
ID0gQ3JlYXRlTXV0ZXhBKCZzZWNfbm9uZV9uaWgsIDAsIDApOworI2lmIFVT
RV9FVkVOVAorICB0aGlzLT5tZW1iZXJbRU1QVFldLmggPSBDcmVhdGVFdmVu
dEEoJnNlY19ub25lX25paCwgMSwgMSwgMCk7CisjZWxzZQorICB0aGlzLT5t
ZW1iZXJbRU1QVFldLmggPSBDcmVhdGVTZW1hcGhvcmVBKCZzZWNfbm9uZV9u
aWgsIFNaQlVGLCBTWkJVRiwgMCk7CisjZW5kaWYKKyAgdGhpcy0+bWVtYmVy
W0ZJTExdLmggPSBDcmVhdGVTZW1hcGhvcmVBKCZzZWNfbm9uZV9uaWgsIDAs
IFNaQlVGLCAwKTsKK30KK3ZvaWQgYnVmZmVybWV0aG9kKGluaXRpYWwpKHN0
cnVjdCBib3VuZGJ1ZmZlciogdGhpcykKK3sKKyAgdGhpcy0+aW5pdGlhbCA9
IDE7CisgIHRoaXMtPm1lbWJlcltNVVRFWF0uaSA9IHRoaXMtPm1lbWJlcltF
TVBUWV0uaSA9IHRoaXMtPm1lbWJlcltGSUxMXS5pID0KKwkgIElOVkFMSURf
Rk9SX1NVUkU7Cit9Cit2b2lkIGJ1ZmZlcm1ldGhvZChkdG9yKShzdHJ1Y3Qg
Ym91bmRidWZmZXIqIHRoaXMpCit7CisgIENsb3NlSGFuZGxlKHRoaXMtPm1l
bWJlcltNVVRFWF0uaCk7CisgIENsb3NlSGFuZGxlKHRoaXMtPm1lbWJlcltF
TVBUWV0uaCk7CisgIENsb3NlSGFuZGxlKHRoaXMtPm1lbWJlcltGSUxMXS5o
KTsKKyAgdGhpcy0+bWVtYmVyW01VVEVYXS5pID0gdGhpcy0+bWVtYmVyW0VN
UFRZXS5pID0gdGhpcy0+bWVtYmVyW0ZJTExdLmkgPQorCSAgSU5WQUxJRF9G
T1JfU1VSRTsKK30KK3N0YXRpYyBfX2F0dHJpYnV0ZV9fKCh1c2VkKSkgdm9p
ZCBidWZmZXJtZXRob2QoY2hlY2spKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhp
cykKK3sKKyAgaWYgKCEoKHRoaXMtPm1lbWJlcltGUk9OVF0uaSA+IC0xKSAm
JiAodGhpcy0+bWVtYmVyW0ZST05UXS5pIDwgU1pCVUYpKSkKKwlhc20gdm9s
YXRpbGUoImludCAkM1x0XG4iKTsKKyAgaWYgKCEoKHRoaXMtPm1lbWJlcltC
QUNLXS5pID4gLTEpICYmICh0aGlzLT5tZW1iZXJbQkFDS10uaSA8IFNaQlVG
KSkpCisJYXNtIHZvbGF0aWxlKCJpbnQgJDNcdFxuIik7Cit9CitfX2F0dHJp
YnV0ZV9fKChhbHdheXNfaW5saW5lLHJlZ3Bhcm0oMikpKSB2b2lkIGJ1ZmZl
cm1ldGhvZChlbnF1ZXVlX25vbG9jaykoCisJc3RydWN0IGJvdW5kYnVmZmVy
KiwgbWVzc2FnZSk7CitpbnQgX19hdHRyaWJ1dGVfXygocmVncGFybSgyKSkp
IGJ1ZmZlcm1ldGhvZChlbnF1ZXVlKShzdHJ1Y3QgYm91bmRidWZmZXIqIHRo
aXMsCisJbWVzc2FnZSBvYmopCit7CisgIGlmIChwcm9mLnF1ZXVlLmluaXRp
YWwpCisJeworCSAgYnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSh0aGlz
LCBvYmopOworCSAgcmV0dXJuIDE7CisJfQorICBpbnQgcmV0ID0gV2FpdEZv
clNpbmdsZU9iamVjdCh0aGlzLT5tZW1iZXJbRU1QVFldLmgsIFdGU09fVElN
RU9VVF9NUyk7CisgIGlmICgocmV0ICE9IFdBSVRfT0JKRUNUXzApIHx8ICF0
aGlzLT53b3JrZXJfZW5hYmxlZCkKKwlyZXR1cm4gMDsKKyAgLypyZXQgPSBX
YWl0Rm9yU2luZ2xlT2JqZWN0KHRoaXMtPm1lbWJlcltNVVRFWF0uaCwgV0ZT
T19USU1FT1VUX01TKTsKKyAgIGlmIChyZXQgIT0gV0FJVF9PQkpFQ1RfMAor
ICAgKQorICAgcmV0dXJuIDA7CisgICAqLworICBFbnRlckNyaXRpY2FsU2Vj
dGlvbigmcHJvZi5xdWV1ZS5tZW1iZXJbTVVURVhdLnMpOworICBidWZmZXJt
ZXRob2QoZW5xdWV1ZV9ub2xvY2spKHRoaXMsIG9iaik7CisgIC8vUmVsZWFz
ZU11dGV4KHRoaXMtPm1lbWJlcltNVVRFWF0uaCk7CisjaWYgVVNFX0VWRU5U
CisgIGxvbmcgYXZhaWxfdG9fZGVxdWV1ZTsKKyAgUmVsZWFzZVNlbWFwaG9y
ZSh0aGlzLT5tZW1iZXJbRklMTF0uaCwwLCZhdmFpbF90b19kZXF1ZXVlKTsK
KyAgYXZhaWxfdG9fZGVxdWV1ZT1hdmFpbF90b19kZXF1ZXVlPT0oU1pCVUYt
MSk7CisjZW5kaWYKKyAgTGVhdmVDcml0aWNhbFNlY3Rpb24oJnByb2YucXVl
dWUubWVtYmVyW01VVEVYXS5zKTsKKyNpZiBVU0VfRVZFTlQKKyAgaWYgKGF2
YWlsX3RvX2RlcXVldWUpCisgIFJlc2V0RXZlbnQodGhpcy0+bWVtYmVyW0VN
UFRZXS5oKTsKKyNlbmRpZgorICBSZWxlYXNlU2VtYXBob3JlKHRoaXMtPm1l
bWJlcltGSUxMXS5oLCAxLCAwKTsKKyAgcmV0dXJuIDE7Cit9CisKK2ludCBi
dWZmZXJtZXRob2QoZW1wdHkpKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhpcykK
K3sKKyAgLy9pZihXYWl0Rm9yU2luZ2xlT2JqZWN0KHRoaXMtPm1lbWJlcltN
VVRFWF0uaCwgMCkhPVdBSVRfT0JKRUNUXzApIHJldHVybiAtMTsKKyAgaW50
IHJldCA9IHRoaXMtPm1lbWJlcltGUk9OVF0uaSA9PSB0aGlzLT5tZW1iZXJb
QkFDS10uaTsKKyAgLy9SZWxlYXNlU2VtYXBob3JlKHRoaXMtPm1lbWJlcltN
VVRFWF0uaCwgMSwgMCk7CisgIHJldHVybiByZXQ7Cit9CitpbnQgYnVmZmVy
bWV0aG9kKGZ1bGwpKHN0cnVjdCBib3VuZGJ1ZmZlciogdGhpcykKK3sKKyAg
Ly9pZihXYWl0Rm9yU2luZ2xlT2JqZWN0KHRoaXMtPm1lbWJlcltNVVRFWF0u
aCwgMCkhPVdBSVRfT0JKRUNUXzApIHJldHVybiAtMTsKKyAgaW50IHJldCA9
ICh0aGlzLT5tZW1iZXJbRlJPTlRdLmkgKyB0aGlzLT5tZW1iZXJbQkFDS10u
aSkgPT0gKFNaQlVGIC0gMSk7CisgIC8vUmVsZWFzZVNlbWFwaG9yZSh0aGlz
LT5tZW1iZXJbTVVURVhdLmgsIDEsIDApOworICByZXR1cm4gcmV0OworfQor
aW50IF9fYXR0cmlidXRlX18oKHJlZ3Bhcm0oMikpKSBidWZmZXJtZXRob2Qo
ZGVxdWV1ZSkoc3RydWN0IGJvdW5kYnVmZmVyKiB0aGlzLAorCW1lc3NhZ2Uq
IHJlc3VsdCkKK3sKKyAgaWYgKHByb2YucXVldWUuaW5pdGlhbCkKKwl7CisJ
ICBidWZmZXJtZXRob2QoZGVxdWV1ZV9ub2xvY2spKHRoaXMsIHJlc3VsdCk7
CisJICByZXR1cm4gMTsKKwl9CisgIGludCByZXQgPSBXYWl0Rm9yU2luZ2xl
T2JqZWN0KHRoaXMtPm1lbWJlcltGSUxMXS5oLCBXRlNPX1RJTUVPVVRfTVMp
OworICBpZiAoKHJldCAhPSBXQUlUX09CSkVDVF8wKSB8fCAhdGhpcy0+d29y
a2VyX2VuYWJsZWQpCisJcmV0dXJuIDA7CisgIC8vV2FpdEZvclNpbmdsZU9i
amVjdCh0aGlzLT5tZW1iZXJbTVVURVhdLmgsIElORklOSVRFKTsKKyAgRW50
ZXJDcml0aWNhbFNlY3Rpb24oJnByb2YucXVldWUubWVtYmVyW01VVEVYXS5z
KTsKKyAgYnVmZmVybWV0aG9kKGRlcXVldWVfbm9sb2NrKSh0aGlzLCByZXN1
bHQpOworICAvL1JlbGVhc2VNdXRleCh0aGlzLT5tZW1iZXJbTVVURVhdLmgp
OworI2lmIFVTRV9FVkVOVAorICBsb25nIGF2YWlsX3RvX2VucXVldWU7Cisg
IFJlbGVhc2VTZW1hcGhvcmUodGhpcy0+bWVtYmVyW0ZJTExdLmgsMCwmYXZh
aWxfdG9fZW5xdWV1ZSk7CisgIGF2YWlsX3RvX2VucXVldWU9YXZhaWxfdG9f
ZW5xdWV1ZTw9MDsKKyNlbmRpZgorICBMZWF2ZUNyaXRpY2FsU2VjdGlvbigm
cHJvZi5xdWV1ZS5tZW1iZXJbTVVURVhdLnMpOworI2lmIFVTRV9FVkVOVAor
ICBpZiAoYXZhaWxfdG9fZW5xdWV1ZSkKKyAgU2V0RXZlbnQodGhpcy0+bWVt
YmVyW0VNUFRZXS5oKTsKKyNlbHNlCisgIFJlbGVhc2VTZW1hcGhvcmUodGhp
cy0+bWVtYmVyW0VNUFRZXS5oLCAxLCAwKTsKKyNlbmRpZgorICByZXR1cm4g
MTsKK30KK19fYXR0cmlidXRlX18oKGFsd2F5c19pbmxpbmUscmVncGFybSgy
KSkpIHZvaWQgYnVmZmVybWV0aG9kKGVucXVldWVfbm9sb2NrKSgKKwlzdHJ1
Y3QgYm91bmRidWZmZXIqIHRoaXMsIG1lc3NhZ2Ugb2JqKQoreworICB0aGlz
LT5idWZmZXJbdGhpcy0+bWVtYmVyW0JBQ0tdLmldID0gb2JqOworICB0aGlz
LT5tZW1iZXJbQkFDS10uaSA9ICh0aGlzLT5tZW1iZXJbQkFDS10uaSArIDEp
ICUgU1pCVUY7Cit9CitfX2F0dHJpYnV0ZV9fKChhbHdheXNfaW5saW5lLHJl
Z3Bhcm0oMikpKSB2b2lkIGJ1ZmZlcm1ldGhvZChkZXF1ZXVlX25vbG9jayko
CisJc3RydWN0IGJvdW5kYnVmZmVyKiB0aGlzLCBtZXNzYWdlKiByZXN1bHQp
Cit7CisgIC8qYm91bmRidWZmZXJfY2hlY2sodGhpcyk7Ki8KKyAgKCpyZXN1
bHQpID0gdGhpcy0+YnVmZmVyW3RoaXMtPm1lbWJlcltGUk9OVF0uaV07Cisg
IHRoaXMtPm1lbWJlcltGUk9OVF0uaSA9ICh0aGlzLT5tZW1iZXJbRlJPTlRd
LmkgKyAxKSAlIFNaQlVGOworfQorI3VuZGVmIGJ1ZmZlcm1ldGhvZAotLS0g
L2Rldi9udWxsCTIwMTEtMDgtMjMgMTM6NTY6MDYuMDAwMDAwMDAwICswOTAw
CisrKyB3aW5zdXAvY3lnd2luL2luc3RydW1lbnQuYwkyMDExLTA4LTIyIDA2
OjM3OjQwLjA2MjUwMDAwMCArMDkwMApAQCAtMCwwICsxLDEyNSBAQAorLyog
aW5zdHJ1bWVudC5jCisKKyBUSElTIFNPRlRXQVJFIElTIE5PVCBDT1BZUklH
SFRFRAorCisgVGhpcyBzb3VyY2UgY29kZSBpcyBvZmZlcmVkIGZvciB1c2Ug
aW4gdGhlIHB1YmxpYyBkb21haW4uIFlvdSBtYXkKKyB1c2UsIG1vZGlmeSBv
ciBkaXN0cmlidXRlIGl0IGZyZWVseS4KKworIFRoaXMgY29kZSBpcyBkaXN0
cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsIGJ1
dAorIFdJVEhPVVQgQU5ZIFdBUlJBTlRZLiBBTEwgV0FSUkVOVElFUywgRVhQ
UkVTUyBPUiBJTVBMSUVEIEFSRSBIRVJFQlkKKyBESVNDTEFNRUQuIFRoaXMg
aW5jbHVkZXMgYnV0IGlzIG5vdCBsaW1pdGVkIHRvIHdhcnJlbnRpZXMgb2YK
KyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFS
IFBVUlBPU0UuCisKKyBDcmVhdGVkIG9uOiAyMDExLiAzLiAyLgorICovCisj
aW5jbHVkZSA8c3RkaW50Lmg+CisjaW5jbHVkZSAid2luc3VwLmgiCisjaW5j
bHVkZSAid2lubGVhbi5oIgorI2luY2x1ZGUgInByb2ZpbC5oIgorI2luY2x1
ZGUgImluc3RydW1lbnQuaCIKKyNpbmNsdWRlICJib3VuZGJ1ZmZlci5oIgor
I2luY2x1ZGUgImdtb24uaCIKK0RXT1JEIE5PX0NPUFkgdGxza2V5OworZXh0
ZXJuIERXT1JEIFdJTkFQSQorR2V0TGFzdEVycm9yKHZvaWQpOwordm9pZCBX
SU5BUEkKK1NldExhc3RFcnJvcihEV09SRCk7Cit2b2lkCitfX2F0dHJpYnV0
ZV9fKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkKK19fY3lnX3Byb2ZpbGVf
ZnVuY19jdG9yKCkKK3sKKyAgdGxza2V5ID0gVGxzQWxsb2MoKTsKK30KK3Zv
aWQgX19hdHRyaWJ1dGVfXyAoKG5vX2luc3RydW1lbnRfZnVuY3Rpb24pKQor
X19jeWdfcHJvZmlsZV90bHNfY3RvcigpCit7CisgIHZvaWQgKiBtYXAgPSAo
dm9pZCopIExvY2FsQWxsb2MoMHg0MCwgc2l6ZW9mKHN0cnVjdCBjbGspKTsK
KyNpZiAwCisgIGFzc2VydChtYXApCisjZW5kaWYKKyAgVGxzU2V0VmFsdWUo
dGxza2V5LCBtYXApOworICBzdHJ1Y3QgY2xrKiBjbGtpbmZvID0gKHN0cnVj
dCBjbGsqKSBtYXA7CisgIGNsa2luZm8tPmlkeCA9IDA7Cit9Cit2b2lkIF9f
YXR0cmlidXRlX18gKChub19pbnN0cnVtZW50X2Z1bmN0aW9uKSkKK19fY3ln
X3Byb2ZpbGVfdGxzX2R0b3IoKQoreworICB2b2lkICogbWFwID0gVGxzR2V0
VmFsdWUodGxza2V5KTsKKyAgaWYgKG1hcCkKKwlMb2NhbEZyZWUobWFwKTsK
KyAgVGxzU2V0VmFsdWUodGxza2V5LCAwKTsKKworfQordm9pZCBfX2F0dHJp
YnV0ZV9fICgobm9faW5zdHJ1bWVudF9mdW5jdGlvbikpCitfX2N5Z19wcm9m
aWxlX2Z1bmNfZHRvcigpCit7CisgIFRsc0ZyZWUodGxza2V5KTsKKyAgdGxz
a2V5ID0gLTE7Cit9CitleHRlcm4gaW50IHNfc2NhbGU7CitzdGF0aWMgdm9p
ZCBfX2F0dHJpYnV0ZV9fICgoYWx3YXlzX2lubGluZSxub19pbnN0cnVtZW50
X2Z1bmN0aW9uLHJlZ3Bhcm0oMykpKQorX19jeWdfc2V0X2NsayhzdHJ1Y3Qg
Y2xrKiBjbGtpbmZvLCB2b2lkICpjYWxsZXIsIGludCBzdGF0ZSkKK3sKKyAg
cmVnaXN0ZXIgaW50IGlkeDsKKyAgcmVnaXN0ZXIgbWVzc2FnZSBtc2c7Cisg
IHN3aXRjaCAoc3RhdGUpCisJeworICBjYXNlIDA6CisJaWYgKCFjbGtpbmZv
LT5pZHgpCisJICBnb3RvIHNraXA7CisJaWR4ID0gLS1jbGtpbmZvLT5pZHg7
CisjaWYgMAorCWFzc2VydCgoaWR4Pj0wKSYmKGlkeDwweGZmZmYpKQorCWFz
c2VydChjbGtpbmZvLT5wY1tpZHhdID09IGNhbGxlcikKKyNlbmRpZgorCWNs
a2luZm8tPnRzY1tpZHhdID0gX19idWlsdGluX2lhMzJfcmR0c2MoKSAtIGNs
a2luZm8tPnRzY1tpZHhdOworCW1zZy5wdiA9IGNsa2luZm8tPnBjW2lkeF07
CisJbXNnLnVsbHZhbCA9IGNsa2luZm8tPnRzY1tpZHhdOworCWlmICgmcHJv
Zi5xdWV1ZS53b3JrZXJfZW5hYmxlZCkKKwkgIGJvdW5kYnVmZmVyX2VucXVl
dWUoJnByb2YucXVldWUsIG1zZyk7CisJYnJlYWs7CisgIGNhc2UgMToKKwlp
ZHggPSBjbGtpbmZvLT5pZHg7CisjaWYgMAorCWFzc2VydCgoaWR4Pj0wKSYm
KGlkeDwweGZmZmYpKQorI2VuZGlmCisJY2xraW5mby0+cGNbaWR4XSA9IGNh
bGxlcjsKKwljbGtpbmZvLT50c2NbaWR4XSA9IF9fYnVpbHRpbl9pYTMyX3Jk
dHNjKCk7CisJY2xraW5mby0+aWR4Kys7CisJYnJlYWs7CisgIGRlZmF1bHQ6
CisJZ290byBza2lwOworCWJyZWFrOworCX07CisgIHNraXA6IGRvCisJewor
CX0KKyAgd2hpbGUgKDApOworfQorLyoKKyAqIEdldExhc3RFcnJvciAvIFNl
dExhc3RFcnJvciBpcyBuZWVkZWQgYmVjYXVzZSBUbHMqIGFsdGVyIGxhc3Qg
ZXJyb3IgY29kZQorICovCit2b2lkIF9fYXR0cmlidXRlX18gKChub19pbnN0
cnVtZW50X2Z1bmN0aW9uKSkKK19fY3lnX3Byb2ZpbGVfZnVuY19lbnRlcih2
b2lkKiBjYWxsZXIsIHZvaWQqIHNpdGUpCit7CisgIERXT1JEIGVyciA9IEdl
dExhc3RFcnJvcigpOworICBzdHJ1Y3QgY2xrKiBjbGtpbmZvID0gKHN0cnVj
dCBjbGsqKSBUbHNHZXRWYWx1ZSh0bHNrZXkpOworICBpZiAoIWNsa2luZm8p
CisJeworCSAgZ290byB0cmFwOworCX0KKyAgX19jeWdfc2V0X2NsayhjbGtp
bmZvLCBjYWxsZXIsIDEpOworICB0cmFwOiBTZXRMYXN0RXJyb3IoZXJyKTsK
K30KK3ZvaWQgX19hdHRyaWJ1dGVfXyAoKG5vX2luc3RydW1lbnRfZnVuY3Rp
b24pKQorX19jeWdfcHJvZmlsZV9mdW5jX2V4aXQodm9pZCogY2FsbGVyLCB2
b2lkKiBzaXRlKQoreworICBEV09SRCBlcnIgPSBHZXRMYXN0RXJyb3IoKTsK
KyAgc3RydWN0IGNsayogY2xraW5mbyA9IChzdHJ1Y3QgY2xrKikgVGxzR2V0
VmFsdWUodGxza2V5KTsKKyAgaWYgKCFjbGtpbmZvKQorCXsKKwkgIGdvdG8g
dHJhcDsKKwl9CisgIF9fY3lnX3NldF9jbGsoY2xraW5mbywgY2FsbGVyLCAw
KTsKKyAgdHJhcDogU2V0TGFzdEVycm9yKGVycik7Cit9Ci0tLSAvZGV2L251
bGwJMjAxMS0wOC0yMyAxMzo1NjowNi4wMDAwMDAwMDAgKzA5MDAKKysrIHdp
bnN1cC9jeWd3aW4vaW5zdHJ1bWVudC5oCTIwMTEtMDgtMjIgMDU6NTc6NDEu
MzEyNTAwMDAwICswOTAwCkBAIC0wLDAgKzEsMzggQEAKKy8qIGluc3RydW1l
bnQuYworCisgVEhJUyBTT0ZUV0FSRSBJUyBOT1QgQ09QWVJJR0hURUQKKwor
IFRoaXMgc291cmNlIGNvZGUgaXMgb2ZmZXJlZCBmb3IgdXNlIGluIHRoZSBw
dWJsaWMgZG9tYWluLiBZb3UgbWF5CisgdXNlLCBtb2RpZnkgb3IgZGlzdHJp
YnV0ZSBpdCBmcmVlbHkuCisKKyBUaGlzIGNvZGUgaXMgZGlzdHJpYnV0ZWQg
aW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCBidXQKKyBXSVRI
T1VUIEFOWSBXQVJSQU5UWS4gQUxMIFdBUlJFTlRJRVMsIEVYUFJFU1MgT1Ig
SU1QTElFRCBBUkUgSEVSRUJZCisgRElTQ0xBTUVELiBUaGlzIGluY2x1ZGVz
IGJ1dCBpcyBub3QgbGltaXRlZCB0byB3YXJyZW50aWVzIG9mCisgTUVSQ0hB
TlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NF
LgorCisgQ3JlYXRlZCBvbjogMjAxMS4gMy4gMTguCisgKi8KKyNpZm5kZWYg
SU5TVFJVTUVOVF9IXworI2RlZmluZSBJTlNUUlVNRU5UX0hfCisjaWZkZWYg
X19jcGx1c3BsdXMKK2V4dGVybiAiQyIKK3sKKyNlbmRpZgorICBzdHJ1Y3Qg
Y2xrCisgIHsKKwl1bnNpZ25lZCBpZHg7CisJdm9pZCogcGNbMHgxMDAwMF07
CisJdW5zaWduZWQgbG9uZyBsb25nIHRzY1sweDEwMDAwXTsKKyAgfTsKKyAg
dm9pZCBfX2F0dHJpYnV0ZV9fICgobm9faW5zdHJ1bWVudF9mdW5jdGlvbikp
CisgIF9fY3lnX3Byb2ZpbGVfZnVuY19jdG9yKCk7CisgIHZvaWQgX19hdHRy
aWJ1dGVfXyAoKG5vX2luc3RydW1lbnRfZnVuY3Rpb24pKQorICBfX2N5Z19w
cm9maWxlX2Z1bmNfZHRvcigpOworICB2b2lkIF9fYXR0cmlidXRlX18gKChu
b19pbnN0cnVtZW50X2Z1bmN0aW9uKSkKKyAgX19jeWdfcHJvZmlsZV90bHNf
Y3RvcigpOworICB2b2lkIF9fYXR0cmlidXRlX18gKChub19pbnN0cnVtZW50
X2Z1bmN0aW9uKSkKKyAgX19jeWdfcHJvZmlsZV90bHNfZHRvcigpOworI2lm
ZGVmIF9fY3BsdXNwbHVzCit9CisjZW5kaWYKKyNlbmRpZiAvKiBJTlNUUlVN
RU5UX0hfICovCg==

--------------000402000709070504070500
Content-Type: text/plain; charset=UTF-8;
 name="winsup-makefile.diff"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="winsup-makefile.diff"
Content-length: 883

77u/SW5kZXg6IHdpbnN1cC9NYWtlZmlsZS5jb21tb24KPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9NYWtl
ZmlsZS5jb21tb24sdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNTYKZGlmZiAt
dSAtcjEuNTYgTWFrZWZpbGUuY29tbW9uCi0tLSB3aW5zdXAvTWFrZWZpbGUu
Y29tbW9uICAgICAgNyBKdWwgMjAwOSAyMDoxMjo0MyAtMDAwMCAgICAgICAx
LjU2CisrKyB3aW5zdXAvTWFrZWZpbGUuY29tbW9uICAgICAgMTkgQXVnIDIw
MTEgMjA6MjI6NDAgLTAwMDAKQEAgLTExMyw3ICsxMTMsNyBAQAogTElCTTo9
JChuZXdsaWJfYnVpbGQpL2xpYm0vbGlibS5hCiBDUlQwOj0kKGN5Z3dpbl9i
dWlsZCkvY3J0MC5vCgotQUxMX0NGTEFHUzo9JChERUZTKSAkKE1BTExPQ19E
RUJVRykgJChDRkxBR1MpICQoR0NDX0RFRkFVTFRfT1BUSU9OUykKK0FMTF9D
RkxBR1M9JChERUZTKSAkKE1BTExPQ19ERUJVRykgJChDRkxBR1MpICQoR0ND
X0RFRkFVTFRfT1BUSU9OUykKIEFMTF9DWFhGTEFHUz0kKERFRlMpICQoTUFM
TE9DX0RFQlVHKSAkKENYWEZMQUdTKSAkKEdDQ19ERUZBVUxUX09QVElPTlMp
CgogaWZuZGVmIFBSRVBST0NFU1MK

--------------000402000709070504070500--
