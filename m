Return-Path: <David.Allsopp@cl.cam.ac.uk>
Received: from outmail148098.authsmtp.com (outmail148098.authsmtp.com
 [62.13.148.98])
 by sourceware.org (Postfix) with ESMTPS id 234D8384B13D
 for <cygwin-patches@cygwin.com>; Thu,  9 Jul 2020 19:30:38 +0000 (GMT)
DMARC-Filter: OpenDMARC Filter v1.3.2 sourceware.org 234D8384B13D
Received: from mail-c237.authsmtp.com (mail-c237.authsmtp.com [62.13.128.237])
 by punt15.authsmtp.com. (8.15.2/8.15.2) with ESMTP id 069JUbmV088120
 for <cygwin-patches@cygwin.com>; Thu, 9 Jul 2020 20:30:37 +0100 (BST)
 (envelope-from David.Allsopp@cl.cam.ac.uk)
Received: from romulus.metastack.com
 (26.77-31-62.static.virginmediabusiness.co.uk [62.31.77.26])
 (authenticated bits=0)
 by mail.authsmtp.com (8.15.2/8.15.2) with ESMTPSA id 069JUY8G048084
 (version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
 for <cygwin-patches@cygwin.com>; Thu, 9 Jul 2020 20:30:35 +0100 (BST)
 (envelope-from David.Allsopp@cl.cam.ac.uk)
Received: from Libera ([172.16.0.125]) (authenticated bits=0)
 by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 069JUYd4010500
 for <cygwin-patches@cygwin.com>; Thu, 9 Jul 2020 20:30:34 +0100
From: "David Allsopp" <David.Allsopp@cl.cam.ac.uk>
To: <cygwin-patches@cygwin.com>
References: 
In-Reply-To: 
Subject: [PATCH] Fix incorrect sign-extension of pointer in 32-bit acl
 __to_entry
Date: Thu, 9 Jul 2020 20:30:35 +0100
Message-ID: <001101d65627$6b726260$42572720$@cl.cam.ac.uk>
MIME-Version: 1.0
Content-Type: multipart/mixed;
 boundary="----=_NextPart_000_0012_01D6562F.CD36F170"
X-Mailer: Microsoft Outlook 16.0
Content-Language: en-gb
Thread-Index: AdZWJQHHESV98qffT7qyu7zaVSI0DgAAgZpQ
X-Scanned-By: MIMEDefang 2.65 on 62.31.77.26
X-Server-Quench: a9bb3445-c21a-11ea-8a6b-8434971169dc
X-AuthReport-Spam: If SPAM / abuse - report it at:
 http://www.authsmtp.com/abuse
X-AuthRoute: OCd1ZAARAlZ5RRob BmUtCCtbTh09DhZI RxQKKE1TKxwUVhJa
 I0lFL1wWKFQATlFU QBZYEgMTCQNvCjwo JQpYcn8YPlVMXwdq QEpJSFFSHgZuTxoD
 GB0fTB51aQdAZ3x1 ekcsXnZSJiETfTF9 RkZUHWlIZmdlbC5O WRIKdAdQdR4ZfB4U
 d1F+ASIQaTQBNGdo Q1Rvbm9oZGsOJC9D cTkkEXkydA4lHy50 RhYJGi81EEYZDz4y
 IBpjJ04AEUAKM0I0 eVwvEUofMhkOBxcW HkcFW3UcLVgdDyMg CUttalIZJzBbXT1N agAA
X-Authentic-SMTP: 61633634383431.1024:7364
X-AuthFastPath: 0 (Was 255)
X-AuthSMTP-Origin: 62.31.77.26/25
X-AuthVirus-Status: No virus detected - but ensure you scan with your own
 anti-virus system.
X-Spam-Status: No, score=-4.6 required=5.0 tests=BAYES_00, KAM_DMARC_STATUS,
 KAM_LAZY_DOMAIN_SECURITY, RCVD_IN_DNSWL_LOW, RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL, SPF_HELO_NONE, SPF_NONE,
 TXREP autolearn=no autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on
 server2.sourceware.org
X-BeenThere: cygwin-patches@cygwin.com
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Cygwin core component patch submission and discussion
 <cygwin-patches.cygwin.com>
List-Unsubscribe: <http://cygwin.com/mailman/options/cygwin-patches>,
 <mailto:cygwin-patches-request@cygwin.com?subject=unsubscribe>
List-Archive: <https://cygwin.com/pipermail/cygwin-patches/>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Help: <mailto:cygwin-patches-request@cygwin.com?subject=help>
List-Subscribe: <http://cygwin.com/mailman/listinfo/cygwin-patches>,
 <mailto:cygwin-patches-request@cygwin.com?subject=subscribe>
X-List-Received-Date: Thu, 09 Jul 2020 19:30:39 -0000

This is a multipart message in MIME format.

------=_NextPart_000_0012_01D6562F.CD36F170
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit

I have some code where the acl_t returned by get_file_acl is allocated at
0x80038248. As a result the acl_entry_t generated by acl_get_entry has an
"index" of -1, since the pointer was sign-extended to 64-bits.

My fix is trivial and simply casts the pointer to uintptr_t first.

All best,


David

------=_NextPart_000_0012_01D6562F.CD36F170
Content-Type: application/octet-stream;
	name="0001-Fix-invalid-acl_entry_t-on-32-bit-Cygwin.patch"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="0001-Fix-invalid-acl_entry_t-on-32-bit-Cygwin.patch"

From c9af9cc1ecba0c716577f7fe6b380437c817de2c Mon Sep 17 00:00:00 2001=0A=
From: David Allsopp <david.allsopp@metastack.com>=0A=
Date: Thu, 9 Jul 2020 20:17:03 +0100=0A=
Subject: [PATCH] Fix invalid acl_entry_t on 32-bit Cygwin=0A=
=0A=
If the acl_t struct was at or above 0x80000000 then the pointer was=0A=
sign-extended to 0xffff_ffff_8000_0000 and so the index was lost.=0A=
=0A=
Signed-off-by: David Allsopp <david.allsopp@metastack.com>=0A=
---=0A=
 winsup/cygwin/release/3.1.7  | 4 ++++=0A=
 winsup/cygwin/sec_posixacl.h | 2 +-=0A=
 2 files changed, 5 insertions(+), 1 deletion(-)=0A=
 create mode 100644 winsup/cygwin/release/3.1.7=0A=
=0A=
diff --git a/winsup/cygwin/release/3.1.7 b/winsup/cygwin/release/3.1.7=0A=
new file mode 100644=0A=
index 000000000..6ce316fc4=0A=
--- /dev/null=0A=
+++ b/winsup/cygwin/release/3.1.7=0A=
@@ -0,0 +1,4 @@=0A=
+Bug Fixes:=0A=
+----------=0A=
+=0A=
+- Fix acl_get_* functions in 32-bit Cygwin (pointer sign extension)=0A=
diff --git a/winsup/cygwin/sec_posixacl.h b/winsup/cygwin/sec_posixacl.h=0A=
index a3790a52b..0f9e7bde3 100644=0A=
--- a/winsup/cygwin/sec_posixacl.h=0A=
+++ b/winsup/cygwin/sec_posixacl.h=0A=
@@ -34,7 +34,7 @@ struct __acl_t=0A=
 inline acl_entry_t=0A=
 __to_entry (acl_t acl, uint16_t idx)=0A=
 {=0A=
-  return ((uint64_t) idx << 48) | (uint64_t) acl;=0A=
+  return ((uint64_t) idx << 48) | (uint64_t) ((uintptr_t) acl);=0A=
 }=0A=
 #define __to_permset(a,i)	((acl_permset_t)__to_entry((a),(i)))=0A=
 =0A=
-- =0A=
2.19.2.windows.1=0A=
=0A=

------=_NextPart_000_0012_01D6562F.CD36F170--

