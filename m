From: "Robert Collins" <robert.collins@itdomain.com.au>
To: <cygwin-patches@cygwin.com>
Cc: "greg smith" <gsmith@nc.rr.com>
Subject: fix for pthread_broadcast
Date: Sun, 06 May 2001 00:23:00 -0000
Message-id: <027501c0d5fd$19ffca90$0200a8c0@lifelesswks>
X-SW-Source: 2001-q2/msg00192.html
Content-type: multipart/mixed; boundary="----------=_1583532847-65438-57"

This is a multi-part message in MIME format...

------------=_1583532847-65438-57
Content-length: 804

pthread_broadcast was broken. This patch fixes it for the testcase
reported by Greg Smith. I've also introduced per-cond variable locking
to make broadcasts atomic. There are still races present, however the
worst case is an occasional dropped signal. (And note that to trigger
the race, the users code must be such that the signal could be missed
_anyway_ ).

Rob

Sun May  6 17:05:00 2001  Robert Collins <rbtcollins@hotmail.com>
 * thread.h (pthread_cond): New element cond_access to allow atomic
broadcasts.
 * thread.cc (pthread_cond::pthread_cond): Initialise cond_access.
 (pthread_cond::~pthread_cond): Destroy cond_access.
 (pthread_cond::Broadcast): Use cond_access.
 (pthread_cond::Signal): Use cond_access.
 (pthread_cond_wait): Use cond_access.
 (pthread_cond_timedwait): Use cond_access.



------------=_1583532847-65438-57
Content-Type: text/x-diff; charset=us-ascii; name="broadcastfix.ChangeLog"
Content-Disposition: inline; filename="broadcastfix.ChangeLog"
Content-Transfer-Encoding: base64
Content-Length: 1176

SW5kZXg6IENoYW5nZUxvZwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi9DaGFuZ2VMb2csdgpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuNjk1CmRpZmYgLXUgLXAgLXIxLjY5NSBD
aGFuZ2VMb2cKLS0tIENoYW5nZUxvZwkyMDAxLzA1LzA1IDA1OjA3OjIwCTEu
Njk1CisrKyBDaGFuZ2VMb2cJMjAwMS8wNS8wNiAwNzoxNDozNgpAQCAtMSwz
ICsxLDEyIEBACitTdW4gTWF5ICA2IDE3OjA1OjAwIDIwMDEgIFJvYmVydCBD
b2xsaW5zIDxyYnRjb2xsaW5zQGhvdG1haWwuY29tPgorCSogdGhyZWFkLmgg
KHB0aHJlYWRfY29uZCk6IE5ldyBlbGVtZW50IGNvbmRfYWNjZXNzIHRvIGFs
bG93IGF0b21pYyBicm9hZGNhc3RzLgorCSogdGhyZWFkLmNjIChwdGhyZWFk
X2NvbmQ6OnB0aHJlYWRfY29uZCk6IEluaXRpYWxpc2UgY29uZF9hY2Nlc3Mu
CisJKHB0aHJlYWRfY29uZDo6fnB0aHJlYWRfY29uZCk6IERlc3Ryb3kgY29u
ZF9hY2Nlc3MuCisJKHB0aHJlYWRfY29uZDo6QnJvYWRjYXN0KTogVXNlIGNv
bmRfYWNjZXNzLgorCShwdGhyZWFkX2NvbmQ6OlNpZ25hbCk6IFVzZSBjb25k
X2FjY2Vzcy4KKwkocHRocmVhZF9jb25kX3dhaXQpOiBVc2UgY29uZF9hY2Nl
c3MuCisJKHB0aHJlYWRfY29uZF90aW1lZHdhaXQpOiBVc2UgY29uZF9hY2Nl
c3MuCisKIFNhdCBNYXkgIDUgMDE6MDQ6MTEgMjAwMSAgQ2hyaXN0b3BoZXIg
RmF5bG9yIDxjZ2ZAY3lnbnVzLmNvbT4KIAogCSogZXhjZXB0aW9ucy5jYyAo
aGFuZGxlX2V4Y2VwdGlvbnMpOiBWYXN0bHkgaW5jcmVhc2UgdGVzdCBmb3Ig
ZXhjZXB0aW9uCg==

------------=_1583532847-65438-57
Content-Type: text/x-diff; charset=us-ascii; name="broadcastfix.patch"
Content-Disposition: inline; filename="broadcastfix.patch"
Content-Transfer-Encoding: base64
Content-Length: 8772

SW5kZXg6IHRocmVhZC5jYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvY3ZzL3NyYy9zcmMvd2luc3VwL2N5Z3dpbi90aHJlYWQuY2Msdgpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMzEKZGlmZiAtdSAtcCAtcjEuMzEgdGhy
ZWFkLmNjCi0tLSB0aHJlYWQuY2MJMjAwMS8wNS8wNCAyMTowMjoxNQkxLjMx
CisrKyB0aHJlYWQuY2MJMjAwMS8wNS8wNiAwNzoxMjo0NApAQCAtMzg2LDYg
KzM4Niw3IEBAIHB0aHJlYWRfY29uZGF0dHI6On5wdGhyZWFkX2NvbmRhdHRy
ICgpCiAKIHB0aHJlYWRfY29uZDo6cHRocmVhZF9jb25kIChwdGhyZWFkX2Nv
bmRhdHRyICogYXR0cik6dmVyaWZ5YWJsZV9vYmplY3QgKFBUSFJFQURfQ09O
RF9NQUdJQykKIHsKKyAgaW50IHRlbXBlcnI7CiAgIHRoaXMtPnNoYXJlZCA9
IGF0dHIgPyBhdHRyLT5zaGFyZWQgOiBQVEhSRUFEX1BST0NFU1NfUFJJVkFU
RTsKICAgdGhpcy0+bXV0ZXggPSBOVUxMOwogICB0aGlzLT53YWl0aW5nID0g
MDsKQEAgLTM5Myw2ICszOTQsMTQgQEAgcHRocmVhZF9jb25kOjpwdGhyZWFk
X2NvbmQgKHB0aHJlYWRfY29uZAogICB0aGlzLT53aW4zMl9vYmpfaWQgPTo6
Q3JlYXRlRXZlbnQgKCZzZWNfbm9uZV9uaWgsIGZhbHNlLAkvKiBhdXRvIHNp
Z25hbCByZXNldCAtIHdoaWNoIEkgdGhpbmsgaXMgcHRocmVhZHMgbGlrZSA/
ICovCiAJCQkJICAgICBmYWxzZSwJLyogc3RhcnQgbm9uIHNpZ25hbGVkICov
CiAJCQkJICAgICBOVUxMIC8qIG5vIG5hbWUgKi8pOworICAvKiBUT0RPOiBt
YWtlIGEgc2hhcmVkIG1lbSBtdXRleCBpZiBvdXQgYXR0cmlidXRlcyByZXF1
ZXN0IHNoYXJlZCBtZW0gY29uZCAqLworICBjb25kX2FjY2Vzcz1OVUxMOwor
ICBpZiAoKHRlbXBlcnI9cHRocmVhZF9tdXRleF9pbml0KCZ0aGlzLT5jb25k
X2FjY2VzcywgTlVMTCkpKSAKKyAgICB7CisgICAgICBzeXN0ZW1fcHJpbnRm
KCJjb3VsZG4ndCBpbml0IG11dGV4LCB0aGlzID0gJTBwIGVycm5vPSVkXG4i
LHRoaXMsdGVtcGVycik7CisgICAgICAvKiB3ZSBuZWVkIHRoZSBtdXRleCBm
b3IgY29ycmVjdCBiZWhhdmlvdXIgKi8KKyAgICAgIG1hZ2ljID0gMDsJCisg
ICAgfQogCiAgIGlmICghdGhpcy0+d2luMzJfb2JqX2lkKQogICAgIG1hZ2lj
ID0gMDsKQEAgLTQwMiwyNyArNDExLDM4IEBAIHB0aHJlYWRfY29uZDo6fnB0
aHJlYWRfY29uZCAoKQogewogICBpZiAod2luMzJfb2JqX2lkKQogICAgIENs
b3NlSGFuZGxlICh3aW4zMl9vYmpfaWQpOworICBwdGhyZWFkX211dGV4X2Rl
c3Ryb3koJmNvbmRfYWNjZXNzKTsKIH0KIAogdm9pZAogcHRocmVhZF9jb25k
OjpCcm9hZENhc3QgKCkKIHsKLSAgLy8gVGhpcyBwb3RlbnRpYWxseSBoYXMg
YW4gdW5mYWlybmVzcyBidWcuIFdlIHNob3VsZAotICAvLyBjb25zaWRlciBw
cmV2ZW50aW5nIHRoZSB3YWtldXBzIGZyb20gcmVzdW1pbmcgdW50aWwgd2Ug
ZmluaXNoIHNpZ25hbGxpbmcuCi0gIGlmICghdmVyaWZ5YWJsZV9vYmplY3Rf
aXN2YWxpZCAobXV0ZXgsIFBUSFJFQURfTVVURVhfTUFHSUMpKQotICAgIHJl
dHVybjsKLSAgUHVsc2VFdmVudCAod2luMzJfb2JqX2lkKTsKLSAgd2hpbGUg
KEludGVybG9ja2VkRGVjcmVtZW50ICgmd2FpdGluZykgIT0gMCkKKyAgaWYg
KHB0aHJlYWRfbXV0ZXhfbG9jaygmY29uZF9hY2Nlc3MpKQorICAgIHN5c3Rl
bV9wcmludGYoIkZhaWxlZCB0byBsb2NrIGNvbmRpdGlvbiB2YXJpYWJsZSBh
Y2Nlc3MgbXV0ZXgsIHRoaXMgPSAlMHBcbiIsdGhpcyk7CisgIGludCBjb3Vu
dD13YWl0aW5nOworICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQg
KG11dGV4LCBQVEhSRUFEX01VVEVYX01BR0lDKSkgCisgICAgeworICAgICAg
aWYgKHB0aHJlYWRfbXV0ZXhfdW5sb2NrKCZjb25kX2FjY2VzcykpCisgICAg
ICAgIHN5c3RlbV9wcmludGYoIkZhaWxlZCB0byB1bmxvY2sgY29uZGl0aW9u
IHZhcmlhYmxlIGFjY2VzcyBtdXRleCwgdGhpcyA9ICUwcFxuIix0aGlzKTsK
KyAgICAgIHN5c3RlbV9wcmludGYoIkJyb2FkY2FzdCBjYWxsZWQgd2l0aCBp
bnZhbGlkIG11dGV4XG4iKTsKKyAgICAgIHJldHVybjsKKyAgICB9CisgIHdo
aWxlIChjb3VudC0tKQogICAgIFB1bHNlRXZlbnQgKHdpbjMyX29ial9pZCk7
Ci0gIG11dGV4ID0gTlVMTDsKKyAgaWYgKHB0aHJlYWRfbXV0ZXhfdW5sb2Nr
KCZjb25kX2FjY2VzcykpCisgICAgc3lzdGVtX3ByaW50ZigiRmFpbGVkIHRv
IHVubG9jayBjb25kaXRpb24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlz
ID0gJTBwXG4iLHRoaXMpOwogfQogCiB2b2lkCiBwdGhyZWFkX2NvbmQ6OlNp
Z25hbCAoKQogeworICBpZiAocHRocmVhZF9tdXRleF9sb2NrKCZjb25kX2Fj
Y2VzcykpCisgICAgc3lzdGVtX3ByaW50ZigiRmFpbGVkIHRvIGxvY2sgY29u
ZGl0aW9uIHZhcmlhYmxlIGFjY2VzcyBtdXRleCwgdGhpcyA9ICUwcFxuIix0
aGlzKTsKICAgaWYgKCF2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkIChtdXRl
eCwgUFRIUkVBRF9NVVRFWF9NQUdJQykpCiAgICAgcmV0dXJuOwogICBQdWxz
ZUV2ZW50ICh3aW4zMl9vYmpfaWQpOworICBpZiAocHRocmVhZF9tdXRleF91
bmxvY2soJmNvbmRfYWNjZXNzKSkKKyAgICBzeXN0ZW1fcHJpbnRmKCJGYWls
ZWQgdG8gdW5sb2NrIGNvbmRpdGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgs
IHRoaXMgPSAlMHBcbiIsdGhpcyk7CiB9CiAKIGludApAQCAtMTYwOCw2ICsx
NjI4LDggQEAgaW50CiBfX3B0aHJlYWRfY29uZF90aW1lZHdhaXQgKHB0aHJl
YWRfY29uZF90ICogY29uZCwgcHRocmVhZF9tdXRleF90ICogbXV0ZXgsCiAJ
CQkgIGNvbnN0IHN0cnVjdCB0aW1lc3BlYyAqYWJzdGltZSkKIHsKKy8vIGFu
ZCB5ZXMgY29uZF9hY2Nlc3MgaGVyZSBpcyBzdGlsbCBvcGVuIHRvIGEgcmFj
ZS4gKHdlIGluY3JlbWVudCwgY29udGV4dCBzd2FwLCAKKy8vIGJyb2FkY2Fz
dCBvY2N1cnMgLSAgd2UgbWlzcyB0aGUgYnJvYWRjYXN0LiB0aGUgZnVuY3Rp
b25zIGFyZW4ndCBzcGxpdCBwcm9wZXJseS4KICAgaW50IHJ2OwogICBpZiAo
IWFic3RpbWUpCiAgICAgcmV0dXJuIEVJTlZBTDsKQEAgLTE2MjMsNiArMTY0
NSw5IEBAIF9fcHRocmVhZF9jb25kX3RpbWVkd2FpdCAocHRocmVhZF9jb25k
X3QKICAgaWYgKCF2ZXJpZnlhYmxlX29iamVjdF9pc3ZhbGlkICgqY29uZCwg
UFRIUkVBRF9DT05EX01BR0lDKSkKICAgICByZXR1cm4gRUlOVkFMOwogCisg
IGlmIChwdGhyZWFkX211dGV4X2xvY2soJigqY29uZCktPmNvbmRfYWNjZXNz
KSkKKyAgICBzeXN0ZW1fcHJpbnRmKCJGYWlsZWQgdG8gbG9jayBjb25kaXRp
b24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzID0gJTBwXG4iLCpjb25k
KTsKKwogICBpZiAoKCpjb25kKS0+d2FpdGluZykKICAgICBpZiAoKCpjb25k
KS0+bXV0ZXggJiYgKCgqY29uZCktPm11dGV4ICE9ICgqdGhlbXV0ZXgpKSkK
ICAgICAgIHJldHVybiBFSU5WQUw7CkBAIC0xNjMwLDExICsxNjU1LDE3IEBA
IF9fcHRocmVhZF9jb25kX3RpbWVkd2FpdCAocHRocmVhZF9jb25kX3QKIAog
ICAoKmNvbmQpLT5tdXRleCA9ICgqdGhlbXV0ZXgpOwogICBJbnRlcmxvY2tl
ZEluY3JlbWVudCAoJigoKnRoZW11dGV4KS0+Y29uZHdhaXRzKSk7CisgIGlm
IChwdGhyZWFkX211dGV4X3VubG9jaygmKCpjb25kKS0+Y29uZF9hY2Nlc3Mp
KQorICAgIHN5c3RlbV9wcmludGYoIkZhaWxlZCB0byB1bmxvY2sgY29uZGl0
aW9uIHZhcmlhYmxlIGFjY2VzcyBtdXRleCwgdGhpcyA9ICUwcFxuIiwqY29u
ZCk7CiAgIHJ2ID0gKCpjb25kKS0+VGltZWRXYWl0IChhYnN0aW1lLT50dl9z
ZWMgKiAxMDAwKTsKKyAgaWYgKHB0aHJlYWRfbXV0ZXhfbG9jaygmKCpjb25k
KS0+Y29uZF9hY2Nlc3MpKQorICAgIHN5c3RlbV9wcmludGYoIkZhaWxlZCB0
byBsb2NrIGNvbmRpdGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMg
PSAlMHBcbiIsKmNvbmQpOwogICAoKmNvbmQpLT5tdXRleC0+TG9jayAoKTsK
ICAgaWYgKEludGVybG9ja2VkRGVjcmVtZW50ICgmKCgqY29uZCktPndhaXRp
bmcpKSA9PSAwKQogICAgICgqY29uZCktPm11dGV4ID0gTlVMTDsKICAgSW50
ZXJsb2NrZWREZWNyZW1lbnQgKCYoKCp0aGVtdXRleCktPmNvbmR3YWl0cykp
OworICBpZiAocHRocmVhZF9tdXRleF91bmxvY2soJigqY29uZCktPmNvbmRf
YWNjZXNzKSkKKyAgICBzeXN0ZW1fcHJpbnRmKCJGYWlsZWQgdG8gdW5sb2Nr
IGNvbmRpdGlvbiB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgPSAlMHBc
biIsKmNvbmQpOwogCiAgIHJldHVybiBydjsKIH0KQEAgLTE2NDIsNiArMTY3
Myw3IEBAIF9fcHRocmVhZF9jb25kX3RpbWVkd2FpdCAocHRocmVhZF9jb25k
X3QKIGludAogX19wdGhyZWFkX2NvbmRfd2FpdCAocHRocmVhZF9jb25kX3Qg
KiBjb25kLCBwdGhyZWFkX211dGV4X3QgKiBtdXRleCkKIHsKKy8vIHNlZSBj
b25kX3RpbWVkd2FpdCBmb3Igbm90ZXMKICAgaW50IHJ2OwogICBwdGhyZWFk
X211dGV4X3QgKnRoZW11dGV4ID0gbXV0ZXg7CiAgIGlmICgqbXV0ZXggPT0g
UFRIUkVBRF9NVVRFWF9JTklUSUFMSVpFUikKQEAgLTE2NTQsMTkgKzE2ODYs
MzEgQEAgX19wdGhyZWFkX2NvbmRfd2FpdCAocHRocmVhZF9jb25kX3QgKiBj
bwogICBpZiAoIXZlcmlmeWFibGVfb2JqZWN0X2lzdmFsaWQgKCpjb25kLCBQ
VEhSRUFEX0NPTkRfTUFHSUMpKQogICAgIHJldHVybiBFSU5WQUw7CiAKKyAg
aWYgKHB0aHJlYWRfbXV0ZXhfbG9jaygmKCpjb25kKS0+Y29uZF9hY2Nlc3Mp
KQorICAgIHN5c3RlbV9wcmludGYoIkZhaWxlZCB0byBsb2NrIGNvbmRpdGlv
biB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgPSAlMHBcbiIsKmNvbmQp
OworCiAgIGlmICgoKmNvbmQpLT53YWl0aW5nKQogICAgIGlmICgoKmNvbmQp
LT5tdXRleCAmJiAoKCpjb25kKS0+bXV0ZXggIT0gKCp0aGVtdXRleCkpKQot
ICAgICAgcmV0dXJuIEVJTlZBTDsKKyAgICAgIHsKKyAgICAgICAgaWYgKHB0
aHJlYWRfbXV0ZXhfdW5sb2NrKCYoKmNvbmQpLT5jb25kX2FjY2VzcykpCisg
ICAgICAgICAgc3lzdGVtX3ByaW50ZigiRmFpbGVkIHRvIHVubG9jayBjb25k
aXRpb24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzID0gJTBwXG4iLCpj
b25kKTsKKyAgICAgICAgcmV0dXJuIEVJTlZBTDsKKyAgICAgIH0KICAgSW50
ZXJsb2NrZWRJbmNyZW1lbnQgKCYoKCpjb25kKS0+d2FpdGluZykpOwogCiAg
ICgqY29uZCktPm11dGV4ID0gKCp0aGVtdXRleCk7CiAgIEludGVybG9ja2Vk
SW5jcmVtZW50ICgmKCgqdGhlbXV0ZXgpLT5jb25kd2FpdHMpKTsKKyAgaWYg
KHB0aHJlYWRfbXV0ZXhfdW5sb2NrKCYoKmNvbmQpLT5jb25kX2FjY2Vzcykp
CisgICAgc3lzdGVtX3ByaW50ZigiRmFpbGVkIHRvIHVubG9jayBjb25kaXRp
b24gdmFyaWFibGUgYWNjZXNzIG11dGV4LCB0aGlzID0gJTBwXG4iLCpjb25k
KTsKICAgcnYgPSAoKmNvbmQpLT5UaW1lZFdhaXQgKElORklOSVRFKTsKKyAg
aWYgKHB0aHJlYWRfbXV0ZXhfbG9jaygmKCpjb25kKS0+Y29uZF9hY2Nlc3Mp
KQorICAgIHN5c3RlbV9wcmludGYoIkZhaWxlZCB0byBsb2NrIGNvbmRpdGlv
biB2YXJpYWJsZSBhY2Nlc3MgbXV0ZXgsIHRoaXMgPSAlMHBcbiIsKmNvbmQp
OwogICAoKmNvbmQpLT5tdXRleC0+TG9jayAoKTsKICAgaWYgKEludGVybG9j
a2VkRGVjcmVtZW50ICgmKCgqY29uZCktPndhaXRpbmcpKSA9PSAwKQogICAg
ICgqY29uZCktPm11dGV4ID0gTlVMTDsKICAgSW50ZXJsb2NrZWREZWNyZW1l
bnQgKCYoKCp0aGVtdXRleCktPmNvbmR3YWl0cykpOwotCisgIGlmIChwdGhy
ZWFkX211dGV4X3VubG9jaygmKCpjb25kKS0+Y29uZF9hY2Nlc3MpKQorICAg
IHN5c3RlbV9wcmludGYoIkZhaWxlZCB0byB1bmxvY2sgY29uZGl0aW9uIHZh
cmlhYmxlIGFjY2VzcyBtdXRleCwgdGhpcyA9ICUwcFxuIiwqY29uZCk7CiAg
IHJldHVybiBydjsKIH0KIApJbmRleDogdGhyZWFkLmgKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc3JjL3dpbnN1cC9jeWd3
aW4vdGhyZWFkLmgsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTkKZGlmZiAt
dSAtcCAtcjEuMTkgdGhyZWFkLmgKLS0tIHRocmVhZC5oCTIwMDEvMDQvMzAg
MTg6MjE6NDgJMS4xOQorKysgdGhyZWFkLmgJMjAwMS8wNS8wNiAwNzoxMjo1
MQpAQCAtMjkwLDYgKzI5MCw4IEBAIHB1YmxpYzoKICAgaW50IHNoYXJlZDsK
ICAgTE9ORyB3YWl0aW5nOwogICBwdGhyZWFkX211dGV4ICptdXRleDsKKyAg
LyogdG8gYWxsb3cgYXRvbWljIGJlaGF2aW91ciBmb3IgY29uZF9icm9hZGNh
c3QgKi8KKyAgcHRocmVhZF9tdXRleF90IGNvbmRfYWNjZXNzOwogICBIQU5E
TEUgd2luMzJfb2JqX2lkOwogICBpbnQgVGltZWRXYWl0IChEV09SRCBkd01p
bGxpc2Vjb25kcyk7CiAgIHZvaWQgQnJvYWRDYXN0ICgpOwo=

------------=_1583532847-65438-57--
