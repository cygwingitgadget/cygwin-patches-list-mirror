Return-Path: <cygwin-patches-return-2318-listarch-cygwin-patches=sourceware.cygnus.com@cygwin.com>
Received: (qmail 22159 invoked by alias); 5 Jun 2002 17:05:22 -0000
Mailing-List: contact cygwin-patches-help@cygwin.com; run by ezmlm
Precedence: bulk
List-Subscribe: <mailto:cygwin-patches-subscribe@cygwin.com>
List-Post: <mailto:cygwin-patches@cygwin.com>
List-Archive: <http://sources.redhat.com/ml/cygwin-patches/>
List-Help: <mailto:cygwin-patches-help@cygwin.com>, <http://sources.redhat.com/ml/#faqs>
Sender: cygwin-patches-owner@cygwin.com
Received: (qmail 22145 invoked from network); 5 Jun 2002 17:05:21 -0000
Date: Wed, 05 Jun 2002 10:05:00 -0000
From: Joshua Daniel Franklin <joshuadfranklin@yahoo.com>
X-X-Sender: joshua@iocc.com
To: cygwin-patches@cygwin.com
Subject: ssp.c patch
Message-ID: <Pine.CYG.4.44.0206051202550.664-200000@iocc.com>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-559023410-5639741-1023296598=:664"
X-SW-Source: 2002-q2/txt/msg00301.txt.bz2

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

---559023410-5639741-1023296598=:664
Content-Type: TEXT/PLAIN; charset=US-ASCII
Content-length: 1430

This patch changes ssp to use getopt instead of just hand-rolled
option handling. There were two issues with doing this:

The -dll option ( -d -l -l to getopt) is now -l. So if someone was using
a script that did ssp -d -dll 0x401000 0x403000 hello.exe it will work
identically, but without the -d option it will behave differently.

The -tc, which getopt interprets as -t -c, is now just -c. The -t option
stayed the same, so the same issues as above apply.

I also included the whole of ssp.txt in the --help output, since that
text file really isn't that long and it doesn't make sense to me that
users need to download the cygwin source to learn to use a util. Hopefully
soon this info can be moved into userland documentation.

I considered submitting separate patches for this but it wouldn't make
sense to do the getopt change without updating the help output, and the
--version part is only a few lines. I could leave the --version part out
but this made more sense to me.

P.S. I also found two variable-name typos in the run_program (char * cmdline)
function and fixed it.

ChangeLog:

2002-06-03  Joshua Daniel Franklin <joshuadfranklin@yahoo.com>

	* ssp.c (version): New global variable.
	(longopts): Ditto.
	(opts): Ditto.
	(run_program): Correct cmd_line typos to cmdline.
	(usage): New function. Standardize usage output.
	Add ssp.txt to --help output.
	(print_version): New function.
	(main): Accomodate getopt.


---559023410-5639741-1023296598=:664
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="ssp.c-patch"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.CYG.4.44.0206051203180.664@iocc.com>
Content-Description: 
Content-Disposition: attachment; filename="ssp.c-patch"
Content-length: 21302

LS0tIHNzcC5jLW9yaWcJVHVlIEp1biAgNCAyMDozNzoxNyAyMDAyDQorKysg
c3NwLmMJV2VkIEp1biAgNSAxMTozNzo1NSAyMDAyDQpAQCAtMjAsNTMgKzIw
LDI2IEBADQogI2luY2x1ZGUgPHRpbWUuaD4NCiAjaW5jbHVkZSA8Y3R5cGUu
aD4NCiAjaW5jbHVkZSA8d2luZG93cy5oPg0KKyNpbmNsdWRlIDxnZXRvcHQu
aD4NCiANCi0jaWZkZWYgX19HTlVDX18NCi1jb25zdCBjaGFyICpoZWxwX3Rl
eHQgPSAiXA0KLVVzYWdlOiBzc3AgW29wdGlvbnNdIGxvd19wYyBoaWdoX3Bj
IGNvbW1hbmQuLi5cblwNCi1cblwNCi1UaGUgU1NQIGlzIGEgYHNpbmdsZS1z
dGVwIHByb2ZpbGVyJyAtIGl0IHVzZXMgdGhlIGRlYnVnIEFQSSB0b1xuXA0K
LXNpbmdsZS1zdGVwIHlvdXIgcHJvZ3JhbSwgbm90aW5nICpldmVyeXRoaW5n
KiB5b3VyIHByb2dyYW0gcnVucywgbm90XG5cDQotanVzdCByYW5kb20gcGxh
Y2VzIGhpdCBieSByYW5kb20gdGltZXIgaW50ZXJydXB0cy4gIFlvdSBtdXN0
IHNwZWNpZnlcblwNCi10aGUgcmFuZ2Ugb2YgRUlQIHZhbHVlcyB0byBwcm9m
aWxlLiAgRm9yIGV4YW1wbGUsIHlvdSBjb3VsZCBwcm9maWxlXG5cDQotanVz
dCBhIGZ1bmN0aW9uLCBvciBqdXN0IGEgbGluZSBvZiBjb2RlLCBvciB0aGUg
d2hvbGUgdGhpbmcuXG5cDQotVXNlIFwib2JqZHVtcCAtaFwiIHRvIGZpbmQg
dGhlIHN0YXJ0IG9mIC50ZXh0IGFuZCB0aGUgc2VjdGlvbiBmb2xsb3dpbmdc
blwNCi1pdDsgdGhpcyBpcyB3aGF0IHlvdSB3YW50LlxuXA0KLVxuXA0KLVRo
ZXJlIGFyZSBtYW55IG9wdGlvbnMgdG8gc3NwLiAgU2luY2Ugc3RlcC1wcm9m
aWxpbmcgbWFrZXMgeW91clxuXA0KLXByb2dyYW0gcnVuIGFib3V0IDEsMDAw
IHRpbWVzIHNsb3dlciB0aGFuIG5vcm1hbCwgaXQncyBiZXN0IHRvXG5cDQot
dW5kZXJzdGFuZCBhbGwgdGhlIG9wdGlvbnMgc28gdGhhdCB5b3UgY2FuIG5h
cnJvdyBkb3duIHRoZSBwYXJ0c1xuXA0KLW9mIHlvdXIgcHJvZ3JhbSB5b3Ug
bmVlZCB0byBzaW5nbGUtc3RlcC5cblwNCi1cblwNCi0tdiA9IHZlcmJvc2Ug
bWVzc2FnZXMgYWJvdXQgZGVidWcgZXZlbnRzLlxuXA0KLVxuXA0KLS1kLCAt
ZSA9IGRpc2FibGUvZW5hYmxlIHNpbmdsZS1zdGVwcGluZyBieSBkZWZhdWx0
LiAgVXNlXG5cDQotT3V0cHV0RGVidWdTdHJpbmcgKFwic3NwIG9uXCIpIHRv
IGVuYWJsZSBzdGVwcGluZywgb3IgXCJzc3Agb2ZmXCIgdG9cblwNCi1kaXNh
YmxlIGl0LiAgVGh1cywgeW91IGNhbiBwcm9maWxlIGEgc2luZ2xlIGZ1bmN0
aW9uIGNhbGwgb3IgYmxvY2suXG5cDQotXG5cDQotLXQgPSB0cmFjZSBldmVy
eSBFSVAgdmFsdWUgdG8gYSBmaWxlIFRSQUNFLlNTUC4gIFRoaXMgZ2V0cyBi
aWcgKmZhc3QqLlxuXA0KLVVzZSBcImFkZHIybGluZSAtQyAtZiAtcyAtZSBm
b28uZXhlIDwgdHJhY2Uuc3NwID4gbGluZXMuc3NwXCIgYW5kIHRoZW5cblwN
Ci1cInBlcmwgY3Z0dHJhY2VcIiB0byBjb252ZXJ0IHRvIHN5bWJvbGljIHRy
YWNlcy5cblwNCi1cblwNCi0tdGMgPSB0cmFjZSBldmVyeSBFSVAgdmFsdWUg
dG8gdGhlIGNvbnNvbGUuICAqTG90cyogc2xvd2VyLlxuXA0KLVxuXA0KLS1z
ID0gdHJhY2Ugc3ViLXRocmVhZHMgdG9vLiAgRGFuZ2Vyb3VzIGlmIHlvdSBo
YXZlIHJhY2UgY29uZGl0aW9ucy5cblwNCi1cblwNCi0tZGxsID0gZW5hYmxl
IGRsbCBwcm9maWxpbmcuICBBIGNoYXJ0IG9mIHJlbGF0aXZlIERMTCB1c2Fn
ZSBpc1xuXA0KLXByb2R1Y2VkIGFmdGVyIHRoZSBydW4uXG5cDQotXG5cDQot
RXhhbXBsZXM6XG5cDQotICBzc3AgMHg0MDEwMDAgMHg0MDMwMDAgaGVsbG8u
ZXhlXG5cDQotICBzc3AgLXYgLWQgLWRsbCAweDQwMTAwMCAweDQ0MDAwMCBm
b28uZXhlXG5cDQotXG5cDQotVGhlIG91dHB1dCBpcyBhIGZpbGUgXCJnbW9u
Lm91dFwiIHRoYXQgY2FuIGJlIHJlYWQgd2l0aCBncHJvZjpcblwNCi0gIGdw
cm9mIC1iIGZvby5leGVcblwNCi1cblwNCi1TZWUgc3NwLnR4dCBpbiB0aGUg
Y3lnd2luIHNvdXJjZXMgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG5cDQotIjsN
Ci0jZWxzZQ0KLWNoYXIgKmhlbHBfdGV4dCA9ICJVc2FnZTogZ2V0IGN5Z3dp
biFcbiI7DQotI2VuZGlmDQorc3RhdGljIGNvbnN0IGNoYXIgdmVyc2lvbltd
ID0gIiRSZXZpc2lvbjogMS4zICQiOw0KK3N0YXRpYyBjaGFyICpwcm9nX25h
bWU7DQorDQorc3RhdGljIHN0cnVjdCBvcHRpb24gbG9uZ29wdHNbXSA9DQor
ew0KKyAgeyJjb25zb2xlLXRyYWNlIiwgbm9fYXJndW1lbnQsIE5VTEwsICdj
JyB9LA0KKyAgeyJkaXNhYmxlIiwgbm9fYXJndW1lbnQsIE5VTEwsICdkJyB9
LA0KKyAgeyJlbmFibGUiLCBub19hcmd1bWVudCwgTlVMTCwgJ2UnIH0sDQor
ICB7ImhlbHAiLCBub19hcmd1bWVudCwgTlVMTCwgJ2gnIH0sDQorICB7ImRs
bCIsIG5vX2FyZ3VtZW50LCBOVUxMLCAnbCcgfSwNCisgIHsic3ViLXRocmVh
ZHMiLCBub19hcmd1bWVudCwgTlVMTCwgJ3MnIH0sDQorICB7InRyYWNlLWVp
cCIsIG5vX2FyZ3VtZW50LCBOVUxMLCAndCcgfSwNCisgIHsidmVyYm9zZSIs
IG5vX2FyZ3VtZW50LCBOVUxMLCAndicgfSwNCisgIHsidmVyc2lvbiIsIG5v
X2FyZ3VtZW50LCBOVUxMLCAnVicgfSwNCisgIHtOVUxMLCAwLCBOVUxMLCAw
fQ0KK307DQorDQorc3RhdGljIGNoYXIgb3B0c1tdID0gImNkZWhsc3R2ViI7
DQogDQogI2RlZmluZSBLRVJORUxfQUREUiAweDc3MDAwMDAwDQogDQpAQCAt
MTAyLDcgKzc1LDYgQEAgdHlwZWRlZiBzdHJ1Y3Qgew0KIGludCBsb3dfcGM9
MCwgaGlnaF9wYz0wOw0KIHVuc2lnbmVkIGludCBsYXN0X3BjPTAsIHBjLCBs
YXN0X3NwPTAsIHNwOw0KIGludCB0b3RhbF9jeWNsZXMsIGNvdW50Ow0KLWNo
YXIgKmNtZF9saW5lOw0KIEhBTkRMRSBoUHJvY2VzczsNCiBQUk9DRVNTX0lO
Rk9STUFUSU9OIHByb2NpbmZvOw0KIFNUQVJUVVBJTkZPIHN0YXJ0dXA7DQpA
QCAtMzMwLDcgKzMwMiw3IEBAIHJ1bl9wcm9ncmFtIChjaGFyICpjbWRsaW5l
KQ0KICAgbWVtc2V0ICgmc3RhcnR1cCwgMCwgc2l6ZW9mIChzdGFydHVwKSk7
DQogICBzdGFydHVwLmNiID0gc2l6ZW9mIChzdGFydHVwKTsNCiANCi0gIGlm
ICghQ3JlYXRlUHJvY2VzcyAoMCwgY21kX2xpbmUsIDAsIDAsIDAsDQorICBp
ZiAoIUNyZWF0ZVByb2Nlc3MgKDAsIGNtZGxpbmUsIDAsIDAsIDAsDQogCQkg
ICAgIENSRUFURV9ORVdfUFJPQ0VTU19HUk9VUA0KIAkJICAgICB8IENSRUFU
RV9TVVNQRU5ERUQNCiAJCSAgICAgfCBERUJVR19QUk9DRVNTDQpAQCAtMzU1
LDcgKzMyNyw3IEBAIHJ1bl9wcm9ncmFtIChjaGFyICpjbWRsaW5lKQ0KICAg
ZGxsX2luZm9bMF0uYmFzZV9hZGRyZXNzID0gMDsNCiAgIGRsbF9pbmZvWzBd
LnBjb3VudCA9IDA7DQogICBkbGxfaW5mb1swXS5zY291bnQgPSAwOw0KLSAg
ZGxsX2luZm9bMF0ubmFtZSA9IGNtZF9saW5lOw0KKyAgZGxsX2luZm9bMF0u
bmFtZSA9IGNtZGxpbmU7DQogICBudW1fZGxscyA9IDE7DQogDQogICBTZXRU
aHJlYWRQcmlvcml0eSAocHJvY2luZm8uaFRocmVhZCwgVEhSRUFEX1BSSU9S
SVRZX0lETEUpOw0KQEAgLTY3MSw3NiArNjQzLDI1MCBAQCBydW5fcHJvZ3Jh
bSAoY2hhciAqY21kbGluZSkNCiANCiB9DQogDQotI2RlZmluZSBXSElURShz
KSB3aGlsZSAoaXNzcGFjZSAoKnMpKSBzKysNCitzdGF0aWMgdm9pZA0KK3Vz
YWdlIChGSUxFICogc3RyZWFtKQ0KK3sNCisgIGZwcmludGYgKHN0cmVhbSAs
ICIiDQorICAiVXNhZ2U6ICVzIFtvcHRpb25zXSBsb3dfcGMgaGlnaF9wYyBj
b21tYW5kLi4uXG4iDQorICAiIC1jLCAtLWNvbnNvbGUtdHJhY2UgIHRyYWNl
IGV2ZXJ5IEVJUCB2YWx1ZSB0byB0aGUgY29uc29sZS4gKkxvdHMqIHNsb3dl
ci5cbiINCisgICIgLWQsIC0tZGlzYWJsZSAgICAgICAgZGlzYWJsZSBzaW5n
bGUtc3RlcHBpbmcgYnkgZGVmYXVsdDsgdXNlXG4iDQorICAiICAgICAgICAg
ICAgICAgICAgICAgIE91dHB1dERlYnVnU3RyaW5nIChcInNzcCBvblwiKSB0
byBlbmFibGUgc3RlcHBpbmdcbiINCisgICIgLWUsIC0tZW5hYmxlICAgICAg
ICAgZW5hYmxlIHNpbmdsZS1zdGVwcGluZyBieSBkZWZhdWx0OyB1c2VcbiIN
CisgICIgICAgICAgICAgICAgICAgICAgICAgT3V0cHV0RGVidWdTdHJpbmcg
KFwic3NwIG9mZlwiKSB0byBkaXNhYmxlIHN0ZXBwaW5nXG4iDQorICAiIC1o
LCAtLWhlbHAgICAgICAgICAgIG91dHB1dCB1c2FnZSBpbmZvcm1hdGlvbiBh
bmQgZXhpdFxuIg0KKyAgIiAtbCwgLS1kbGwgICAgICAgICAgICBlbmFibGUg
ZGxsIHByb2ZpbGluZy4gIEEgY2hhcnQgb2YgcmVsYXRpdmUgRExMIHVzYWdl
XG4iDQorICAiICAgICAgICAgICAgICAgICAgICAgIGlzIHByb2R1Y2VkIGFm
dGVyIHRoZSBydW4uXG4iDQorICAiIC1zLCAtLXN1Yi10aHJlYWRzICAgIHRy
YWNlIHN1Yi10aHJlYWRzIHRvby4gIERhbmdlcm91cyBpZiB5b3UgaGF2ZVxu
IiANCisgICIgICAgICAgICAgICAgICAgICAgICAgcmFjZSBjb25kaXRpb25z
LlxuIg0KKyAgIiAtdCwgLS10cmFjZS1laXAgICAgICB0cmFjZSBldmVyeSBF
SVAgdmFsdWUgdG8gYSBmaWxlIFRSQUNFLlNTUC4gIFRoaXNcbiINCisgICIg
ICAgICAgICAgICAgICAgICAgICAgZ2V0cyBiaWcgKmZhc3QqLlxuIg0KKyAg
IiAtdiwgLS12ZXJib3NlICAgICAgICBvdXRwdXQgdmVyYm9zZSBtZXNzYWdl
cyBhYm91dCBkZWJ1ZyBldmVudHMuXG4iDQorICAiIC1WLCAtLXZlcnNpb24g
ICAgICAgIG91dHB1dCB2ZXJzaW9uIGluZm9ybWF0aW9uIGFuZCBleGl0XG4i
DQorICAiXG4iDQorICAiRXhhbXBsZTogJXMgMHg0MDEwMDAgMHg0MDMwMDAg
aGVsbG8uZXhlXG4iDQorICAiXG4iDQorICAiIiwgcHJvZ19uYW1lLCBwcm9n
X25hbWUpOw0KKyAgaWYgKHN0cmVhbSA9PSBzdGRvdXQpDQorICAgIGZwcmlu
dGYgKHN0cmVhbSAsICIiDQorICAgICJTU1AgLSBUaGUgU2luZ2xlIFN0ZXAg
UHJvZmlsZXJcbiINCisgICAgIlxuIg0KKyAgICAiT3JpZ2luYWwgQXV0aG9y
OiAgREogRGVsb3JpZSA8ZGpAcmVkaGF0LmNvbT5cbiINCisgICAgIlxuIg0K
KyAgICAiVGhlIFNTUCBpcyBhIHByb2dyYW0gdGhhdCB1c2VzIHRoZSBXaW4z
MiBkZWJ1ZyBBUEkgdG8gcnVuIGEgcHJvZ3JhbVxuIg0KKyAgICAib25lIEFT
TSBpbnN0cnVjdGlvbiBhdCBhIHRpbWUuICBJdCByZWNvcmRzIHRoZSBsb2Nh
dGlvbiBvZiBlYWNoXG4iDQorICAgICJpbnN0cnVjdGlvbiB1c2VkLCBob3cg
bWFueSB0aW1lcyB0aGF0IGluc3RydWN0aW9uIGlzIHVzZWQsIGFuZCBhbGxc
biINCisgICAgImZ1bmN0aW9uIGNhbGxzLiAgVGhlIHJlc3VsdHMgYXJlIHNh
dmVkIGluIGEgZm9ybWF0IHRoYXQgaXMgdXNhYmxlIGJ5XG4iDQorICAgICJ0
aGUgcHJvZmlsaW5nIHByb2dyYW0gXCJncHJvZlwiLCBhbHRob3VnaCBncHJv
ZiB3aWxsIGNsYWltIHRoZSB2YWx1ZXNcbiINCisgICAgImFyZSBzZWNvbmRz
LCB0aGV5IHJlYWxseSBhcmUgaW5zdHJ1Y3Rpb24gY291bnRzLiAgTW9yZSBv
biB0aGF0IGxhdGVyLlxuIg0KKyAgICAiXG4iDQorICAgICJCZWNhdXNlIHRo
ZSBTU1Agd2FzIG9yaWdpbmFsbHkgZGVzaWduZWQgdG8gcHJvZmlsZSB0aGUg
Y3lnd2luIERMTCwgaXRcbiINCisgICAgImRvZXMgbm90IGF1dG9tYXRpY2Fs
bHkgc2VsZWN0IGEgYmxvY2sgb2YgY29kZSB0byByZXBvcnQgc3RhdGlzdGlj
cyBvbi5cbiINCisgICAgIllvdSBtdXN0IHNwZWNpZnkgdGhlIHJhbmdlIG9m
IG1lbW9yeSBhZGRyZXNzZXMgdG8ga2VlcCB0cmFjayBvZlxuIg0KKyAgICAi
bWFudWFsbHksIGJ1dCBpdCdzIG5vdCBoYXJkIHRvIGZpZ3VyZSBvdXQgd2hh
dCB0byBzcGVjaWZ5LiAgVXNlIHRoZVxuIg0KKyAgICAiXCJvYmpkdW1wXCIg
cHJvZ3JhbSB0byBkZXRlcm1pbmUgdGhlIGJvdW5kcyBvZiB0aGUgdGFyZ2V0
J3MgXCIudGV4dFwiXG4iDQorICAgICJzZWN0aW9uLiAgTGV0J3Mgc2F5IHdl
J3JlIHByb2ZpbGluZyBjeWd3aW4xLmRsbC4gIE1ha2Ugc3VyZSB5b3UndmVc
biINCisgICAgImJ1aWx0IGl0IHdpdGggZGVidWcgc3ltYm9scyAoZWxzZSBn
cHJvZiB3b24ndCBydW4pIGFuZCBydW4gb2JqZHVtcFxuIg0KKyAgICAibGlr
ZSB0aGlzOlxuIg0KKyAgICAiXG4iDQorICAgICIJb2JqZHVtcCAtaCBjeWd3
aW4xLmRsbFxuIg0KKyAgICAiXG4iDQorICAgICJJdCB3aWxsIHByaW50IGEg
cmVwb3J0IGxpa2UgdGhpczpcbiINCisgICAgIlxuIg0KKyAgICAiY3lnd2lu
MS5kbGw6ICAgICBmaWxlIGZvcm1hdCBwZWktaTM4NlxuIg0KKyAgICAiXG4i
DQorICAgICJTZWN0aW9uczpcbiINCisgICAgIklkeCBOYW1lICAgICAgICAg
IFNpemUgICAgICBWTUEgICAgICAgTE1BICAgICAgIEZpbGUgb2ZmICBBbGdu
XG4iDQorICAgICIgIDAgLnRleHQgICAgICAgICAwMDA3ZWEwMCAgNjEwMDEw
MDAgIDYxMDAxMDAwICAwMDAwMDQwMCAgMioqMlxuIg0KKyAgICAiICAgICAg
ICAgICAgICAgICAgQ09OVEVOVFMsIEFMTE9DLCBMT0FELCBSRUFET05MWSwg
Q09ERSwgREFUQVxuIg0KKyAgICAiICAxIC5kYXRhICAgICAgICAgMDAwMDgw
MDAgIDYxMDgwMDAwICA2MTA4MDAwMCAgMDAwN2VlMDAgIDIqKjJcbiINCisg
ICAgIiAgICAgICAgICAgICAgICAgIENPTlRFTlRTLCBBTExPQywgTE9BRCwg
REFUQVxuIg0KKyAgICAiICAuIC4gLlxuIg0KKyAgICAiXG4iDQorICAgICJU
aGUgb25seSBpbmZvcm1hdGlvbiB3ZSdyZSBjb25jZXJuZWQgd2l0aCBhcmUg
dGhlIFZNQSBvZiB0aGUgLnRleHRcbiINCisgICAgInNlY3Rpb24gYW5kIHRo
ZSBWTUEgb2YgdGhlIHNlY3Rpb24gYWZ0ZXIgaXQgKHNlY3Rpb25zIGFyZSB1
c3VhbGx5XG4iDQorICAgICJjb250aWd1b3VzOyB5b3UgY2FuIGFsc28gYWRk
IHRoZSBTaXplIHRvIHRoZSBWTUEgdG8gZ2V0IHRoZSBlbmRcbiINCisgICAg
ImFkZHJlc3MpLiAgSW4gdGhpcyBjYXNlLCB0aGUgVk1BIGlzIDB4NjEwMDEw
MDAgYW5kIHRoZSBlbmRpbmcgYWRkcmVzc1xuIg0KKyAgICAiaXMgZWl0aGVy
IDB4NjEwODAwMDAgKHN0YXJ0IG9mIC5kYXRhIG1ldGhvZCkgb3IgMHgweDYx
MDdmYTAwIChWTUErU2l6ZVxuIg0KKyAgICAibWV0aG9kKS5cbiINCisgICAg
IlxuIg0KKyAgICAiVGhlcmUgYXJlIHR3byBiYXNpYyB3YXlzIHRvIHVzZSBT
U1AgLSBlaXRoZXIgcHJvZmlsaW5nIGEgd2hvbGVcbiINCisgICAgInByb2dy
YW0sIG9yIHNlbGVjdGl2ZWx5IHByb2ZpbGluZyBwYXJ0cyBvZiB0aGUgcHJv
Z3JhbS5cbiINCisgICAgIlxuIg0KKyAgICAiVG8gcHJvZmlsZSBhIHdob2xl
IHByb2dyYW0sIGp1c3QgcnVuIHNzcCB3aXRob3V0IG9wdGlvbnMuICBCeSBk
ZWZhdWx0LFxuIg0KKyAgICAiaXQgd2lsbCBzdGVwIHRoZSB3aG9sZSBwcm9n
cmFtLiAgSGVyZSdzIGEgc2ltcGxlIGV4YW1wbGUsIHVzaW5nIHRoZVxuIg0K
KyAgICAibnVtYmVycyBhYm92ZTpcbiINCisgICAgIlxuIg0KKyAgICAiCXNz
cCAweDYxMDAxMDAwIDB4NjEwODAwMDAgaGVsbG8uZXhlXG4iDQorICAgICJc
biINCisgICAgIlRoaXMgd2lsbCBzdGVwIHRoZSB3aG9sZSBwcm9ncmFtLiAg
SXQgd2lsbCB0YWtlIGF0IGxlYXN0IDggbWludXRlcyBvblxuIg0KKyAgICAi
YSBQSUkvMzAwICh5ZXMsIHJlYWxseSkuICBXaGVuIGl0J3MgZG9uZSwgaXQg
d2lsbCBjcmVhdGUgYSBmaWxlIGNhbGxlZFxuIg0KKyAgICAiXCJnbW9uLm91
dFwiLiAgWW91IGNhbiB0dXJuIHRoaXMgZGF0YSBmaWxlIGludG8gYSByZWFk
YWJsZSByZXBvcnQgd2l0aFxuIg0KKyAgICAiZ3Byb2Y6XG4iDQorICAgICJc
biINCisgICAgIglncHJvZiAtYiBjeWd3aW4xLmRsbFxuIg0KKyAgICAiXG4i
DQorICAgICJUaGUgXCItYlwiIG1lYW5zICdza2lwIHRoZSBoZWxwIHBhZ2Vz
Jy4gIFlvdSBjYW4gb21pdCB0aGlzIHVudGlsIHlvdSdyZVxuIg0KKyAgICAi
ZmFtaWxpYXIgd2l0aCB0aGUgcmVwb3J0IGxheW91dC4gIFRoZSBncHJvZiBk
b2N1bWVudGF0aW9uIGV4cGxhaW5zXG4iDQorICAgICJhIGxvdCBhYm91dCB0
aGlzIHJlcG9ydCwgYnV0IHNzcCBjaGFuZ2VzIGEgZmV3IHRoaW5ncy4gIEZv
ciBleGFtcGxlLFxuIg0KKyAgICAidGhlIGZpcnN0IHBhcnQgb2YgdGhlIHJl
cG9ydCByZXBvcnRzIHRoZSBhbW91bnQgb2YgdGltZSBzcGVudCBpbiBlYWNo
XG4iDQorICAgICJmdW5jdGlvbiwgbGlrZSB0aGlzOlxuIg0KKyAgICAiXG4i
DQorICAgICJFYWNoIHNhbXBsZSBjb3VudHMgYXMgMC4wMSBzZWNvbmRzLlxu
Ig0KKyAgICAiICAlJSAgIGN1bXVsYXRpdmUgICBzZWxmICAgICAgICAgICAg
ICBzZWxmICAgICB0b3RhbFxuIg0KKyAgICAiIHRpbWUgICBzZWNvbmRzICAg
c2Vjb25kcyAgICBjYWxscyAgbXMvY2FsbCAgbXMvY2FsbCAgbmFtZVxuIg0K
KyAgICAiIDEwLjAyICAgIDIzMS4yMiAgICA3Mi40MyAgICAgICA0NiAgMTU3
NC41NyAgMTU3NC41NyAgc3RyY3NwblxuIg0KKyAgICAiICA3Ljk1ICAgIDI4
OC43MCAgICA1Ny40OCAgICAgIDEzMCAgIDQ0Mi4xNSAgIDQ0Mi4xNSAgc3Ry
bmNhc2VtYXRjaFxuIg0KKyAgICAiXG4iDQorICAgICJUaGUgXCJzZWNvbmRz
XCIgY29sdW1ucyBhcmUgcmVhbGx5IENQVSBvcGNvZGVzLCAxLzEwMCBzZWNv
bmQgcGVyIG9wY29kZS5cbiINCisgICAgIlNvLCBcIjIzMS4yMlwiIGFib3Zl
IG1lYW5zIDIzLDEyMiBvcGNvZGVzLiAgVGhlIG1zL2NhbGwgdmFsdWVzIGFy
ZSAxMHhcbiINCisgICAgInRvbyBiaWc7IDE1NzQuNTcgbWVhbnMgMTU3LjQ1
NyBvcGNvZGVzIHBlciBjYWxsLiAgU2ltaWxhciBhZGp1c3RtZW50c1xuIg0K
KyAgICAibmVlZCB0byBiZSBtYWRlIGZvciB0aGUgXCJzZWxmXCIgYW5kIFwi
Y2hpbGRyZW5cIiBjb2x1bW5zIGluIHRoZSBzZWNvbmRcbiINCisgICAgInBh
cnQgb2YgdGhlIHJlcG9ydC5cbiINCisgICAgIlxuIg0KKyAgICAiT0ssIHNv
IG5vdyB3ZSd2ZSBnb3QgYSBodWdlIHJlcG9ydCB0aGF0IHRvb2sgYSBsb25n
IHRpbWUgdG8gZ2VuZXJhdGUsXG4iDQorICAgICJhbmQgd2UndmUgaWRlbnRp
ZmllZCBhIHNwb3Qgd2Ugd2FudCB0byB3b3JrIG9uIG9wdGltaXppbmcuICBM
ZXQncyBzYXlcbiINCisgICAgIml0J3MgdGhlIHRpbWUoKSBmdW5jdGlvbi4g
IFdlIGNhbiB1c2UgU1NQIHRvIHNlbGVjdGl2ZWx5IHByb2ZpbGUgdGhpc1xu
Ig0KKyAgICAiZnVuY3Rpb24gYnkgdXNpbmcgT3V0cHV0RGVidWdTdHJpbmco
KSB0byBjb250cm9sIFNTUCBmcm9tIHdpdGhpbiB0aGVcbiINCisgICAgInBy
b2dyYW0uICBIZXJlJ3MgYSBzYW1wbGUgcHJvZ3JhbTpcbiINCisgICAgIlxu
Ig0KKyAgICAiCSNpbmNsdWRlIDx3aW5kb3dzLmg+XG4iDQorICAgICIJbWFp
bigpXG4iDQorICAgICIJe1xuIg0KKyAgICAiCSAgdGltZV90IHQ7XG4iDQor
ICAgICIJICBPdXRwdXREZWJ1Z1N0cmluZyhcInNzcCBvblwiKTtcbiINCisg
ICAgIgkgIHRpbWUoJnQpO1xuIg0KKyAgICAiCSAgT3V0cHV0RGVidWdTdHJp
bmcoXCJzc3Agb2ZmXCIpO1xuIg0KKyAgICAiCX1cbiINCisgICAgIlxuIg0K
KyAgICAiVGhlbiwgYWRkIHRoZSBcIi1kXCIgb3B0aW9uIHRvIHNzcCB0byBk
ZWZhdWx0IHRvICpkaXNhYmxpbmcqIHByb2ZpbGluZy5cbiINCisgICAgIlRo
ZSBwcm9ncmFtIHdpbGwgcnVuIGF0IGZ1bGwgc3BlZWQgdW50aWwgdGhlIGZp
cnN0IE91dHB1dERlYnVnU3RyaW5nLFxuIg0KKyAgICAidGhlbiBzdGVwIHVu
dGlsIHRoZSBzZWNvbmQuXG4iDQorICAgICJcbiINCisgICAgIglzc3AgLWQg
MHg2MTAwMTAwMCAweDYxMDgwMDAwIGhlbGxvLmV4ZVxuIg0KKyAgICAiXG4i
DQorICAgICJZb3UgY2FuIHRoZW4gdXNlIGdwcm9mIChhcyB1c3VhbCkgdG8g
c2VlIHRoZSBwZXJmb3JtYW5jZSBwcm9maWxlIGZvclxuIg0KKyAgICAianVz
dCB0aGF0IHBvcnRpb24gb2YgdGhlIHByb2dyYW0ncyBleGVjdXRpb24uXG4i
DQorICAgICJcbiINCisgICAgIlRoZXJlIGFyZSBtYW55IG9wdGlvbnMgdG8g
c3NwLiAgU2luY2Ugc3RlcC1wcm9maWxpbmcgbWFrZXMgeW91clxuIg0KKyAg
ICAicHJvZ3JhbSBydW4gYWJvdXQgMSwwMDAgdGltZXMgc2xvd2VyIHRoYW4g
bm9ybWFsLCBpdCdzIGJlc3QgdG9cbiINCisgICAgInVuZGVyc3RhbmQgYWxs
IHRoZSBvcHRpb25zIHNvIHRoYXQgeW91IGNhbiBuYXJyb3cgZG93biB0aGUg
cGFydHNcbiINCisgICAgIm9mIHlvdXIgcHJvZ3JhbSB5b3UgbmVlZCB0byBz
aW5nbGUtc3RlcC5cbiINCisgICAgIlxuIg0KKyAgICAiXCItdlwiIC0gdmVy
Ym9zZS4gIFRoaXMgcHJpbnRzIG1lc3NhZ2VzIGFib3V0IHRocmVhZHMgc3Rh
cnRpbmcgYW5kXG4iDQorICAgICJzdG9wcGluZywgT3V0cHV0RGVidWdTdHJp
bmcgY2FsbHMsIERMTHMgbG9hZGluZywgZXRjLlxuIg0KKyAgICAiXG4iDQor
ICAgICJcIi10XCIgYW5kIFwiLWNcIiAtIHRyYWNpbmcuICBXaXRoIC10LCAq
ZXZlcnkqIHN0ZXAncyBhZGRyZXNzIGlzIHdyaXR0ZW5cbiINCisgICAgInRv
IHRoZSBmaWxlIFwidHJhY2Uuc3NwXCIuICBUaGlzIGNhbiBiZSB1c2VkIHRv
IGhlbHAgZGVidWcgZnVuY3Rpb25zLFxuIg0KKyAgICAic2luY2UgaXQgY2Fu
IHRyYWNlIG11bHRpcGxlIHRocmVhZHMuICBDbGV2ZXIgdXNlIG9mIHNjcmlw
dHMgY2FuIG1hdGNoXG4iDQorICAgICJhZGRyZXNzZXMgd2l0aCBkaXNhc3Nl
bWJsZWQgb3Bjb2RlcyBpZiBuZWVkZWQuICBXYXJuaW5nOiBjcmVhdGVzXG4i
DQorICAgICIqaHVnZSogZmlsZXMsIHZlcnkgcXVpY2tseS4gIFwiLWNcIiBw
cmludHMgZWFjaCBhZGRyZXNzIHRvIHRoZSBjb25zb2xlLFxuIg0KKyAgICAi
dXNlZnVsIGZvciBkZWJ1Z2dpbmcga2V5IGNodW5rcyBvZiBhc3NlbWJsZXIu
XG4iDQorICAgICJVc2UgXCJhZGRyMmxpbmUgLUMgLWYgLXMgLWUgZm9vLmV4
ZSA8IHRyYWNlLnNzcCA+IGxpbmVzLnNzcFwiIGFuZCB0aGVuXG4iDQorICAg
ICJcInBlcmwgY3Z0dHJhY2VcIiB0byBjb252ZXJ0IHRvIHN5bWJvbGljIHRy
YWNlcy5cbiINCisgICAgIlxuIg0KKyAgICAiXCItc1wiIC0gc3VidGhyZWFk
cy4gIFVzdWFsbHksIHlvdSBvbmx5IG5lZWQgdG8gdHJhY2UgdGhlIG1haW4g
dGhyZWFkLFxuIg0KKyAgICAiYnV0IHNvbWV0aW1lcyB5b3UgbmVlZCB0byB0
cmFjZSBhbGwgdGhyZWFkcywgc28gdGhpcyBlbmFibGVzIHRoYXQuXG4iDQor
ICAgICJJdCdzIGFsc28gbmVlZGVkIHdoZW4geW91IHdhbnQgdG8gcHJvZmls
ZSBhIGZ1bmN0aW9uIHRoYXQgb25seSBhXG4iDQorICAgICJzdWJ0aHJlYWQg
Y2FsbHMuICBIb3dldmVyLCB1c2luZyBPdXRwdXREZWJ1Z1N0cmluZyBhdXRv
bWF0aWNhbGx5XG4iDQorICAgICJlbmFibGVzIHByb2ZpbGluZyBvbiB0aGUg
dGhyZWFkIHRoYXQgY2FsbGVkIGl0LCBub3QgdGhlIG1haW4gdGhyZWFkLlxu
Ig0KKyAgICAiXG4iDQorICAgICJcIi1sXCIgLSBkbGwgcHJvZmlsaW5nLiAg
R2VuZXJhdGVzIGEgcHJldHR5IHRhYmxlIG9mIGhvdyBtdWNoIHRpbWUgd2Fz
XG4iDQorICAgICJzcGVudCBpbiBlYWNoIGRsbCB0aGUgcHJvZ3JhbSB1c2Vk
LiAgTm8gc2Vuc2Ugb3B0aW1pemluZyBhIGZ1bmN0aW9uIGluXG4iDQorICAg
ICJ5b3VyIHByb2dyYW0gaWYgbW9zdCBvZiB0aGUgdGltZSBpcyBzcGVudCBp
biB0aGUgRExMLlxuIg0KKyAgICAiXG4iDQorICAgICJJIHVzdWFsbHkgdXNl
IHRoZSAtdiwgLXMsIGFuZCAtbCBvcHRpb25zOlxuIg0KKyAgICAiXG4iDQor
ICAgICIJc3NwIC12IC1zIC1sIC1kIDB4NjEwMDEwMDAgMHg2MTA4MDAwMCBo
ZWxsby5leGVcbiINCisgICAgIlxuIik7DQorICBpZiAoc3RyZWFtID09IHN0
ZGVycikNCisgICAgZnByaW50ZiAoc3RyZWFtLCAiVHJ5ICclcyAtLWhlbHAn
IGZvciBtb3JlIGluZm9ybWF0aW9uLiIsIHByb2dfbmFtZSk7DQorICBleGl0
IChzdHJlYW0gPT0gc3RkZXJyID8gMSA6IDApOw0KK30NCisNCitzdGF0aWMg
dm9pZA0KK3ByaW50X3ZlcnNpb24gKCkNCit7DQorICBjb25zdCBjaGFyICp2
ID0gc3RyY2hyICh2ZXJzaW9uLCAnOicpOw0KKyAgaW50IGxlbjsNCisgIGlm
ICghdikNCisgICAgew0KKyAgICAgIHYgPSAiPyI7DQorICAgICAgbGVuID0g
MTsNCisgICAgfQ0KKyAgZWxzZQ0KKyAgICB7DQorICAgICAgdiArPSAyOw0K
KyAgICAgIGxlbiA9IHN0cmNociAodiwgJyAnKSAtIHY7DQorICAgIH0NCisg
IHByaW50ZiAoIlwNCislcyAoY3lnd2luKSAlLipzXG5cDQorU2luZ2xlLVN0
ZXAgUHJvZmlsZXJcblwNCitDb3B5cmlnaHQgMjAwMCwgMjAwMSwgMjAwMiBS
ZWQgSGF0LCBJbmMuXG5cDQorQ29tcGlsZWQgb24gJXMiLCBwcm9nX25hbWUs
IGxlbiwgdiwgX19EQVRFX18pOw0KK30NCiANCiBpbnQNCiBtYWluIChpbnQg
YXJnYywgY2hhciAqKmFyZ3YpDQogew0KLSAgaW50IGksIG47DQorICBpbnQg
YywgaTsNCiAgIGludCB0b3RhbF9wY291bnQsIHRvdGFsX3Njb3VudDsNCiAg
IEZJTEUgKmdtb247DQogDQogICBzZXRidWYgKHN0ZG91dCwgMCk7DQogDQot
ICBjbWRfbGluZSA9IEdldENvbW1hbmRMaW5lICgpOw0KLQ0KLSAgLyogc3Ry
aXAgb2ZmIHRoZSBwcm9ncmFtIHBhcnQgKi8NCi0gIG4gPSBzc2NhbmYgKGNt
ZF9saW5lLCAiJSpzJW4iLCAmaSk7DQotICBjbWRfbGluZSArPSBpOw0KLSAg
V0hJVEUgKGNtZF9saW5lKTsNCi0NCi0gIC8qIHBhcnNlIGFyZ3VtZW50cy4g
IFVnbHksIGJ1dCB3ZSBuZWVkIHRvIHByZXNlcnZlIHRoZSB0YWlsIG9mIHRo
ZSBsaW5lICovDQotICB3aGlsZSAoKmNtZF9saW5lID09ICctJykNCi0gICAg
ew0KLSAgICAgIGNoYXIgb3B0WzEwMF07DQotICAgICAgbiA9IHNzY2FuZiAo
Y21kX2xpbmUsICIgJXMlbiIsIG9wdCwgJmkpOw0KLSAgICAgIGNtZF9saW5l
ICs9IGk7DQotICAgICAgV0hJVEUgKGNtZF9saW5lKTsNCi0NCi0gICAgICBp
ZiAoc3RyY21wIChvcHQsICItZCIpID09IDApDQotCXsNCi0JICBwcmludGYg
KCJzdGVwcGluZyBkaXNhYmxlZDsgZW5hYmxlIHZpYSBPdXRwdXREZWJ1Z1N0
cmluZyAoXCJzc3Agb25cIilcbiIpOw0KLQkgIHN0ZXBwaW5nX2VuYWJsZWQg
PSAwOw0KLQl9DQotICAgICAgaWYgKHN0cmNtcCAob3B0LCAiLWUiKSA9PSAw
KQ0KLQl7DQotCSAgcHJpbnRmICgic3RlcHBpbmcgZW5hYmxlZDsgZGlzYWJs
ZSB2aWEgT3V0cHV0RGVidWdTdHJpbmcgKFwic3NwIG9mZlwiKVxuIik7DQot
CSAgc3RlcHBpbmdfZW5hYmxlZCA9IDE7DQotCX0NCi0gICAgICBpZiAoc3Ry
Y21wIChvcHQsICItdCIpID09IDApDQotCXsNCi0JICBwcmludGYgKCJ0cmFj
aW5nIGFsbCAkZWlwIHRvIHRyYWNlLnNzcFxuIik7DQotCSAgdHJhY2luZ19l
bmFibGVkID0gMTsNCi0JfQ0KLSAgICAgIGlmIChzdHJjbXAgKG9wdCwgIi10
YyIpID09IDApDQotCXsNCi0JICBwcmludGYgKCJ0cmFjaW5nICphbGwqICRl
aXAgdG8gdGhlIGNvbnNvbGVcbiIpOw0KLQkgIHRyYWNlX2NvbnNvbGUgPSAx
Ow0KLQl9DQotICAgICAgaWYgKHN0cmNtcCAob3B0LCAiLXMiKSA9PSAwKQ0K
LQl7DQotCSAgcHJpbnRmICgidHJhY2luZyBhbGwgc3ViLXRocmVhZHMgdG9v
LCBub3QganVzdCB0aGUgbWFpbiBvbmVcbiIpOw0KLQkgIHRyYWNlX2FsbF90
aHJlYWRzID0gMTsNCi0JfQ0KLSAgICAgIGlmIChzdHJjbXAgKG9wdCwgIi1k
bGwiKSA9PSAwKQ0KLQl7DQotCSAgcHJpbnRmICgicHJvZmlsaW5nIGRsbCB1
c2FnZVxuIik7DQotCSAgZGxsX2NvdW50cyA9IDE7DQotCX0NCi0gICAgICBp
ZiAoc3RyY21wIChvcHQsICItdiIpID09IDApDQotCXsNCi0JICBwcmludGYg
KCJ2ZXJib3NlIG1lc3NhZ2VzIGVuYWJsZWRcbiIpOw0KLQkgIHZlcmJvc2Ug
PSAxOw0KLQl9DQotICAgIH0NCi0NCi0gIG4gPSBzc2NhbmYgKGNtZF9saW5l
LCAiICVpICVpICVuIiwgJmxvd19wYywgJmhpZ2hfcGMsICZpKTsNCi0gIGlm
IChuIDwgMikNCi0gICAgew0KLSAgICAgIGZwdXRzIChoZWxwX3RleHQsIHN0
ZGVycik7DQotICAgICAgZXhpdCAoMSk7DQotICAgIH0NCi0gIGNtZF9saW5l
ICs9IGk7DQorICBwcm9nX25hbWUgPSBzdHJyY2hyIChhcmd2WzBdLCAnLycp
Ow0KKyAgaWYgKHByb2dfbmFtZSA9PSBOVUxMKQ0KKyAgICBwcm9nX25hbWUg
PSBzdHJyY2hyIChhcmd2WzBdLCAnXFwnKTsNCisgIGlmIChwcm9nX25hbWUg
PT0gTlVMTCkNCisgICAgcHJvZ19uYW1lID0gYXJndlswXTsNCisgIGVsc2UN
CisgICAgcHJvZ19uYW1lKys7DQorDQorICB3aGlsZSAoKGMgPSBnZXRvcHRf
bG9uZyAoYXJnYywgYXJndiwgb3B0cywgbG9uZ29wdHMsIE5VTEwpKSAhPSBF
T0YpDQorICAgIHN3aXRjaCAoYykNCisgICAgew0KKyAgICAgIGNhc2UgJ2Mn
Og0KKyAgICAgICAgcHJpbnRmICgidHJhY2luZyAqYWxsKiAkZWlwIHRvIHRo
ZSBjb25zb2xlXG4iKTsNCisgICAgICAgIHRyYWNlX2NvbnNvbGUgPSAxOw0K
KyAgICAgICAgYnJlYWs7DQorICAgICAgY2FzZSAnZCc6DQorICAgICAgICBw
cmludGYgKCJzdGVwcGluZyBkaXNhYmxlZDsgZW5hYmxlIHZpYSBPdXRwdXRE
ZWJ1Z1N0cmluZyAoXCJzc3Agb25cIilcbiIpOw0KKyAgICAgICAgc3RlcHBp
bmdfZW5hYmxlZCA9IDA7DQorICAgICAgICBicmVhazsNCisgICAgICBjYXNl
ICdlJzoNCisgICAgICAgIHByaW50ZiAoInN0ZXBwaW5nIGVuYWJsZWQ7IGRp
c2FibGUgdmlhIE91dHB1dERlYnVnU3RyaW5nIChcInNzcCBvZmZcIilcbiIp
Ow0KKyAgICAgICAgc3RlcHBpbmdfZW5hYmxlZCA9IDE7DQorICAgICAgICBi
cmVhazsNCisgICAgICBjYXNlICdoJzoNCisgICAgICAgIHVzYWdlIChzdGRv
dXQpOw0KKyAgICAgICAgYnJlYWs7DQorICAgICAgY2FzZSAnbCc6DQorICAg
ICAgICBwcmludGYgKCJwcm9maWxpbmcgZGxsIHVzYWdlXG4iKTsNCisgICAg
ICAgIGRsbF9jb3VudHMgPSAxOw0KKyAgICAgICAgYnJlYWs7DQorICAgICAg
Y2FzZSAncyc6DQorICAgICAgICBwcmludGYgKCJ0cmFjaW5nIGFsbCBzdWIt
dGhyZWFkcyB0b28sIG5vdCBqdXN0IHRoZSBtYWluIG9uZVxuIik7DQorICAg
ICAgICB0cmFjZV9hbGxfdGhyZWFkcyA9IDE7DQorICAgICAgICBicmVhazsN
CisgICAgICBjYXNlICd0JzoNCisgICAgICAgIHByaW50ZiAoInRyYWNpbmcg
YWxsICRlaXAgdG8gdHJhY2Uuc3NwXG4iKTsNCisgICAgICAgIHRyYWNpbmdf
ZW5hYmxlZCA9IDE7DQorICAgICAgICBicmVhazsNCisgICAgICBjYXNlICd2
JzoNCisgICAgICAgIHByaW50ZiAoInZlcmJvc2UgbWVzc2FnZXMgZW5hYmxl
ZFxuIik7DQorICAgICAgICB2ZXJib3NlID0gMTsNCisgICAgICAgIGJyZWFr
Ow0KKyAgICAgIGNhc2UgJ1YnOg0KKyAgICAgICAgcHJpbnRfdmVyc2lvbiAo
KTsNCisgICAgICAgIGV4aXQgKDApOw0KKyAgICAgIGRlZmF1bHQ6ICANCisg
ICAgICAgIHVzYWdlIChzdGRlcnIpOw0KKyAgICB9DQorDQorICBpZiAoIChh
cmdjIC0gb3B0aW5kKSA8IDMgKQ0KKyAgICB1c2FnZSAoc3RkZXJyKTsNCisg
IHNzY2FuZiAoYXJndltvcHRpbmQrK10sICIlaSIsICZsb3dfcGMpOyANCisg
IHNzY2FuZiAoYXJndltvcHRpbmQrK10sICIlaSIsICZoaWdoX3BjKTsgDQog
DQogICBpZiAobG93X3BjID4gaGlnaF9wYy04KQ0KICAgICB7DQpAQCAtNzUy
LDkgKzg5OCw5IEBAIG1haW4gKGludCBhcmdjLCBjaGFyICoqYXJndikNCiAg
IG1lbXNldCAoaGl0cywgMCwgaGlnaF9wYy1sb3dfcGMrNCk7DQogDQogICBm
cHJpbnRmIChzdGRlcnIsICJwcnVuOiBbJTA4eCwlMDh4XSBSdW5uaW5nIGAl
cydcbiIsDQotCSAgbG93X3BjLCBoaWdoX3BjLCBjbWRfbGluZSk7DQorCSAg
bG93X3BjLCBoaWdoX3BjLCBhcmd2W29wdGluZF0pOw0KIA0KLSAgcnVuX3By
b2dyYW0gKGNtZF9saW5lKTsNCisgIHJ1bl9wcm9ncmFtIChhcmd2W29wdGlu
ZF0pOw0KIA0KICAgaGRyLmxwYyA9IGxvd19wYzsNCiAgIGhkci5ocGMgPSBo
aWdoX3BjOw0K

---559023410-5639741-1023296598=:664--
